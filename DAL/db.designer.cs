#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Altagr.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="sejel_end_project")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblCurrency(tblCurrency instance);
    partial void UpdatetblCurrency(tblCurrency instance);
    partial void DeletetblCurrency(tblCurrency instance);
    partial void InserttblCurrenciesPrice(tblCurrenciesPrice instance);
    partial void UpdatetblCurrenciesPrice(tblCurrenciesPrice instance);
    partial void DeletetblCurrenciesPrice(tblCurrenciesPrice instance);
    partial void InserttblCurrenciesPricesUpdate(tblCurrenciesPricesUpdate instance);
    partial void UpdatetblCurrenciesPricesUpdate(tblCurrenciesPricesUpdate instance);
    partial void DeletetblCurrenciesPricesUpdate(tblCurrenciesPricesUpdate instance);
    partial void InserttblDocument(tblDocument instance);
    partial void UpdatetblDocument(tblDocument instance);
    partial void DeletetblDocument(tblDocument instance);
    partial void InserttblEntry(tblEntry instance);
    partial void UpdatetblEntry(tblEntry instance);
    partial void DeletetblEntry(tblEntry instance);
    partial void InserttblEntriesDetail(tblEntriesDetail instance);
    partial void UpdatetblEntriesDetail(tblEntriesDetail instance);
    partial void DeletetblEntriesDetail(tblEntriesDetail instance);
    partial void InserttblLSCashInvoice(tblLSCashInvoice instance);
    partial void UpdatetblLSCashInvoice(tblLSCashInvoice instance);
    partial void DeletetblLSCashInvoice(tblLSCashInvoice instance);
    partial void InserttblLSUnit(tblLSUnit instance);
    partial void UpdatetblLSUnit(tblLSUnit instance);
    partial void DeletetblLSUnit(tblLSUnit instance);
    partial void InserttblReceiving(tblReceiving instance);
    partial void UpdatetblReceiving(tblReceiving instance);
    partial void DeletetblReceiving(tblReceiving instance);
    partial void InserttblUnit(tblUnit instance);
    partial void UpdatetblUnit(tblUnit instance);
    partial void DeletetblUnit(tblUnit instance);
    partial void InserttblAccounts(tblAccounts instance);
    partial void UpdatetblAccounts(tblAccounts instance);
    partial void DeletetblAccounts(tblAccounts instance);
    partial void InserttblLSTypeProduct(tblLSTypeProduct instance);
    partial void UpdatetblLSTypeProduct(tblLSTypeProduct instance);
    partial void DeletetblLSTypeProduct(tblLSTypeProduct instance);
    partial void InserttblProducts(tblProducts instance);
    partial void UpdatetblProducts(tblProducts instance);
    partial void DeletetblProducts(tblProducts instance);
    partial void InserttblSpending(tblSpending instance);
    partial void UpdatetblSpending(tblSpending instance);
    partial void DeletetblSpending(tblSpending instance);
    partial void InserttblSalesInvoice(tblSalesInvoice instance);
    partial void UpdatetblSalesInvoice(tblSalesInvoice instance);
    partial void DeletetblSalesInvoice(tblSalesInvoice instance);
    partial void InserttblPurchaseInvoice(tblPurchaseInvoice instance);
    partial void UpdatetblPurchaseInvoice(tblPurchaseInvoice instance);
    partial void DeletetblPurchaseInvoice(tblPurchaseInvoice instance);
    partial void InserttblSalesInvoicesDetaile(tblSalesInvoicesDetaile instance);
    partial void UpdatetblSalesInvoicesDetaile(tblSalesInvoicesDetaile instance);
    partial void DeletetblSalesInvoicesDetaile(tblSalesInvoicesDetaile instance);
    partial void InserttblPurchaseInvoicesDetaile(tblPurchaseInvoicesDetaile instance);
    partial void UpdatetblPurchaseInvoicesDetaile(tblPurchaseInvoicesDetaile instance);
    partial void DeletetblPurchaseInvoicesDetaile(tblPurchaseInvoicesDetaile instance);
    partial void InserttblUserAccessProfileDetail(tblUserAccessProfileDetail instance);
    partial void UpdatetblUserAccessProfileDetail(tblUserAccessProfileDetail instance);
    partial void DeletetblUserAccessProfileDetail(tblUserAccessProfileDetail instance);
    partial void InserttblUserAccessProfileName(tblUserAccessProfileName instance);
    partial void UpdatetblUserAccessProfileName(tblUserAccessProfileName instance);
    partial void DeletetblUserAccessProfileName(tblUserAccessProfileName instance);
    partial void InserttblUserSettingsProfile(tblUserSettingsProfile instance);
    partial void UpdatetblUserSettingsProfile(tblUserSettingsProfile instance);
    partial void DeletetblUserSettingsProfile(tblUserSettingsProfile instance);
    partial void InserttblUserSettingsProfileProperty(tblUserSettingsProfileProperty instance);
    partial void UpdatetblUserSettingsProfileProperty(tblUserSettingsProfileProperty instance);
    partial void DeletetblUserSettingsProfileProperty(tblUserSettingsProfileProperty instance);
    partial void InserttblAccountsDelegation(tblAccountsDelegation instance);
    partial void UpdatetblAccountsDelegation(tblAccountsDelegation instance);
    partial void DeletetblAccountsDelegation(tblAccountsDelegation instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    partial void InserttblSMS_CustomersDirectory(tblSMS_CustomersDirectory instance);
    partial void UpdatetblSMS_CustomersDirectory(tblSMS_CustomersDirectory instance);
    partial void DeletetblSMS_CustomersDirectory(tblSMS_CustomersDirectory instance);
    partial void InserttblSMS_SendMessage(tblSMS_SendMessage instance);
    partial void UpdatetblSMS_SendMessage(tblSMS_SendMessage instance);
    partial void DeletetblSMS_SendMessage(tblSMS_SendMessage instance);
    partial void InserttblSMS_SMSMessage(tblSMS_SMSMessage instance);
    partial void UpdatetblSMS_SMSMessage(tblSMS_SMSMessage instance);
    partial void DeletetblSMS_SMSMessage(tblSMS_SMSMessage instance);
    #endregion
		
		public dbDataContext() : 
				base(global::Altagr.Properties.Settings.Default.sejel_end_projectConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblCurrency> tblCurrencies
		{
			get
			{
				return this.GetTable<tblCurrency>();
			}
		}
		
		public System.Data.Linq.Table<tblCurrenciesPrice> tblCurrenciesPrices
		{
			get
			{
				return this.GetTable<tblCurrenciesPrice>();
			}
		}
		
		public System.Data.Linq.Table<tblCurrenciesPricesUpdate> tblCurrenciesPricesUpdates
		{
			get
			{
				return this.GetTable<tblCurrenciesPricesUpdate>();
			}
		}
		
		public System.Data.Linq.Table<tblDocument> tblDocuments
		{
			get
			{
				return this.GetTable<tblDocument>();
			}
		}
		
		public System.Data.Linq.Table<tblEntry> tblEntries
		{
			get
			{
				return this.GetTable<tblEntry>();
			}
		}
		
		public System.Data.Linq.Table<tblEntriesDetail> tblEntriesDetails
		{
			get
			{
				return this.GetTable<tblEntriesDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblLSCashInvoice> tblLSCashInvoices
		{
			get
			{
				return this.GetTable<tblLSCashInvoice>();
			}
		}
		
		public System.Data.Linq.Table<tblLSUnit> tblLSUnits
		{
			get
			{
				return this.GetTable<tblLSUnit>();
			}
		}
		
		public System.Data.Linq.Table<tblReceiving> tblReceivings
		{
			get
			{
				return this.GetTable<tblReceiving>();
			}
		}
		
		public System.Data.Linq.Table<tblUnit> tblUnits
		{
			get
			{
				return this.GetTable<tblUnit>();
			}
		}
		
		public System.Data.Linq.Table<vewAccount> vewAccounts
		{
			get
			{
				return this.GetTable<vewAccount>();
			}
		}
		
		public System.Data.Linq.Table<vewCurrency> vewCurrencies
		{
			get
			{
				return this.GetTable<vewCurrency>();
			}
		}
		
		public System.Data.Linq.Table<vewCurrencies_CurrenciesPrice> vewCurrencies_CurrenciesPrices
		{
			get
			{
				return this.GetTable<vewCurrencies_CurrenciesPrice>();
			}
		}
		
		public System.Data.Linq.Table<vewCurrenciesPrice> vewCurrenciesPrices
		{
			get
			{
				return this.GetTable<vewCurrenciesPrice>();
			}
		}
		
		public System.Data.Linq.Table<vewEntry> vewEntries
		{
			get
			{
				return this.GetTable<vewEntry>();
			}
		}
		
		public System.Data.Linq.Table<vewEntriesDetail> vewEntriesDetails
		{
			get
			{
				return this.GetTable<vewEntriesDetail>();
			}
		}
		
		public System.Data.Linq.Table<VewM1> VewM1s
		{
			get
			{
				return this.GetTable<VewM1>();
			}
		}
		
		public System.Data.Linq.Table<VewM2> VewM2s
		{
			get
			{
				return this.GetTable<VewM2>();
			}
		}
		
		public System.Data.Linq.Table<vewMain> vewMains
		{
			get
			{
				return this.GetTable<vewMain>();
			}
		}
		
		public System.Data.Linq.Table<VewMain1> VewMain1s
		{
			get
			{
				return this.GetTable<VewMain1>();
			}
		}
		
		public System.Data.Linq.Table<VewMain2> VewMain2s
		{
			get
			{
				return this.GetTable<VewMain2>();
			}
		}
		
		public System.Data.Linq.Table<VewMain3> VewMain3s
		{
			get
			{
				return this.GetTable<VewMain3>();
			}
		}
		
		public System.Data.Linq.Table<vewMainSearch> vewMainSearches
		{
			get
			{
				return this.GetTable<vewMainSearch>();
			}
		}
		
		public System.Data.Linq.Table<vewMainUnRelay> vewMainUnRelays
		{
			get
			{
				return this.GetTable<vewMainUnRelay>();
			}
		}
		
		public System.Data.Linq.Table<vewMainWithUndebitedIncomingTransfer> vewMainWithUndebitedIncomingTransfers
		{
			get
			{
				return this.GetTable<vewMainWithUndebitedIncomingTransfer>();
			}
		}
		
		public System.Data.Linq.Table<vewSpending> vewSpendings
		{
			get
			{
				return this.GetTable<vewSpending>();
			}
		}
		
		public System.Data.Linq.Table<vewUser> vewUsers
		{
			get
			{
				return this.GetTable<vewUser>();
			}
		}
		
		public System.Data.Linq.Table<tblAccounts> tblAccounts
		{
			get
			{
				return this.GetTable<tblAccounts>();
			}
		}
		
		public System.Data.Linq.Table<vewAccountsMina> vewAccountsMinas
		{
			get
			{
				return this.GetTable<vewAccountsMina>();
			}
		}
		
		public System.Data.Linq.Table<tblLSTypeProduct> tblLSTypeProducts
		{
			get
			{
				return this.GetTable<tblLSTypeProduct>();
			}
		}
		
		public System.Data.Linq.Table<tblProducts> tblProducts
		{
			get
			{
				return this.GetTable<tblProducts>();
			}
		}
		
		public System.Data.Linq.Table<tblSpending> tblSpendings
		{
			get
			{
				return this.GetTable<tblSpending>();
			}
		}
		
		public System.Data.Linq.Table<tblSalesInvoice> tblSalesInvoices
		{
			get
			{
				return this.GetTable<tblSalesInvoice>();
			}
		}
		
		public System.Data.Linq.Table<tblPurchaseInvoice> tblPurchaseInvoices
		{
			get
			{
				return this.GetTable<tblPurchaseInvoice>();
			}
		}
		
		public System.Data.Linq.Table<tblSalesInvoicesDetaile> tblSalesInvoicesDetailes
		{
			get
			{
				return this.GetTable<tblSalesInvoicesDetaile>();
			}
		}
		
		public System.Data.Linq.Table<tblPurchaseInvoicesDetaile> tblPurchaseInvoicesDetailes
		{
			get
			{
				return this.GetTable<tblPurchaseInvoicesDetaile>();
			}
		}
		
		public System.Data.Linq.Table<vewMainProductUnitQuantity> vewMainProductUnitQuantities
		{
			get
			{
				return this.GetTable<vewMainProductUnitQuantity>();
			}
		}
		
		public System.Data.Linq.Table<tblUserAccessProfileDetail> tblUserAccessProfileDetails
		{
			get
			{
				return this.GetTable<tblUserAccessProfileDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblUserAccessProfileName> tblUserAccessProfileNames
		{
			get
			{
				return this.GetTable<tblUserAccessProfileName>();
			}
		}
		
		public System.Data.Linq.Table<tblUserSettingsProfile> tblUserSettingsProfiles
		{
			get
			{
				return this.GetTable<tblUserSettingsProfile>();
			}
		}
		
		public System.Data.Linq.Table<tblUserSettingsProfileProperty> tblUserSettingsProfileProperties
		{
			get
			{
				return this.GetTable<tblUserSettingsProfileProperty>();
			}
		}
		
		public System.Data.Linq.Table<tblAccountsDelegation> tblAccountsDelegations
		{
			get
			{
				return this.GetTable<tblAccountsDelegation>();
			}
		}
		
		public System.Data.Linq.Table<vewPurchaseInvoice> vewPurchaseInvoices
		{
			get
			{
				return this.GetTable<vewPurchaseInvoice>();
			}
		}
		
		public System.Data.Linq.Table<vewSalesInvoice> vewSalesInvoices
		{
			get
			{
				return this.GetTable<vewSalesInvoice>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		public System.Data.Linq.Table<tblSMS_CustomersDirectory> tblSMS_CustomersDirectories
		{
			get
			{
				return this.GetTable<tblSMS_CustomersDirectory>();
			}
		}
		
		public System.Data.Linq.Table<tblSMS_SendMessage> tblSMS_SendMessages
		{
			get
			{
				return this.GetTable<tblSMS_SendMessage>();
			}
		}
		
		public System.Data.Linq.Table<tblSMS_SMSMessage> tblSMS_SMSMessages
		{
			get
			{
				return this.GetTable<tblSMS_SMSMessage>();
			}
		}
		
		public System.Data.Linq.Table<vewReceiving> vewReceivings
		{
			get
			{
				return this.GetTable<vewReceiving>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddReceiving")]
		public int AddReceiving([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TheDate", DbType="DateTime")] System.Nullable<System.DateTime> theDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TheMethod", DbType="BigInt")] System.Nullable<long> theMethod, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Money")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrencyID", DbType="BigInt")] System.Nullable<long> currencyID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountID", DbType="BigInt")] System.Nullable<long> accountID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExchangeAccountID", DbType="BigInt")] System.Nullable<long> exchangeAccountID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="VarChar(255)")] string notes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Delivery", DbType="VarChar(150)")] string delivery, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocumentID", DbType="BigInt")] System.Nullable<long> documentID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), theDate, theMethod, amount, currencyID, accountID, exchangeAccountID, notes, delivery, userID, documentID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddtblSpending")]
		public int AddtblSpending([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TheDate", DbType="DateTime")] System.Nullable<System.DateTime> theDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TheMethod", DbType="BigInt")] System.Nullable<long> theMethod, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Money")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrencyID", DbType="BigInt")] System.Nullable<long> currencyID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountID", DbType="BigInt")] System.Nullable<long> accountID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExchangeAccountID", DbType="BigInt")] System.Nullable<long> exchangeAccountID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="VarChar(255)")] string notes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Delivery", DbType="VarChar(150)")] string delivery, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocumentID", DbType="BigInt")] System.Nullable<long> documentID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), theDate, theMethod, amount, currencyID, accountID, exchangeAccountID, notes, delivery, userID, documentID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PROvewDetailedPreviousBalanceSearch")]
		public ISingleResult<PROvewDetailedPreviousBalanceSearchResult> PROvewDetailedPreviousBalanceSearch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="BigInt")] System.Nullable<long> accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrencieID", DbType="BigInt")] System.Nullable<long> currencieID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> date1)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date, accountNumber, currencieID, date1);
			return ((ISingleResult<PROvewDetailedPreviousBalanceSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PROvewDetailedSearch")]
		public ISingleResult<PROvewDetailedSearchResult> PROvewDetailedSearch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="BigInt")] System.Nullable<long> accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrencieID", DbType="BigInt")] System.Nullable<long> currencieID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> date1)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date, accountNumber, currencieID, date1);
			return ((ISingleResult<PROvewDetailedSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UPDATEReceiving")]
		public int UPDATEReceiving([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TheDate", DbType="DateTime")] System.Nullable<System.DateTime> theDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Money")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrencyID", DbType="BigInt")] System.Nullable<long> currencyID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountID", DbType="BigInt")] System.Nullable<long> accountID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExchangeAccountID", DbType="BigInt")] System.Nullable<long> exchangeAccountID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="VarChar(255)")] string notes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Delivery", DbType="VarChar(150)")] string delivery, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EntriesID", DbType="BigInt")] System.Nullable<long> entriesID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RowVersion", DbType="BigInt")] System.Nullable<long> rowVersion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), theDate, amount, currencyID, accountID, exchangeAccountID, notes, delivery, entriesID, rowVersion, iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ExchangePrice", IsComposable=true)]
		public System.Nullable<decimal> ExchangePrice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetCurrencyID", DbType="BigInt")] System.Nullable<long> targetCurrencyID)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), targetCurrencyID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Get_Max_TheNumber_Receiving", IsComposable=true)]
		public System.Nullable<long> Get_Max_TheNumber_Receiving()
		{
			return ((System.Nullable<long>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Get_Max_TheNumber_Spending", IsComposable=true)]
		public System.Nullable<long> Get_Max_TheNumber_Spending()
		{
			return ((System.Nullable<long>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_Sum_Amount", IsComposable=true)]
		public System.Nullable<decimal> get_Sum_Amount([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="BigInt")] System.Nullable<long> accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrencieID", DbType="BigInt")] System.Nullable<long> currencieID)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date, accountNumber, currencieID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Get_ValueField", IsComposable=true)]
		public string Get_ValueField([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FieldName", DbType="VarChar(8000)")] string fieldName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubField", DbType="VarChar(100)")] string subField)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fieldName, subField).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UPDATESpending")]
		public int UPDATESpending([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TheDate", DbType="DateTime")] System.Nullable<System.DateTime> theDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Money")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrencyID", DbType="BigInt")] System.Nullable<long> currencyID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountID", DbType="BigInt")] System.Nullable<long> accountID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExchangeAccountID", DbType="BigInt")] System.Nullable<long> exchangeAccountID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="VarChar(255)")] string notes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Delivery", DbType="VarChar(150)")] string delivery, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EntriesID", DbType="BigInt")] System.Nullable<long> entriesID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RowVersion", DbType="BigInt")] System.Nullable<long> rowVersion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), theDate, amount, currencyID, accountID, exchangeAccountID, notes, delivery, entriesID, rowVersion, iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddtblPurchaseInvoices")]
		public int AddtblPurchaseInvoices(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TheNumber", DbType="BigInt")] System.Nullable<long> theNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InvoicesType", DbType="Int")] System.Nullable<int> invoicesType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Total", DbType="Money")] System.Nullable<decimal> total, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescountPercent", DbType="Money")] System.Nullable<decimal> descountPercent, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescountValue", DbType="Money")] System.Nullable<decimal> descountValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tax", DbType="Money")] System.Nullable<decimal> tax, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TaxValue", DbType="Money")] System.Nullable<decimal> taxValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Paid", DbType="Money")] System.Nullable<decimal> paid, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Remaing", DbType="Money")] System.Nullable<decimal> remaing, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Expences", DbType="Money")] System.Nullable<decimal> expences, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountID", DbType="BigInt")] System.Nullable<long> accountID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExchangeAccountID", DbType="BigInt")] System.Nullable<long> exchangeAccountID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TheDate", DbType="Date")] System.Nullable<System.DateTime> theDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DelivaryDate", DbType="DateTime")] System.Nullable<System.DateTime> delivaryDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="VarChar(MAX)")] string notes, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShippingAddress", DbType="VarChar(MAX)")] string shippingAddress, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Prints", DbType="Int")] System.Nullable<int> prints, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocumentID", DbType="BigInt")] System.Nullable<long> documentID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), theNumber, invoicesType, total, descountPercent, descountValue, tax, taxValue, paid, remaing, expences, accountID, exchangeAccountID, theDate, delivaryDate, notes, shippingAddress, prints, userID, documentID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddtblSalesInvoices")]
		public int AddtblSalesInvoices(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TheNumber", DbType="BigInt")] System.Nullable<long> theNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InvoicesType", DbType="Int")] System.Nullable<int> invoicesType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Total", DbType="Money")] System.Nullable<decimal> total, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescountPercent", DbType="Money")] System.Nullable<decimal> descountPercent, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescountValue", DbType="Money")] System.Nullable<decimal> descountValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tax", DbType="Money")] System.Nullable<decimal> tax, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TaxValue", DbType="Money")] System.Nullable<decimal> taxValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Paid", DbType="Money")] System.Nullable<decimal> paid, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Remaing", DbType="Money")] System.Nullable<decimal> remaing, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Expences", DbType="Money")] System.Nullable<decimal> expences, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountID", DbType="BigInt")] System.Nullable<long> accountID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExchangeAccountID", DbType="BigInt")] System.Nullable<long> exchangeAccountID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TheDate", DbType="Date")] System.Nullable<System.DateTime> theDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DelivaryDate", DbType="DateTime")] System.Nullable<System.DateTime> delivaryDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="VarChar(MAX)")] string notes, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShippingAddress", DbType="VarChar(MAX)")] string shippingAddress, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Prints", DbType="Int")] System.Nullable<int> prints, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocumentID", DbType="BigInt")] System.Nullable<long> documentID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), theNumber, invoicesType, total, descountPercent, descountValue, tax, taxValue, paid, remaing, expences, accountID, exchangeAccountID, theDate, delivaryDate, notes, shippingAddress, prints, userID, documentID);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCurrencies")]
	public partial class tblCurrency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _CurrencyName;
		
		private string _ArabicCode;
		
		private string _EnglishCode;
		
		private System.Nullable<bool> _CurrencyType;
		
		private string _Notes;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private EntitySet<tblCurrenciesPrice> _tblCurrenciesPrices;
		
		private EntitySet<tblCurrenciesPrice> _tblCurrenciesPrices1;
		
		private EntitySet<tblCurrenciesPricesUpdate> _tblCurrenciesPricesUpdates;
		
		private EntitySet<tblCurrenciesPricesUpdate> _tblCurrenciesPricesUpdates1;
		
		private EntitySet<tblEntriesDetail> _tblEntriesDetails;
		
		private EntitySet<tblReceiving> _tblReceivings;
		
		private EntitySet<tblReceiving> _tblReceivings1;
		
		private EntitySet<tblSpending> _tblSpendings;
		
		private EntitySet<tblSpending> _tblSpendings1;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCurrencyNameChanging(string value);
    partial void OnCurrencyNameChanged();
    partial void OnArabicCodeChanging(string value);
    partial void OnArabicCodeChanged();
    partial void OnEnglishCodeChanging(string value);
    partial void OnEnglishCodeChanged();
    partial void OnCurrencyTypeChanging(System.Nullable<bool> value);
    partial void OnCurrencyTypeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblCurrency()
		{
			this._tblCurrenciesPrices = new EntitySet<tblCurrenciesPrice>(new Action<tblCurrenciesPrice>(this.attach_tblCurrenciesPrices), new Action<tblCurrenciesPrice>(this.detach_tblCurrenciesPrices));
			this._tblCurrenciesPrices1 = new EntitySet<tblCurrenciesPrice>(new Action<tblCurrenciesPrice>(this.attach_tblCurrenciesPrices1), new Action<tblCurrenciesPrice>(this.detach_tblCurrenciesPrices1));
			this._tblCurrenciesPricesUpdates = new EntitySet<tblCurrenciesPricesUpdate>(new Action<tblCurrenciesPricesUpdate>(this.attach_tblCurrenciesPricesUpdates), new Action<tblCurrenciesPricesUpdate>(this.detach_tblCurrenciesPricesUpdates));
			this._tblCurrenciesPricesUpdates1 = new EntitySet<tblCurrenciesPricesUpdate>(new Action<tblCurrenciesPricesUpdate>(this.attach_tblCurrenciesPricesUpdates1), new Action<tblCurrenciesPricesUpdate>(this.detach_tblCurrenciesPricesUpdates1));
			this._tblEntriesDetails = new EntitySet<tblEntriesDetail>(new Action<tblEntriesDetail>(this.attach_tblEntriesDetails), new Action<tblEntriesDetail>(this.detach_tblEntriesDetails));
			this._tblReceivings = new EntitySet<tblReceiving>(new Action<tblReceiving>(this.attach_tblReceivings), new Action<tblReceiving>(this.detach_tblReceivings));
			this._tblReceivings1 = new EntitySet<tblReceiving>(new Action<tblReceiving>(this.attach_tblReceivings1), new Action<tblReceiving>(this.detach_tblReceivings1));
			this._tblSpendings = new EntitySet<tblSpending>(new Action<tblSpending>(this.attach_tblSpendings), new Action<tblSpending>(this.detach_tblSpendings));
			this._tblSpendings1 = new EntitySet<tblSpending>(new Action<tblSpending>(this.attach_tblSpendings1), new Action<tblSpending>(this.detach_tblSpendings1));
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this.OnCurrencyNameChanging(value);
					this.SendPropertyChanging();
					this._CurrencyName = value;
					this.SendPropertyChanged("CurrencyName");
					this.OnCurrencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArabicCode", DbType="VarChar(10)")]
		public string ArabicCode
		{
			get
			{
				return this._ArabicCode;
			}
			set
			{
				if ((this._ArabicCode != value))
				{
					this.OnArabicCodeChanging(value);
					this.SendPropertyChanging();
					this._ArabicCode = value;
					this.SendPropertyChanged("ArabicCode");
					this.OnArabicCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishCode", DbType="VarChar(10)")]
		public string EnglishCode
		{
			get
			{
				return this._EnglishCode;
			}
			set
			{
				if ((this._EnglishCode != value))
				{
					this.OnEnglishCodeChanging(value);
					this.SendPropertyChanging();
					this._EnglishCode = value;
					this.SendPropertyChanged("EnglishCode");
					this.OnEnglishCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyType", DbType="Bit")]
		public System.Nullable<bool> CurrencyType
		{
			get
			{
				return this._CurrencyType;
			}
			set
			{
				if ((this._CurrencyType != value))
				{
					this.OnCurrencyTypeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyType = value;
					this.SendPropertyChanged("CurrencyType");
					this.OnCurrencyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblCurrenciesPrice", Storage="_tblCurrenciesPrices", ThisKey="ID", OtherKey="SourceCurrencyID")]
		public EntitySet<tblCurrenciesPrice> tblCurrenciesPrices
		{
			get
			{
				return this._tblCurrenciesPrices;
			}
			set
			{
				this._tblCurrenciesPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblCurrenciesPrice1", Storage="_tblCurrenciesPrices1", ThisKey="ID", OtherKey="TargetCurrencyID")]
		public EntitySet<tblCurrenciesPrice> tblCurrenciesPrices1
		{
			get
			{
				return this._tblCurrenciesPrices1;
			}
			set
			{
				this._tblCurrenciesPrices1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblCurrenciesPricesUpdate", Storage="_tblCurrenciesPricesUpdates", ThisKey="ID", OtherKey="SourceCurrencyID")]
		public EntitySet<tblCurrenciesPricesUpdate> tblCurrenciesPricesUpdates
		{
			get
			{
				return this._tblCurrenciesPricesUpdates;
			}
			set
			{
				this._tblCurrenciesPricesUpdates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblCurrenciesPricesUpdate1", Storage="_tblCurrenciesPricesUpdates1", ThisKey="ID", OtherKey="TargetCurrencyID")]
		public EntitySet<tblCurrenciesPricesUpdate> tblCurrenciesPricesUpdates1
		{
			get
			{
				return this._tblCurrenciesPricesUpdates1;
			}
			set
			{
				this._tblCurrenciesPricesUpdates1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblEntriesDetail", Storage="_tblEntriesDetails", ThisKey="ID", OtherKey="CurrencyID")]
		public EntitySet<tblEntriesDetail> tblEntriesDetails
		{
			get
			{
				return this._tblEntriesDetails;
			}
			set
			{
				this._tblEntriesDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblReceiving", Storage="_tblReceivings", ThisKey="ID", OtherKey="CurrencyID")]
		public EntitySet<tblReceiving> tblReceivings
		{
			get
			{
				return this._tblReceivings;
			}
			set
			{
				this._tblReceivings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblReceiving1", Storage="_tblReceivings1", ThisKey="ID", OtherKey="ExchangeCurrencyID")]
		public EntitySet<tblReceiving> tblReceivings1
		{
			get
			{
				return this._tblReceivings1;
			}
			set
			{
				this._tblReceivings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblSpending", Storage="_tblSpendings", ThisKey="ID", OtherKey="CurrencyID")]
		public EntitySet<tblSpending> tblSpendings
		{
			get
			{
				return this._tblSpendings;
			}
			set
			{
				this._tblSpendings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblSpending1", Storage="_tblSpendings1", ThisKey="ID", OtherKey="ExchangeCurrencyID")]
		public EntitySet<tblSpending> tblSpendings1
		{
			get
			{
				return this._tblSpendings1;
			}
			set
			{
				this._tblSpendings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblCurrency", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblCurrencies.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblCurrencies.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCurrenciesPrices(tblCurrenciesPrice entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency = this;
		}
		
		private void detach_tblCurrenciesPrices(tblCurrenciesPrice entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency = null;
		}
		
		private void attach_tblCurrenciesPrices1(tblCurrenciesPrice entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency1 = this;
		}
		
		private void detach_tblCurrenciesPrices1(tblCurrenciesPrice entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency1 = null;
		}
		
		private void attach_tblCurrenciesPricesUpdates(tblCurrenciesPricesUpdate entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency = this;
		}
		
		private void detach_tblCurrenciesPricesUpdates(tblCurrenciesPricesUpdate entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency = null;
		}
		
		private void attach_tblCurrenciesPricesUpdates1(tblCurrenciesPricesUpdate entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency1 = this;
		}
		
		private void detach_tblCurrenciesPricesUpdates1(tblCurrenciesPricesUpdate entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency1 = null;
		}
		
		private void attach_tblEntriesDetails(tblEntriesDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency = this;
		}
		
		private void detach_tblEntriesDetails(tblEntriesDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency = null;
		}
		
		private void attach_tblReceivings(tblReceiving entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency = this;
		}
		
		private void detach_tblReceivings(tblReceiving entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency = null;
		}
		
		private void attach_tblReceivings1(tblReceiving entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency1 = this;
		}
		
		private void detach_tblReceivings1(tblReceiving entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency1 = null;
		}
		
		private void attach_tblSpendings(tblSpending entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency = this;
		}
		
		private void detach_tblSpendings(tblSpending entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency = null;
		}
		
		private void attach_tblSpendings1(tblSpending entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency1 = this;
		}
		
		private void detach_tblSpendings1(tblSpending entity)
		{
			this.SendPropertyChanging();
			entity.tblCurrency1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCurrenciesPrices")]
	public partial class tblCurrenciesPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _SourceCurrencyID;
		
		private long _TargetCurrencyID;
		
		private decimal _ExchangePrice;
		
		private decimal _MaxExchangePrice;
		
		private decimal _MinExchangePrice;
		
		private string _Notes;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private EntityRef<tblCurrency> _tblCurrency;
		
		private EntityRef<tblCurrency> _tblCurrency1;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSourceCurrencyIDChanging(long value);
    partial void OnSourceCurrencyIDChanged();
    partial void OnTargetCurrencyIDChanging(long value);
    partial void OnTargetCurrencyIDChanged();
    partial void OnExchangePriceChanging(decimal value);
    partial void OnExchangePriceChanged();
    partial void OnMaxExchangePriceChanging(decimal value);
    partial void OnMaxExchangePriceChanged();
    partial void OnMinExchangePriceChanging(decimal value);
    partial void OnMinExchangePriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblCurrenciesPrice()
		{
			this._tblCurrency = default(EntityRef<tblCurrency>);
			this._tblCurrency1 = default(EntityRef<tblCurrency>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCurrencyID", DbType="BigInt NOT NULL")]
		public long SourceCurrencyID
		{
			get
			{
				return this._SourceCurrencyID;
			}
			set
			{
				if ((this._SourceCurrencyID != value))
				{
					if (this._tblCurrency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._SourceCurrencyID = value;
					this.SendPropertyChanged("SourceCurrencyID");
					this.OnSourceCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetCurrencyID", DbType="BigInt NOT NULL")]
		public long TargetCurrencyID
		{
			get
			{
				return this._TargetCurrencyID;
			}
			set
			{
				if ((this._TargetCurrencyID != value))
				{
					if (this._tblCurrency1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._TargetCurrencyID = value;
					this.SendPropertyChanged("TargetCurrencyID");
					this.OnTargetCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangePrice", DbType="Decimal(18,6) NOT NULL")]
		public decimal ExchangePrice
		{
			get
			{
				return this._ExchangePrice;
			}
			set
			{
				if ((this._ExchangePrice != value))
				{
					this.OnExchangePriceChanging(value);
					this.SendPropertyChanging();
					this._ExchangePrice = value;
					this.SendPropertyChanged("ExchangePrice");
					this.OnExchangePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxExchangePrice", DbType="Decimal(18,6) NOT NULL")]
		public decimal MaxExchangePrice
		{
			get
			{
				return this._MaxExchangePrice;
			}
			set
			{
				if ((this._MaxExchangePrice != value))
				{
					this.OnMaxExchangePriceChanging(value);
					this.SendPropertyChanging();
					this._MaxExchangePrice = value;
					this.SendPropertyChanged("MaxExchangePrice");
					this.OnMaxExchangePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinExchangePrice", DbType="Decimal(18,6) NOT NULL")]
		public decimal MinExchangePrice
		{
			get
			{
				return this._MinExchangePrice;
			}
			set
			{
				if ((this._MinExchangePrice != value))
				{
					this.OnMinExchangePriceChanging(value);
					this.SendPropertyChanging();
					this._MinExchangePrice = value;
					this.SendPropertyChanged("MinExchangePrice");
					this.OnMinExchangePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblCurrenciesPrice", Storage="_tblCurrency", ThisKey="SourceCurrencyID", OtherKey="ID", IsForeignKey=true)]
		public tblCurrency tblCurrency
		{
			get
			{
				return this._tblCurrency.Entity;
			}
			set
			{
				tblCurrency previousValue = this._tblCurrency.Entity;
				if (((previousValue != value) 
							|| (this._tblCurrency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCurrency.Entity = null;
						previousValue.tblCurrenciesPrices.Remove(this);
					}
					this._tblCurrency.Entity = value;
					if ((value != null))
					{
						value.tblCurrenciesPrices.Add(this);
						this._SourceCurrencyID = value.ID;
					}
					else
					{
						this._SourceCurrencyID = default(long);
					}
					this.SendPropertyChanged("tblCurrency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblCurrenciesPrice1", Storage="_tblCurrency1", ThisKey="TargetCurrencyID", OtherKey="ID", IsForeignKey=true)]
		public tblCurrency tblCurrency1
		{
			get
			{
				return this._tblCurrency1.Entity;
			}
			set
			{
				tblCurrency previousValue = this._tblCurrency1.Entity;
				if (((previousValue != value) 
							|| (this._tblCurrency1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCurrency1.Entity = null;
						previousValue.tblCurrenciesPrices1.Remove(this);
					}
					this._tblCurrency1.Entity = value;
					if ((value != null))
					{
						value.tblCurrenciesPrices1.Add(this);
						this._TargetCurrencyID = value.ID;
					}
					else
					{
						this._TargetCurrencyID = default(long);
					}
					this.SendPropertyChanged("tblCurrency1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblCurrenciesPrice", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblCurrenciesPrices.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblCurrenciesPrices.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCurrenciesPricesUpdates")]
	public partial class tblCurrenciesPricesUpdate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _ParentID;
		
		private long _SourceCurrencyID;
		
		private long _TargetCurrencyID;
		
		private decimal _OldExchangePrice;
		
		private System.Nullable<decimal> _NewExchangeName;
		
		private System.Nullable<decimal> _MaxExchangePrice;
		
		private System.Nullable<decimal> _NewMaxExchangePrice;
		
		private System.Nullable<decimal> _MinExchangePrice;
		
		private System.Nullable<decimal> _NewMinExchangePrice;
		
		private string _Notes;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private System.Nullable<System.DateTime> _TheDate;
		
		private EntityRef<tblCurrency> _tblCurrency;
		
		private EntityRef<tblCurrency> _tblCurrency1;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<long> value);
    partial void OnParentIDChanged();
    partial void OnSourceCurrencyIDChanging(long value);
    partial void OnSourceCurrencyIDChanged();
    partial void OnTargetCurrencyIDChanging(long value);
    partial void OnTargetCurrencyIDChanged();
    partial void OnOldExchangePriceChanging(decimal value);
    partial void OnOldExchangePriceChanged();
    partial void OnNewExchangeNameChanging(System.Nullable<decimal> value);
    partial void OnNewExchangeNameChanged();
    partial void OnMaxExchangePriceChanging(System.Nullable<decimal> value);
    partial void OnMaxExchangePriceChanged();
    partial void OnNewMaxExchangePriceChanging(System.Nullable<decimal> value);
    partial void OnNewMaxExchangePriceChanged();
    partial void OnMinExchangePriceChanging(System.Nullable<decimal> value);
    partial void OnMinExchangePriceChanged();
    partial void OnNewMinExchangePriceChanging(System.Nullable<decimal> value);
    partial void OnNewMinExchangePriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    partial void OnTheDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTheDateChanged();
    #endregion
		
		public tblCurrenciesPricesUpdate()
		{
			this._tblCurrency = default(EntityRef<tblCurrency>);
			this._tblCurrency1 = default(EntityRef<tblCurrency>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="BigInt")]
		public System.Nullable<long> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCurrencyID", DbType="BigInt NOT NULL")]
		public long SourceCurrencyID
		{
			get
			{
				return this._SourceCurrencyID;
			}
			set
			{
				if ((this._SourceCurrencyID != value))
				{
					if (this._tblCurrency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._SourceCurrencyID = value;
					this.SendPropertyChanged("SourceCurrencyID");
					this.OnSourceCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetCurrencyID", DbType="BigInt NOT NULL")]
		public long TargetCurrencyID
		{
			get
			{
				return this._TargetCurrencyID;
			}
			set
			{
				if ((this._TargetCurrencyID != value))
				{
					if (this._tblCurrency1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._TargetCurrencyID = value;
					this.SendPropertyChanged("TargetCurrencyID");
					this.OnTargetCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldExchangePrice", DbType="Decimal(18,6) NOT NULL")]
		public decimal OldExchangePrice
		{
			get
			{
				return this._OldExchangePrice;
			}
			set
			{
				if ((this._OldExchangePrice != value))
				{
					this.OnOldExchangePriceChanging(value);
					this.SendPropertyChanging();
					this._OldExchangePrice = value;
					this.SendPropertyChanged("OldExchangePrice");
					this.OnOldExchangePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewExchangeName", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> NewExchangeName
		{
			get
			{
				return this._NewExchangeName;
			}
			set
			{
				if ((this._NewExchangeName != value))
				{
					this.OnNewExchangeNameChanging(value);
					this.SendPropertyChanging();
					this._NewExchangeName = value;
					this.SendPropertyChanged("NewExchangeName");
					this.OnNewExchangeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxExchangePrice", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> MaxExchangePrice
		{
			get
			{
				return this._MaxExchangePrice;
			}
			set
			{
				if ((this._MaxExchangePrice != value))
				{
					this.OnMaxExchangePriceChanging(value);
					this.SendPropertyChanging();
					this._MaxExchangePrice = value;
					this.SendPropertyChanged("MaxExchangePrice");
					this.OnMaxExchangePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewMaxExchangePrice", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> NewMaxExchangePrice
		{
			get
			{
				return this._NewMaxExchangePrice;
			}
			set
			{
				if ((this._NewMaxExchangePrice != value))
				{
					this.OnNewMaxExchangePriceChanging(value);
					this.SendPropertyChanging();
					this._NewMaxExchangePrice = value;
					this.SendPropertyChanged("NewMaxExchangePrice");
					this.OnNewMaxExchangePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinExchangePrice", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> MinExchangePrice
		{
			get
			{
				return this._MinExchangePrice;
			}
			set
			{
				if ((this._MinExchangePrice != value))
				{
					this.OnMinExchangePriceChanging(value);
					this.SendPropertyChanging();
					this._MinExchangePrice = value;
					this.SendPropertyChanged("MinExchangePrice");
					this.OnMinExchangePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewMinExchangePrice", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> NewMinExchangePrice
		{
			get
			{
				return this._NewMinExchangePrice;
			}
			set
			{
				if ((this._NewMinExchangePrice != value))
				{
					this.OnNewMinExchangePriceChanging(value);
					this.SendPropertyChanging();
					this._NewMinExchangePrice = value;
					this.SendPropertyChanged("NewMinExchangePrice");
					this.OnNewMinExchangePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(255)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this.OnTheDateChanging(value);
					this.SendPropertyChanging();
					this._TheDate = value;
					this.SendPropertyChanged("TheDate");
					this.OnTheDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblCurrenciesPricesUpdate", Storage="_tblCurrency", ThisKey="SourceCurrencyID", OtherKey="ID", IsForeignKey=true)]
		public tblCurrency tblCurrency
		{
			get
			{
				return this._tblCurrency.Entity;
			}
			set
			{
				tblCurrency previousValue = this._tblCurrency.Entity;
				if (((previousValue != value) 
							|| (this._tblCurrency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCurrency.Entity = null;
						previousValue.tblCurrenciesPricesUpdates.Remove(this);
					}
					this._tblCurrency.Entity = value;
					if ((value != null))
					{
						value.tblCurrenciesPricesUpdates.Add(this);
						this._SourceCurrencyID = value.ID;
					}
					else
					{
						this._SourceCurrencyID = default(long);
					}
					this.SendPropertyChanged("tblCurrency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblCurrenciesPricesUpdate1", Storage="_tblCurrency1", ThisKey="TargetCurrencyID", OtherKey="ID", IsForeignKey=true)]
		public tblCurrency tblCurrency1
		{
			get
			{
				return this._tblCurrency1.Entity;
			}
			set
			{
				tblCurrency previousValue = this._tblCurrency1.Entity;
				if (((previousValue != value) 
							|| (this._tblCurrency1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCurrency1.Entity = null;
						previousValue.tblCurrenciesPricesUpdates1.Remove(this);
					}
					this._tblCurrency1.Entity = value;
					if ((value != null))
					{
						value.tblCurrenciesPricesUpdates1.Add(this);
						this._TargetCurrencyID = value.ID;
					}
					else
					{
						this._TargetCurrencyID = default(long);
					}
					this.SendPropertyChanged("tblCurrency1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblCurrenciesPricesUpdate", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblCurrenciesPricesUpdates.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblCurrenciesPricesUpdates.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDocuments")]
	public partial class tblDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _DocumentName;
		
		private string _TableName;
		
		private string _ViewName;
		
		private System.Nullable<bool> _IsHasFund;
		
		private System.Nullable<bool> _IsHasEntry;
		
		private System.Nullable<bool> _ISHaveArchive;
		
		private string _Notes;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private EntitySet<tblEntry> _tblEntries;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnViewNameChanging(string value);
    partial void OnViewNameChanged();
    partial void OnIsHasFundChanging(System.Nullable<bool> value);
    partial void OnIsHasFundChanged();
    partial void OnIsHasEntryChanging(System.Nullable<bool> value);
    partial void OnIsHasEntryChanged();
    partial void OnISHaveArchiveChanging(System.Nullable<bool> value);
    partial void OnISHaveArchiveChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblDocument()
		{
			this._tblEntries = new EntitySet<tblEntry>(new Action<tblEntry>(this.attach_tblEntries), new Action<tblEntry>(this.detach_tblEntries));
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="VarChar(50)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewName", DbType="VarChar(50)")]
		public string ViewName
		{
			get
			{
				return this._ViewName;
			}
			set
			{
				if ((this._ViewName != value))
				{
					this.OnViewNameChanging(value);
					this.SendPropertyChanging();
					this._ViewName = value;
					this.SendPropertyChanged("ViewName");
					this.OnViewNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasFund", DbType="Bit")]
		public System.Nullable<bool> IsHasFund
		{
			get
			{
				return this._IsHasFund;
			}
			set
			{
				if ((this._IsHasFund != value))
				{
					this.OnIsHasFundChanging(value);
					this.SendPropertyChanging();
					this._IsHasFund = value;
					this.SendPropertyChanged("IsHasFund");
					this.OnIsHasFundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasEntry", DbType="Bit")]
		public System.Nullable<bool> IsHasEntry
		{
			get
			{
				return this._IsHasEntry;
			}
			set
			{
				if ((this._IsHasEntry != value))
				{
					this.OnIsHasEntryChanging(value);
					this.SendPropertyChanging();
					this._IsHasEntry = value;
					this.SendPropertyChanged("IsHasEntry");
					this.OnIsHasEntryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISHaveArchive", DbType="Bit")]
		public System.Nullable<bool> ISHaveArchive
		{
			get
			{
				return this._ISHaveArchive;
			}
			set
			{
				if ((this._ISHaveArchive != value))
				{
					this.OnISHaveArchiveChanging(value);
					this.SendPropertyChanging();
					this._ISHaveArchive = value;
					this.SendPropertyChanged("ISHaveArchive");
					this.OnISHaveArchiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDocument_tblEntry", Storage="_tblEntries", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<tblEntry> tblEntries
		{
			get
			{
				return this._tblEntries;
			}
			set
			{
				this._tblEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblDocument", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblDocuments.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblDocuments.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblEntries(tblEntry entity)
		{
			this.SendPropertyChanging();
			entity.tblDocument = this;
		}
		
		private void detach_tblEntries(tblEntry entity)
		{
			this.SendPropertyChanging();
			entity.tblDocument = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEntries")]
	public partial class tblEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Data.Linq.Binary _RowVersion;
		
		private System.Nullable<long> _PrevRowVersion;
		
		private long _EntryNumber;
		
		private long _DocumentID;
		
		private long _RecordNumber;
		
		private long _RecordID;
		
		private System.DateTime _TheDate;
		
		private string _Notes;
		
		private long _UserID;
		
		private bool _Debited;
		
		private System.Nullable<long> _Prints;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private System.Nullable<long> _ParentID;
		
		private System.Nullable<int> _TheYear;
		
		private EntitySet<tblEntry> _tblEntries;
		
		private EntitySet<tblEntriesDetail> _tblEntriesDetails;
		
		private EntitySet<tblReceiving> _tblReceivings;
		
		private EntitySet<tblSpending> _tblSpendings;
		
		private EntitySet<tblSalesInvoice> _tblSalesInvoices;
		
		private EntitySet<tblPurchaseInvoice> _tblPurchaseInvoices;
		
		private EntityRef<tblDocument> _tblDocument;
		
		private EntityRef<tblEntry> _tblEntry1;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    partial void OnPrevRowVersionChanging(System.Nullable<long> value);
    partial void OnPrevRowVersionChanged();
    partial void OnEntryNumberChanging(long value);
    partial void OnEntryNumberChanged();
    partial void OnDocumentIDChanging(long value);
    partial void OnDocumentIDChanged();
    partial void OnRecordNumberChanging(long value);
    partial void OnRecordNumberChanged();
    partial void OnRecordIDChanging(long value);
    partial void OnRecordIDChanged();
    partial void OnTheDateChanging(System.DateTime value);
    partial void OnTheDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnDebitedChanging(bool value);
    partial void OnDebitedChanged();
    partial void OnPrintsChanging(System.Nullable<long> value);
    partial void OnPrintsChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    partial void OnParentIDChanging(System.Nullable<long> value);
    partial void OnParentIDChanged();
    partial void OnTheYearChanging(System.Nullable<int> value);
    partial void OnTheYearChanged();
    #endregion
		
		public tblEntry()
		{
			this._tblEntries = new EntitySet<tblEntry>(new Action<tblEntry>(this.attach_tblEntries), new Action<tblEntry>(this.detach_tblEntries));
			this._tblEntriesDetails = new EntitySet<tblEntriesDetail>(new Action<tblEntriesDetail>(this.attach_tblEntriesDetails), new Action<tblEntriesDetail>(this.detach_tblEntriesDetails));
			this._tblReceivings = new EntitySet<tblReceiving>(new Action<tblReceiving>(this.attach_tblReceivings), new Action<tblReceiving>(this.detach_tblReceivings));
			this._tblSpendings = new EntitySet<tblSpending>(new Action<tblSpending>(this.attach_tblSpendings), new Action<tblSpending>(this.detach_tblSpendings));
			this._tblSalesInvoices = new EntitySet<tblSalesInvoice>(new Action<tblSalesInvoice>(this.attach_tblSalesInvoices), new Action<tblSalesInvoice>(this.detach_tblSalesInvoices));
			this._tblPurchaseInvoices = new EntitySet<tblPurchaseInvoice>(new Action<tblPurchaseInvoice>(this.attach_tblPurchaseInvoices), new Action<tblPurchaseInvoice>(this.detach_tblPurchaseInvoices));
			this._tblDocument = default(EntityRef<tblDocument>);
			this._tblEntry1 = default(EntityRef<tblEntry>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevRowVersion", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> PrevRowVersion
		{
			get
			{
				return this._PrevRowVersion;
			}
			set
			{
				if ((this._PrevRowVersion != value))
				{
					this.OnPrevRowVersionChanging(value);
					this.SendPropertyChanging();
					this._PrevRowVersion = value;
					this.SendPropertyChanged("PrevRowVersion");
					this.OnPrevRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryNumber", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long EntryNumber
		{
			get
			{
				return this._EntryNumber;
			}
			set
			{
				if ((this._EntryNumber != value))
				{
					this.OnEntryNumberChanging(value);
					this.SendPropertyChanging();
					this._EntryNumber = value;
					this.SendPropertyChanged("EntryNumber");
					this.OnEntryNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._tblDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordNumber", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long RecordNumber
		{
			get
			{
				return this._RecordNumber;
			}
			set
			{
				if ((this._RecordNumber != value))
				{
					this.OnRecordNumberChanging(value);
					this.SendPropertyChanging();
					this._RecordNumber = value;
					this.SendPropertyChanged("RecordNumber");
					this.OnRecordNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this.OnRecordIDChanging(value);
					this.SendPropertyChanging();
					this._RecordID = value;
					this.SendPropertyChanged("RecordID");
					this.OnRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this.OnTheDateChanging(value);
					this.SendPropertyChanging();
					this._TheDate = value;
					this.SendPropertyChanged("TheDate");
					this.OnTheDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debited", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Debited
		{
			get
			{
				return this._Debited;
			}
			set
			{
				if ((this._Debited != value))
				{
					this.OnDebitedChanging(value);
					this.SendPropertyChanging();
					this._Debited = value;
					this.SendPropertyChanged("Debited");
					this.OnDebitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prints", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> Prints
		{
			get
			{
				return this._Prints;
			}
			set
			{
				if ((this._Prints != value))
				{
					this.OnPrintsChanging(value);
					this.SendPropertyChanging();
					this._Prints = value;
					this.SendPropertyChanged("Prints");
					this.OnPrintsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._tblEntry1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheYear", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TheYear
		{
			get
			{
				return this._TheYear;
			}
			set
			{
				if ((this._TheYear != value))
				{
					this.OnTheYearChanging(value);
					this.SendPropertyChanging();
					this._TheYear = value;
					this.SendPropertyChanged("TheYear");
					this.OnTheYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEntry_tblEntry", Storage="_tblEntries", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<tblEntry> tblEntries
		{
			get
			{
				return this._tblEntries;
			}
			set
			{
				this._tblEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEntry_tblEntriesDetail", Storage="_tblEntriesDetails", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<tblEntriesDetail> tblEntriesDetails
		{
			get
			{
				return this._tblEntriesDetails;
			}
			set
			{
				this._tblEntriesDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEntry_tblReceiving", Storage="_tblReceivings", ThisKey="ID", OtherKey="EntryID")]
		public EntitySet<tblReceiving> tblReceivings
		{
			get
			{
				return this._tblReceivings;
			}
			set
			{
				this._tblReceivings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEntry_tblSpending", Storage="_tblSpendings", ThisKey="ID", OtherKey="EntryID")]
		public EntitySet<tblSpending> tblSpendings
		{
			get
			{
				return this._tblSpendings;
			}
			set
			{
				this._tblSpendings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEntry_tblSalesInvoice", Storage="_tblSalesInvoices", ThisKey="ID", OtherKey="EntryID")]
		public EntitySet<tblSalesInvoice> tblSalesInvoices
		{
			get
			{
				return this._tblSalesInvoices;
			}
			set
			{
				this._tblSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEntry_tblPurchaseInvoice", Storage="_tblPurchaseInvoices", ThisKey="ID", OtherKey="EntryID")]
		public EntitySet<tblPurchaseInvoice> tblPurchaseInvoices
		{
			get
			{
				return this._tblPurchaseInvoices;
			}
			set
			{
				this._tblPurchaseInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDocument_tblEntry", Storage="_tblDocument", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public tblDocument tblDocument
		{
			get
			{
				return this._tblDocument.Entity;
			}
			set
			{
				tblDocument previousValue = this._tblDocument.Entity;
				if (((previousValue != value) 
							|| (this._tblDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDocument.Entity = null;
						previousValue.tblEntries.Remove(this);
					}
					this._tblDocument.Entity = value;
					if ((value != null))
					{
						value.tblEntries.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(long);
					}
					this.SendPropertyChanged("tblDocument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEntry_tblEntry", Storage="_tblEntry1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public tblEntry tblEntry1
		{
			get
			{
				return this._tblEntry1.Entity;
			}
			set
			{
				tblEntry previousValue = this._tblEntry1.Entity;
				if (((previousValue != value) 
							|| (this._tblEntry1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEntry1.Entity = null;
						previousValue.tblEntries.Remove(this);
					}
					this._tblEntry1.Entity = value;
					if ((value != null))
					{
						value.tblEntries.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblEntry1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblEntry", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblEntries.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblEntries.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblEntries(tblEntry entity)
		{
			this.SendPropertyChanging();
			entity.tblEntry1 = this;
		}
		
		private void detach_tblEntries(tblEntry entity)
		{
			this.SendPropertyChanging();
			entity.tblEntry1 = null;
		}
		
		private void attach_tblEntriesDetails(tblEntriesDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblEntry = this;
		}
		
		private void detach_tblEntriesDetails(tblEntriesDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblEntry = null;
		}
		
		private void attach_tblReceivings(tblReceiving entity)
		{
			this.SendPropertyChanging();
			entity.tblEntry = this;
		}
		
		private void detach_tblReceivings(tblReceiving entity)
		{
			this.SendPropertyChanging();
			entity.tblEntry = null;
		}
		
		private void attach_tblSpendings(tblSpending entity)
		{
			this.SendPropertyChanging();
			entity.tblEntry = this;
		}
		
		private void detach_tblSpendings(tblSpending entity)
		{
			this.SendPropertyChanging();
			entity.tblEntry = null;
		}
		
		private void attach_tblSalesInvoices(tblSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblEntry = this;
		}
		
		private void detach_tblSalesInvoices(tblSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblEntry = null;
		}
		
		private void attach_tblPurchaseInvoices(tblPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblEntry = this;
		}
		
		private void detach_tblPurchaseInvoices(tblPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblEntry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEntriesDetails")]
	public partial class tblEntriesDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Data.Linq.Binary _RowVersion;
		
		private System.Nullable<long> _PrevRowVersion;
		
		private System.Nullable<long> _ParentID;
		
		private System.Nullable<long> _EntryIndex;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<long> _CurrencyID;
		
		private System.Nullable<decimal> _MCAmount;
		
		private System.Nullable<long> _AccountID;
		
		private string _Notes;
		
		private System.Nullable<long> _DetailedAccountID;
		
		private EntityRef<tblCurrency> _tblCurrency;
		
		private EntityRef<tblEntry> _tblEntry;
		
		private EntityRef<tblAccounts> _tblAccount;
		
		private EntityRef<tblAccounts> _tblAccount1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    partial void OnPrevRowVersionChanging(System.Nullable<long> value);
    partial void OnPrevRowVersionChanged();
    partial void OnParentIDChanging(System.Nullable<long> value);
    partial void OnParentIDChanged();
    partial void OnEntryIndexChanging(System.Nullable<long> value);
    partial void OnEntryIndexChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnCurrencyIDChanging(System.Nullable<long> value);
    partial void OnCurrencyIDChanged();
    partial void OnMCAmountChanging(System.Nullable<decimal> value);
    partial void OnMCAmountChanged();
    partial void OnAccountIDChanging(System.Nullable<long> value);
    partial void OnAccountIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDetailedAccountIDChanging(System.Nullable<long> value);
    partial void OnDetailedAccountIDChanged();
    #endregion
		
		public tblEntriesDetail()
		{
			this._tblCurrency = default(EntityRef<tblCurrency>);
			this._tblEntry = default(EntityRef<tblEntry>);
			this._tblAccount = default(EntityRef<tblAccounts>);
			this._tblAccount1 = default(EntityRef<tblAccounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevRowVersion", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> PrevRowVersion
		{
			get
			{
				return this._PrevRowVersion;
			}
			set
			{
				if ((this._PrevRowVersion != value))
				{
					this.OnPrevRowVersionChanging(value);
					this.SendPropertyChanging();
					this._PrevRowVersion = value;
					this.SendPropertyChanged("PrevRowVersion");
					this.OnPrevRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._tblEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryIndex", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> EntryIndex
		{
			get
			{
				return this._EntryIndex;
			}
			set
			{
				if ((this._EntryIndex != value))
				{
					this.OnEntryIndexChanging(value);
					this.SendPropertyChanging();
					this._EntryIndex = value;
					this.SendPropertyChanged("EntryIndex");
					this.OnEntryIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(20,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					if (this._tblCurrency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCAmount", DbType="Decimal(20,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> MCAmount
		{
			get
			{
				return this._MCAmount;
			}
			set
			{
				if ((this._MCAmount != value))
				{
					this.OnMCAmountChanging(value);
					this.SendPropertyChanging();
					this._MCAmount = value;
					this.SendPropertyChanged("MCAmount");
					this.OnMCAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._tblAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailedAccountID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> DetailedAccountID
		{
			get
			{
				return this._DetailedAccountID;
			}
			set
			{
				if ((this._DetailedAccountID != value))
				{
					if (this._tblAccount1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailedAccountIDChanging(value);
					this.SendPropertyChanging();
					this._DetailedAccountID = value;
					this.SendPropertyChanged("DetailedAccountID");
					this.OnDetailedAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblEntriesDetail", Storage="_tblCurrency", ThisKey="CurrencyID", OtherKey="ID", IsForeignKey=true)]
		public tblCurrency tblCurrency
		{
			get
			{
				return this._tblCurrency.Entity;
			}
			set
			{
				tblCurrency previousValue = this._tblCurrency.Entity;
				if (((previousValue != value) 
							|| (this._tblCurrency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCurrency.Entity = null;
						previousValue.tblEntriesDetails.Remove(this);
					}
					this._tblCurrency.Entity = value;
					if ((value != null))
					{
						value.tblEntriesDetails.Add(this);
						this._CurrencyID = value.ID;
					}
					else
					{
						this._CurrencyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblCurrency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEntry_tblEntriesDetail", Storage="_tblEntry", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public tblEntry tblEntry
		{
			get
			{
				return this._tblEntry.Entity;
			}
			set
			{
				tblEntry previousValue = this._tblEntry.Entity;
				if (((previousValue != value) 
							|| (this._tblEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEntry.Entity = null;
						previousValue.tblEntriesDetails.Remove(this);
					}
					this._tblEntry.Entity = value;
					if ((value != null))
					{
						value.tblEntriesDetails.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblEntry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblEntriesDetail", Storage="_tblAccount", ThisKey="AccountID", OtherKey="ID", IsForeignKey=true)]
		public tblAccounts tblAccount
		{
			get
			{
				return this._tblAccount.Entity;
			}
			set
			{
				tblAccounts previousValue = this._tblAccount.Entity;
				if (((previousValue != value) 
							|| (this._tblAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAccount.Entity = null;
						previousValue.tblEntriesDetails.Remove(this);
					}
					this._tblAccount.Entity = value;
					if ((value != null))
					{
						value.tblEntriesDetails.Add(this);
						this._AccountID = value.ID;
					}
					else
					{
						this._AccountID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblEntriesDetail1", Storage="_tblAccount1", ThisKey="DetailedAccountID", OtherKey="ID", IsForeignKey=true)]
		public tblAccounts tblAccounts
		{
			get
			{
				return this._tblAccount1.Entity;
			}
			set
			{
				tblAccounts previousValue = this._tblAccount1.Entity;
				if (((previousValue != value) 
							|| (this._tblAccount1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAccount1.Entity = null;
						previousValue.tblEntriesDetails1.Remove(this);
					}
					this._tblAccount1.Entity = value;
					if ((value != null))
					{
						value.tblEntriesDetails1.Add(this);
						this._DetailedAccountID = value.ID;
					}
					else
					{
						this._DetailedAccountID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblAccounts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLSCashInvoices")]
	public partial class tblLSCashInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<tblReceiving> _tblReceivings;
		
		private EntitySet<tblSpending> _tblSpendings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tblLSCashInvoice()
		{
			this._tblReceivings = new EntitySet<tblReceiving>(new Action<tblReceiving>(this.attach_tblReceivings), new Action<tblReceiving>(this.detach_tblReceivings));
			this._tblSpendings = new EntitySet<tblSpending>(new Action<tblSpending>(this.attach_tblSpendings), new Action<tblSpending>(this.detach_tblSpendings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLSCashInvoice_tblReceiving", Storage="_tblReceivings", ThisKey="ID", OtherKey="TheMethod")]
		public EntitySet<tblReceiving> tblReceivings
		{
			get
			{
				return this._tblReceivings;
			}
			set
			{
				this._tblReceivings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLSCashInvoice_tblSpending", Storage="_tblSpendings", ThisKey="ID", OtherKey="TheMethod")]
		public EntitySet<tblSpending> tblSpendings
		{
			get
			{
				return this._tblSpendings;
			}
			set
			{
				this._tblSpendings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblReceivings(tblReceiving entity)
		{
			this.SendPropertyChanging();
			entity.tblLSCashInvoice = this;
		}
		
		private void detach_tblReceivings(tblReceiving entity)
		{
			this.SendPropertyChanging();
			entity.tblLSCashInvoice = null;
		}
		
		private void attach_tblSpendings(tblSpending entity)
		{
			this.SendPropertyChanging();
			entity.tblLSCashInvoice = this;
		}
		
		private void detach_tblSpendings(tblSpending entity)
		{
			this.SendPropertyChanging();
			entity.tblLSCashInvoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLSUnit")]
	public partial class tblLSUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<tblUnit> _tblUnits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tblLSUnit()
		{
			this._tblUnits = new EntitySet<tblUnit>(new Action<tblUnit>(this.attach_tblUnits), new Action<tblUnit>(this.detach_tblUnits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLSUnit_tblUnit", Storage="_tblUnits", ThisKey="ID", OtherKey="UnitID")]
		public EntitySet<tblUnit> tblUnits
		{
			get
			{
				return this._tblUnits;
			}
			set
			{
				this._tblUnits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUnits(tblUnit entity)
		{
			this.SendPropertyChanging();
			entity.tblLSUnit = this;
		}
		
		private void detach_tblUnits(tblUnit entity)
		{
			this.SendPropertyChanging();
			entity.tblLSUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblReceiving")]
	public partial class tblReceiving : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Data.Linq.Binary _RowVersion;
		
		private System.Nullable<long> _PrevRowVersion;
		
		private long _TheNumber;
		
		private System.Nullable<System.DateTime> _TheDate;
		
		private long _TheMethod;
		
		private decimal _Amount;
		
		private System.Nullable<long> _CurrencyID;
		
		private System.Nullable<long> _AccountID;
		
		private decimal _ExchangeAmount;
		
		private System.Nullable<long> _ExchangeCurrencyID;
		
		private System.Nullable<long> _ExchangeAccountID;
		
		private string _Notes;
		
		private string _Delivery;
		
		private System.Nullable<long> _Prints;
		
		private System.Nullable<long> _EntryID;
		
		private System.Nullable<int> _TheYear;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private EntityRef<tblLSCashInvoice> _tblLSCashInvoice;
		
		private EntityRef<tblCurrency> _tblCurrency;
		
		private EntityRef<tblCurrency> _tblCurrency1;
		
		private EntityRef<tblEntry> _tblEntry;
		
		private EntityRef<tblAccounts> _tblAccount;
		
		private EntityRef<tblAccounts> _tblAccount1;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    partial void OnPrevRowVersionChanging(System.Nullable<long> value);
    partial void OnPrevRowVersionChanged();
    partial void OnTheNumberChanging(long value);
    partial void OnTheNumberChanged();
    partial void OnTheDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTheDateChanged();
    partial void OnTheMethodChanging(long value);
    partial void OnTheMethodChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyIDChanging(System.Nullable<long> value);
    partial void OnCurrencyIDChanged();
    partial void OnAccountIDChanging(System.Nullable<long> value);
    partial void OnAccountIDChanged();
    partial void OnExchangeAmountChanging(decimal value);
    partial void OnExchangeAmountChanged();
    partial void OnExchangeCurrencyIDChanging(System.Nullable<long> value);
    partial void OnExchangeCurrencyIDChanged();
    partial void OnExchangeAccountIDChanging(System.Nullable<long> value);
    partial void OnExchangeAccountIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDeliveryChanging(string value);
    partial void OnDeliveryChanged();
    partial void OnPrintsChanging(System.Nullable<long> value);
    partial void OnPrintsChanged();
    partial void OnEntryIDChanging(System.Nullable<long> value);
    partial void OnEntryIDChanged();
    partial void OnTheYearChanging(System.Nullable<int> value);
    partial void OnTheYearChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblReceiving()
		{
			this._tblLSCashInvoice = default(EntityRef<tblLSCashInvoice>);
			this._tblCurrency = default(EntityRef<tblCurrency>);
			this._tblCurrency1 = default(EntityRef<tblCurrency>);
			this._tblEntry = default(EntityRef<tblEntry>);
			this._tblAccount = default(EntityRef<tblAccounts>);
			this._tblAccount1 = default(EntityRef<tblAccounts>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevRowVersion", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> PrevRowVersion
		{
			get
			{
				return this._PrevRowVersion;
			}
			set
			{
				if ((this._PrevRowVersion != value))
				{
					this.OnPrevRowVersionChanging(value);
					this.SendPropertyChanging();
					this._PrevRowVersion = value;
					this.SendPropertyChanged("PrevRowVersion");
					this.OnPrevRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheNumber", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long TheNumber
		{
			get
			{
				return this._TheNumber;
			}
			set
			{
				if ((this._TheNumber != value))
				{
					this.OnTheNumberChanging(value);
					this.SendPropertyChanging();
					this._TheNumber = value;
					this.SendPropertyChanged("TheNumber");
					this.OnTheNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this.OnTheDateChanging(value);
					this.SendPropertyChanging();
					this._TheDate = value;
					this.SendPropertyChanged("TheDate");
					this.OnTheDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheMethod", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long TheMethod
		{
			get
			{
				return this._TheMethod;
			}
			set
			{
				if ((this._TheMethod != value))
				{
					if (this._tblLSCashInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTheMethodChanging(value);
					this.SendPropertyChanging();
					this._TheMethod = value;
					this.SendPropertyChanged("TheMethod");
					this.OnTheMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,6) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					if (this._tblCurrency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._tblAccount1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeAmount", DbType="Decimal(18,6) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal ExchangeAmount
		{
			get
			{
				return this._ExchangeAmount;
			}
			set
			{
				if ((this._ExchangeAmount != value))
				{
					this.OnExchangeAmountChanging(value);
					this.SendPropertyChanging();
					this._ExchangeAmount = value;
					this.SendPropertyChanged("ExchangeAmount");
					this.OnExchangeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeCurrencyID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> ExchangeCurrencyID
		{
			get
			{
				return this._ExchangeCurrencyID;
			}
			set
			{
				if ((this._ExchangeCurrencyID != value))
				{
					if (this._tblCurrency1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExchangeCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._ExchangeCurrencyID = value;
					this.SendPropertyChanged("ExchangeCurrencyID");
					this.OnExchangeCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeAccountID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> ExchangeAccountID
		{
			get
			{
				return this._ExchangeAccountID;
			}
			set
			{
				if ((this._ExchangeAccountID != value))
				{
					if (this._tblAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExchangeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ExchangeAccountID = value;
					this.SendPropertyChanged("ExchangeAccountID");
					this.OnExchangeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivery", DbType="VarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Delivery
		{
			get
			{
				return this._Delivery;
			}
			set
			{
				if ((this._Delivery != value))
				{
					this.OnDeliveryChanging(value);
					this.SendPropertyChanging();
					this._Delivery = value;
					this.SendPropertyChanged("Delivery");
					this.OnDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prints", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> Prints
		{
			get
			{
				return this._Prints;
			}
			set
			{
				if ((this._Prints != value))
				{
					this.OnPrintsChanging(value);
					this.SendPropertyChanging();
					this._Prints = value;
					this.SendPropertyChanged("Prints");
					this.OnPrintsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					if (this._tblEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryIDChanging(value);
					this.SendPropertyChanging();
					this._EntryID = value;
					this.SendPropertyChanged("EntryID");
					this.OnEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheYear", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TheYear
		{
			get
			{
				return this._TheYear;
			}
			set
			{
				if ((this._TheYear != value))
				{
					this.OnTheYearChanging(value);
					this.SendPropertyChanging();
					this._TheYear = value;
					this.SendPropertyChanged("TheYear");
					this.OnTheYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLSCashInvoice_tblReceiving", Storage="_tblLSCashInvoice", ThisKey="TheMethod", OtherKey="ID", IsForeignKey=true)]
		public tblLSCashInvoice tblLSCashInvoice
		{
			get
			{
				return this._tblLSCashInvoice.Entity;
			}
			set
			{
				tblLSCashInvoice previousValue = this._tblLSCashInvoice.Entity;
				if (((previousValue != value) 
							|| (this._tblLSCashInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblLSCashInvoice.Entity = null;
						previousValue.tblReceivings.Remove(this);
					}
					this._tblLSCashInvoice.Entity = value;
					if ((value != null))
					{
						value.tblReceivings.Add(this);
						this._TheMethod = value.ID;
					}
					else
					{
						this._TheMethod = default(long);
					}
					this.SendPropertyChanged("tblLSCashInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblReceiving", Storage="_tblCurrency", ThisKey="CurrencyID", OtherKey="ID", IsForeignKey=true)]
		public tblCurrency tblCurrency
		{
			get
			{
				return this._tblCurrency.Entity;
			}
			set
			{
				tblCurrency previousValue = this._tblCurrency.Entity;
				if (((previousValue != value) 
							|| (this._tblCurrency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCurrency.Entity = null;
						previousValue.tblReceivings.Remove(this);
					}
					this._tblCurrency.Entity = value;
					if ((value != null))
					{
						value.tblReceivings.Add(this);
						this._CurrencyID = value.ID;
					}
					else
					{
						this._CurrencyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblCurrency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblReceiving1", Storage="_tblCurrency1", ThisKey="ExchangeCurrencyID", OtherKey="ID", IsForeignKey=true)]
		public tblCurrency tblCurrency1
		{
			get
			{
				return this._tblCurrency1.Entity;
			}
			set
			{
				tblCurrency previousValue = this._tblCurrency1.Entity;
				if (((previousValue != value) 
							|| (this._tblCurrency1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCurrency1.Entity = null;
						previousValue.tblReceivings1.Remove(this);
					}
					this._tblCurrency1.Entity = value;
					if ((value != null))
					{
						value.tblReceivings1.Add(this);
						this._ExchangeCurrencyID = value.ID;
					}
					else
					{
						this._ExchangeCurrencyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblCurrency1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEntry_tblReceiving", Storage="_tblEntry", ThisKey="EntryID", OtherKey="ID", IsForeignKey=true)]
		public tblEntry tblEntry
		{
			get
			{
				return this._tblEntry.Entity;
			}
			set
			{
				tblEntry previousValue = this._tblEntry.Entity;
				if (((previousValue != value) 
							|| (this._tblEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEntry.Entity = null;
						previousValue.tblReceivings.Remove(this);
					}
					this._tblEntry.Entity = value;
					if ((value != null))
					{
						value.tblReceivings.Add(this);
						this._EntryID = value.ID;
					}
					else
					{
						this._EntryID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblEntry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblReceiving", Storage="_tblAccount", ThisKey="ExchangeAccountID", OtherKey="ID", IsForeignKey=true)]
		public tblAccounts tblAccount
		{
			get
			{
				return this._tblAccount.Entity;
			}
			set
			{
				tblAccounts previousValue = this._tblAccount.Entity;
				if (((previousValue != value) 
							|| (this._tblAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAccount.Entity = null;
						previousValue.tblReceivings.Remove(this);
					}
					this._tblAccount.Entity = value;
					if ((value != null))
					{
						value.tblReceivings.Add(this);
						this._ExchangeAccountID = value.ID;
					}
					else
					{
						this._ExchangeAccountID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblReceiving1", Storage="_tblAccount1", ThisKey="AccountID", OtherKey="ID", IsForeignKey=true)]
		public tblAccounts tblAccounts
		{
			get
			{
				return this._tblAccount1.Entity;
			}
			set
			{
				tblAccounts previousValue = this._tblAccount1.Entity;
				if (((previousValue != value) 
							|| (this._tblAccount1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAccount1.Entity = null;
						previousValue.tblReceivings1.Remove(this);
					}
					this._tblAccount1.Entity = value;
					if ((value != null))
					{
						value.tblReceivings1.Add(this);
						this._AccountID = value.ID;
					}
					else
					{
						this._AccountID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblAccounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblReceiving", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblReceivings.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblReceivings.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUnits")]
	public partial class tblUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _ProductID;
		
		private System.Nullable<long> _UnitID;
		
		private System.Nullable<decimal> _packaging;
		
		private System.Nullable<decimal> _PriceCost;
		
		private System.Nullable<decimal> _PartingPrice;
		
		private System.Nullable<decimal> _AltogetherPrice;
		
		private System.Nullable<decimal> _SpecialPrice;
		
		private System.Nullable<decimal> _DescountValue;
		
		private System.Nullable<decimal> _DescountPercent;
		
		private string _Barcod;
		
		private System.Nullable<long> _MaxUnitID;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private System.Nullable<bool> _Status;
		
		private EntityRef<tblLSUnit> _tblLSUnit;
		
		private EntityRef<tblProducts> _tblProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(System.Nullable<long> value);
    partial void OnProductIDChanged();
    partial void OnUnitIDChanging(System.Nullable<long> value);
    partial void OnUnitIDChanged();
    partial void OnpackagingChanging(System.Nullable<decimal> value);
    partial void OnpackagingChanged();
    partial void OnPriceCostChanging(System.Nullable<decimal> value);
    partial void OnPriceCostChanged();
    partial void OnPartingPriceChanging(System.Nullable<decimal> value);
    partial void OnPartingPriceChanged();
    partial void OnAltogetherPriceChanging(System.Nullable<decimal> value);
    partial void OnAltogetherPriceChanged();
    partial void OnSpecialPriceChanging(System.Nullable<decimal> value);
    partial void OnSpecialPriceChanged();
    partial void OnDescountValueChanging(System.Nullable<decimal> value);
    partial void OnDescountValueChanged();
    partial void OnDescountPercentChanging(System.Nullable<decimal> value);
    partial void OnDescountPercentChanged();
    partial void OnBarcodChanging(string value);
    partial void OnBarcodChanged();
    partial void OnMaxUnitIDChanging(System.Nullable<long> value);
    partial void OnMaxUnitIDChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public tblUnit()
		{
			this._tblLSUnit = default(EntityRef<tblLSUnit>);
			this._tblProduct = default(EntityRef<tblProducts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="BigInt")]
		public System.Nullable<long> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._tblProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="BigInt")]
		public System.Nullable<long> UnitID
		{
			get
			{
				return this._UnitID;
			}
			set
			{
				if ((this._UnitID != value))
				{
					if (this._tblLSUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIDChanging(value);
					this.SendPropertyChanging();
					this._UnitID = value;
					this.SendPropertyChanged("UnitID");
					this.OnUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packaging", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> packaging
		{
			get
			{
				return this._packaging;
			}
			set
			{
				if ((this._packaging != value))
				{
					this.OnpackagingChanging(value);
					this.SendPropertyChanging();
					this._packaging = value;
					this.SendPropertyChanged("packaging");
					this.OnpackagingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceCost", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> PriceCost
		{
			get
			{
				return this._PriceCost;
			}
			set
			{
				if ((this._PriceCost != value))
				{
					this.OnPriceCostChanging(value);
					this.SendPropertyChanging();
					this._PriceCost = value;
					this.SendPropertyChanged("PriceCost");
					this.OnPriceCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartingPrice", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> PartingPrice
		{
			get
			{
				return this._PartingPrice;
			}
			set
			{
				if ((this._PartingPrice != value))
				{
					this.OnPartingPriceChanging(value);
					this.SendPropertyChanging();
					this._PartingPrice = value;
					this.SendPropertyChanged("PartingPrice");
					this.OnPartingPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltogetherPrice", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> AltogetherPrice
		{
			get
			{
				return this._AltogetherPrice;
			}
			set
			{
				if ((this._AltogetherPrice != value))
				{
					this.OnAltogetherPriceChanging(value);
					this.SendPropertyChanging();
					this._AltogetherPrice = value;
					this.SendPropertyChanged("AltogetherPrice");
					this.OnAltogetherPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialPrice", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> SpecialPrice
		{
			get
			{
				return this._SpecialPrice;
			}
			set
			{
				if ((this._SpecialPrice != value))
				{
					this.OnSpecialPriceChanging(value);
					this.SendPropertyChanging();
					this._SpecialPrice = value;
					this.SendPropertyChanged("SpecialPrice");
					this.OnSpecialPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescountValue", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> DescountValue
		{
			get
			{
				return this._DescountValue;
			}
			set
			{
				if ((this._DescountValue != value))
				{
					this.OnDescountValueChanging(value);
					this.SendPropertyChanging();
					this._DescountValue = value;
					this.SendPropertyChanged("DescountValue");
					this.OnDescountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescountPercent", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> DescountPercent
		{
			get
			{
				return this._DescountPercent;
			}
			set
			{
				if ((this._DescountPercent != value))
				{
					this.OnDescountPercentChanging(value);
					this.SendPropertyChanging();
					this._DescountPercent = value;
					this.SendPropertyChanged("DescountPercent");
					this.OnDescountPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcod", DbType="VarChar(100)")]
		public string Barcod
		{
			get
			{
				return this._Barcod;
			}
			set
			{
				if ((this._Barcod != value))
				{
					this.OnBarcodChanging(value);
					this.SendPropertyChanging();
					this._Barcod = value;
					this.SendPropertyChanged("Barcod");
					this.OnBarcodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxUnitID", DbType="BigInt")]
		public System.Nullable<long> MaxUnitID
		{
			get
			{
				return this._MaxUnitID;
			}
			set
			{
				if ((this._MaxUnitID != value))
				{
					this.OnMaxUnitIDChanging(value);
					this.SendPropertyChanging();
					this._MaxUnitID = value;
					this.SendPropertyChanged("MaxUnitID");
					this.OnMaxUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLSUnit_tblUnit", Storage="_tblLSUnit", ThisKey="UnitID", OtherKey="ID", IsForeignKey=true)]
		public tblLSUnit tblLSUnit
		{
			get
			{
				return this._tblLSUnit.Entity;
			}
			set
			{
				tblLSUnit previousValue = this._tblLSUnit.Entity;
				if (((previousValue != value) 
							|| (this._tblLSUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblLSUnit.Entity = null;
						previousValue.tblUnits.Remove(this);
					}
					this._tblLSUnit.Entity = value;
					if ((value != null))
					{
						value.tblUnits.Add(this);
						this._UnitID = value.ID;
					}
					else
					{
						this._UnitID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblLSUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProducts_tblUnit", Storage="_tblProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public tblProducts tblProducts
		{
			get
			{
				return this._tblProduct.Entity;
			}
			set
			{
				tblProducts previousValue = this._tblProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProduct.Entity = null;
						previousValue.tblUnits.Remove(this);
					}
					this._tblProduct.Entity = value;
					if ((value != null))
					{
						value.tblUnits.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblProducts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewAccounts")]
	public partial class vewAccount
	{
		
		private long _ID;
		
		private string _الحساب_الأب;
		
		private string _اسم_الحساب;
		
		private System.Nullable<long> _FatherNumber;
		
		private long _رقم_الحساب;
		
		private string _نوع_الحساب;
		
		private string _الحساب_الختامي;
		
		private string _المستخدم;
		
		private System.Nullable<System.DateTime> _وقت_الإدخال;
		
		private System.Nullable<long> _UserID;
		
		public vewAccount()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الحساب الأب]", Storage="_الحساب_الأب", DbType="VarChar(50)")]
		public string الحساب_الأب
		{
			get
			{
				return this._الحساب_الأب;
			}
			set
			{
				if ((this._الحساب_الأب != value))
				{
					this._الحساب_الأب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم الحساب]", Storage="_اسم_الحساب", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string اسم_الحساب
		{
			get
			{
				return this._اسم_الحساب;
			}
			set
			{
				if ((this._اسم_الحساب != value))
				{
					this._اسم_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherNumber", DbType="BigInt")]
		public System.Nullable<long> FatherNumber
		{
			get
			{
				return this._FatherNumber;
			}
			set
			{
				if ((this._FatherNumber != value))
				{
					this._FatherNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[رقم الحساب]", Storage="_رقم_الحساب", DbType="BigInt NOT NULL")]
		public long رقم_الحساب
		{
			get
			{
				return this._رقم_الحساب;
			}
			set
			{
				if ((this._رقم_الحساب != value))
				{
					this._رقم_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[نوع الحساب]", Storage="_نوع_الحساب", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string نوع_الحساب
		{
			get
			{
				return this._نوع_الحساب;
			}
			set
			{
				if ((this._نوع_الحساب != value))
				{
					this._نوع_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الحساب الختامي]", Storage="_الحساب_الختامي", DbType="VarChar(30)")]
		public string الحساب_الختامي
		{
			get
			{
				return this._الحساب_الختامي;
			}
			set
			{
				if ((this._الحساب_الختامي != value))
				{
					this._الحساب_الختامي = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المستخدم", DbType="VarChar(50)")]
		public string المستخدم
		{
			get
			{
				return this._المستخدم;
			}
			set
			{
				if ((this._المستخدم != value))
				{
					this._المستخدم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[وقت الإدخال]", Storage="_وقت_الإدخال", DbType="DateTime")]
		public System.Nullable<System.DateTime> وقت_الإدخال
		{
			get
			{
				return this._وقت_الإدخال;
			}
			set
			{
				if ((this._وقت_الإدخال != value))
				{
					this._وقت_الإدخال = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewCurrencies")]
	public partial class vewCurrency
	{
		
		private long _ID;
		
		private string _اسم_العملة;
		
		private string _الرمز_العربي;
		
		private string _الرمز_الأجنبي;
		
		private string _ملاحظات;
		
		private string _المستخدم;
		
		private System.Nullable<System.DateTime> _وقت_الإدخال;
		
		private System.Nullable<long> _UserID;
		
		public vewCurrency()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم العملة]", Storage="_اسم_العملة", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string اسم_العملة
		{
			get
			{
				return this._اسم_العملة;
			}
			set
			{
				if ((this._اسم_العملة != value))
				{
					this._اسم_العملة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الرمز العربي]", Storage="_الرمز_العربي", DbType="VarChar(10)")]
		public string الرمز_العربي
		{
			get
			{
				return this._الرمز_العربي;
			}
			set
			{
				if ((this._الرمز_العربي != value))
				{
					this._الرمز_العربي = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الرمز الأجنبي]", Storage="_الرمز_الأجنبي", DbType="VarChar(10)")]
		public string الرمز_الأجنبي
		{
			get
			{
				return this._الرمز_الأجنبي;
			}
			set
			{
				if ((this._الرمز_الأجنبي != value))
				{
					this._الرمز_الأجنبي = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ملاحظات", DbType="VarChar(250)")]
		public string ملاحظات
		{
			get
			{
				return this._ملاحظات;
			}
			set
			{
				if ((this._ملاحظات != value))
				{
					this._ملاحظات = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المستخدم", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string المستخدم
		{
			get
			{
				return this._المستخدم;
			}
			set
			{
				if ((this._المستخدم != value))
				{
					this._المستخدم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[وقت الإدخال]", Storage="_وقت_الإدخال", DbType="DateTime")]
		public System.Nullable<System.DateTime> وقت_الإدخال
		{
			get
			{
				return this._وقت_الإدخال;
			}
			set
			{
				if ((this._وقت_الإدخال != value))
				{
					this._وقت_الإدخال = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewCurrencies_CurrenciesPrices")]
	public partial class vewCurrencies_CurrenciesPrice
	{
		
		private long _ID;
		
		private string _اسم_العملة;
		
		private string _الرمز_العربي;
		
		private string _الرمز_الأجنبي;
		
		private System.Nullable<bool> _نوع_العملة;
		
		private decimal _سعر_التحويل;
		
		private decimal @__أقل_سعر_التحويل;
		
		private decimal @__أعلى_سعر_التحويل;
		
		private string _ملاحظات;
		
		private string _المستخدم;
		
		private System.Nullable<System.DateTime> _وقت_الإدخال;
		
		private System.Nullable<long> _UserID;
		
		private long _SourceCurrencyID;
		
		private long _TargetCurrencyID;
		
		private long _PricesID;
		
		private System.Nullable<long> _PricesUserID;
		
		private string _Notes;
		
		public vewCurrencies_CurrenciesPrice()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم العملة]", Storage="_اسم_العملة", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string اسم_العملة
		{
			get
			{
				return this._اسم_العملة;
			}
			set
			{
				if ((this._اسم_العملة != value))
				{
					this._اسم_العملة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الرمز العربي]", Storage="_الرمز_العربي", DbType="VarChar(10)")]
		public string الرمز_العربي
		{
			get
			{
				return this._الرمز_العربي;
			}
			set
			{
				if ((this._الرمز_العربي != value))
				{
					this._الرمز_العربي = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الرمز الأجنبي]", Storage="_الرمز_الأجنبي", DbType="VarChar(10)")]
		public string الرمز_الأجنبي
		{
			get
			{
				return this._الرمز_الأجنبي;
			}
			set
			{
				if ((this._الرمز_الأجنبي != value))
				{
					this._الرمز_الأجنبي = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[نوع العملة]", Storage="_نوع_العملة", DbType="Bit")]
		public System.Nullable<bool> نوع_العملة
		{
			get
			{
				return this._نوع_العملة;
			}
			set
			{
				if ((this._نوع_العملة != value))
				{
					this._نوع_العملة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[سعر التحويل]", Storage="_سعر_التحويل", DbType="Decimal(18,6) NOT NULL")]
		public decimal سعر_التحويل
		{
			get
			{
				return this._سعر_التحويل;
			}
			set
			{
				if ((this._سعر_التحويل != value))
				{
					this._سعر_التحويل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ أقل سعر التحويل]", Storage="__أقل_سعر_التحويل", DbType="Decimal(18,6) NOT NULL")]
		public decimal _أقل_سعر_التحويل
		{
			get
			{
				return this.@__أقل_سعر_التحويل;
			}
			set
			{
				if ((this.@__أقل_سعر_التحويل != value))
				{
					this.@__أقل_سعر_التحويل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ أعلى سعر التحويل]", Storage="__أعلى_سعر_التحويل", DbType="Decimal(18,6) NOT NULL")]
		public decimal _أعلى_سعر_التحويل
		{
			get
			{
				return this.@__أعلى_سعر_التحويل;
			}
			set
			{
				if ((this.@__أعلى_سعر_التحويل != value))
				{
					this.@__أعلى_سعر_التحويل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ملاحظات", DbType="VarChar(250)")]
		public string ملاحظات
		{
			get
			{
				return this._ملاحظات;
			}
			set
			{
				if ((this._ملاحظات != value))
				{
					this._ملاحظات = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المستخدم", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string المستخدم
		{
			get
			{
				return this._المستخدم;
			}
			set
			{
				if ((this._المستخدم != value))
				{
					this._المستخدم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[وقت الإدخال]", Storage="_وقت_الإدخال", DbType="DateTime")]
		public System.Nullable<System.DateTime> وقت_الإدخال
		{
			get
			{
				return this._وقت_الإدخال;
			}
			set
			{
				if ((this._وقت_الإدخال != value))
				{
					this._وقت_الإدخال = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCurrencyID", DbType="BigInt NOT NULL")]
		public long SourceCurrencyID
		{
			get
			{
				return this._SourceCurrencyID;
			}
			set
			{
				if ((this._SourceCurrencyID != value))
				{
					this._SourceCurrencyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetCurrencyID", DbType="BigInt NOT NULL")]
		public long TargetCurrencyID
		{
			get
			{
				return this._TargetCurrencyID;
			}
			set
			{
				if ((this._TargetCurrencyID != value))
				{
					this._TargetCurrencyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricesID", DbType="BigInt NOT NULL")]
		public long PricesID
		{
			get
			{
				return this._PricesID;
			}
			set
			{
				if ((this._PricesID != value))
				{
					this._PricesID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricesUserID", DbType="BigInt")]
		public System.Nullable<long> PricesUserID
		{
			get
			{
				return this._PricesUserID;
			}
			set
			{
				if ((this._PricesUserID != value))
				{
					this._PricesUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewCurrenciesPrices")]
	public partial class vewCurrenciesPrice
	{
		
		private long _ID;
		
		private string _تحويل_من;
		
		private string _تحويل_إلى;
		
		private decimal _سعر_التحويل;
		
		private decimal @__أقل_سعر_التحويل;
		
		private decimal @__أعلى_سعر_التحويل;
		
		private string _ملاحظات;
		
		private string _المستخدم;
		
		private System.Nullable<System.DateTime> _وقت_الإدخال;
		
		private System.Nullable<long> _UserID;
		
		private string _جهة_سعر_الصرف;
		
		public vewCurrenciesPrice()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تحويل من]", Storage="_تحويل_من", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string تحويل_من
		{
			get
			{
				return this._تحويل_من;
			}
			set
			{
				if ((this._تحويل_من != value))
				{
					this._تحويل_من = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تحويل إلى]", Storage="_تحويل_إلى", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string تحويل_إلى
		{
			get
			{
				return this._تحويل_إلى;
			}
			set
			{
				if ((this._تحويل_إلى != value))
				{
					this._تحويل_إلى = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[سعر التحويل]", Storage="_سعر_التحويل", DbType="Decimal(18,6) NOT NULL")]
		public decimal سعر_التحويل
		{
			get
			{
				return this._سعر_التحويل;
			}
			set
			{
				if ((this._سعر_التحويل != value))
				{
					this._سعر_التحويل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ أقل سعر التحويل]", Storage="__أقل_سعر_التحويل", DbType="Decimal(18,6) NOT NULL")]
		public decimal _أقل_سعر_التحويل
		{
			get
			{
				return this.@__أقل_سعر_التحويل;
			}
			set
			{
				if ((this.@__أقل_سعر_التحويل != value))
				{
					this.@__أقل_سعر_التحويل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ أعلى سعر التحويل]", Storage="__أعلى_سعر_التحويل", DbType="Decimal(18,6) NOT NULL")]
		public decimal _أعلى_سعر_التحويل
		{
			get
			{
				return this.@__أعلى_سعر_التحويل;
			}
			set
			{
				if ((this.@__أعلى_سعر_التحويل != value))
				{
					this.@__أعلى_سعر_التحويل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ملاحظات", DbType="VarChar(250)")]
		public string ملاحظات
		{
			get
			{
				return this._ملاحظات;
			}
			set
			{
				if ((this._ملاحظات != value))
				{
					this._ملاحظات = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المستخدم", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string المستخدم
		{
			get
			{
				return this._المستخدم;
			}
			set
			{
				if ((this._المستخدم != value))
				{
					this._المستخدم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[وقت الإدخال]", Storage="_وقت_الإدخال", DbType="DateTime")]
		public System.Nullable<System.DateTime> وقت_الإدخال
		{
			get
			{
				return this._وقت_الإدخال;
			}
			set
			{
				if ((this._وقت_الإدخال != value))
				{
					this._وقت_الإدخال = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[جهة سعر الصرف]", Storage="_جهة_سعر_الصرف", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string جهة_سعر_الصرف
		{
			get
			{
				return this._جهة_سعر_الصرف;
			}
			set
			{
				if ((this._جهة_سعر_الصرف != value))
				{
					this._جهة_سعر_الصرف = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewEntries")]
	public partial class vewEntry
	{
		
		private long _ID;
		
		private System.Data.Linq.Binary _RowVersion;
		
		private System.Nullable<long> _PrevRowVersion;
		
		private long _رقم_القيد;
		
		private long _رقم_المستند;
		
		private string _نوع_المستند;
		
		private long _RecordID;
		
		private System.DateTime _التاريخ;
		
		private string _ملاحظات;
		
		private long _UserID;
		
		private bool _مرحل;
		
		private System.Nullable<long> _Prints;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		public vewEntry()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this._RowVersion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevRowVersion", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> PrevRowVersion
		{
			get
			{
				return this._PrevRowVersion;
			}
			set
			{
				if ((this._PrevRowVersion != value))
				{
					this._PrevRowVersion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[رقم القيد]", Storage="_رقم_القيد", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long رقم_القيد
		{
			get
			{
				return this._رقم_القيد;
			}
			set
			{
				if ((this._رقم_القيد != value))
				{
					this._رقم_القيد = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[رقم المستند]", Storage="_رقم_المستند", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long رقم_المستند
		{
			get
			{
				return this._رقم_المستند;
			}
			set
			{
				if ((this._رقم_المستند != value))
				{
					this._رقم_المستند = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[نوع المستند]", Storage="_نوع_المستند", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string نوع_المستند
		{
			get
			{
				return this._نوع_المستند;
			}
			set
			{
				if ((this._نوع_المستند != value))
				{
					this._نوع_المستند = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this._RecordID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_التاريخ", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime التاريخ
		{
			get
			{
				return this._التاريخ;
			}
			set
			{
				if ((this._التاريخ != value))
				{
					this._التاريخ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ملاحظات", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string ملاحظات
		{
			get
			{
				return this._ملاحظات;
			}
			set
			{
				if ((this._ملاحظات != value))
				{
					this._ملاحظات = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_مرحل", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool مرحل
		{
			get
			{
				return this._مرحل;
			}
			set
			{
				if ((this._مرحل != value))
				{
					this._مرحل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prints", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> Prints
		{
			get
			{
				return this._Prints;
			}
			set
			{
				if ((this._Prints != value))
				{
					this._Prints = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this._EnterTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewEntriesDetails")]
	public partial class vewEntriesDetail
	{
		
		private long _ID;
		
		private System.Data.Linq.Binary _RowVersion;
		
		private System.Nullable<long> _PrevRowVersion;
		
		private System.Nullable<long> _ParentID;
		
		private System.Nullable<decimal> _المبلغ;
		
		private System.Nullable<long> _CurrencyID;
		
		private System.Nullable<decimal> _MCAmount;
		
		private System.Nullable<long> _AccountID;
		
		private string _ملاحظات;
		
		public vewEntriesDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this._RowVersion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevRowVersion", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> PrevRowVersion
		{
			get
			{
				return this._PrevRowVersion;
			}
			set
			{
				if ((this._PrevRowVersion != value))
				{
					this._PrevRowVersion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المبلغ", DbType="Decimal(20,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> المبلغ
		{
			get
			{
				return this._المبلغ;
			}
			set
			{
				if ((this._المبلغ != value))
				{
					this._المبلغ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this._CurrencyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCAmount", DbType="Decimal(20,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> MCAmount
		{
			get
			{
				return this._MCAmount;
			}
			set
			{
				if ((this._MCAmount != value))
				{
					this._MCAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ملاحظات", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string ملاحظات
		{
			get
			{
				return this._ملاحظات;
			}
			set
			{
				if ((this._ملاحظات != value))
				{
					this._ملاحظات = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VewM1")]
	public partial class VewM1
	{
		
		private string _AccountName;
		
		private string _CurrencyName;
		
		private System.Nullable<System.DateTime> _TheDate;
		
		public VewM1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this._TheDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VewM2")]
	public partial class VewM2
	{
		
		private string _AccountName;
		
		private System.Nullable<decimal> _MCAmount;
		
		private System.Nullable<decimal> _Amount;
		
		private System.DateTime _TheDate;
		
		public VewM2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCAmount", DbType="Decimal(20,4)")]
		public System.Nullable<decimal> MCAmount
		{
			get
			{
				return this._MCAmount;
			}
			set
			{
				if ((this._MCAmount != value))
				{
					this._MCAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(20,4)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="DateTime NOT NULL")]
		public System.DateTime TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this._TheDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewMain")]
	public partial class vewMain
	{
		
		private long _ID;
		
		private System.Nullable<long> _EntryID;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<long> _CurrencyID;
		
		private string _CurrencyName;
		
		private System.Nullable<decimal> _MCAmount;
		
		private System.Nullable<long> _AccountID;
		
		private System.Nullable<long> _DetailedAccountID;
		
		private string _AccountName;
		
		private string _DetailedAccountName;
		
		private long _AccountNumber;
		
		private System.Nullable<long> _FatherNumber;
		
		private System.DateTime _TheDate;
		
		private string _Notes;
		
		private long _RecordNumber;
		
		private long _RecordID;
		
		private long _UserID;
		
		private string _UserName;
		
		private string _DocumentName;
		
		private bool _مرحل;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		public vewMain()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", DbType="BigInt")]
		public System.Nullable<long> EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					this._EntryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(20,4)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="BigInt")]
		public System.Nullable<long> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this._CurrencyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCAmount", DbType="Decimal(20,4)")]
		public System.Nullable<decimal> MCAmount
		{
			get
			{
				return this._MCAmount;
			}
			set
			{
				if ((this._MCAmount != value))
				{
					this._MCAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt")]
		public System.Nullable<long> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailedAccountID", DbType="BigInt")]
		public System.Nullable<long> DetailedAccountID
		{
			get
			{
				return this._DetailedAccountID;
			}
			set
			{
				if ((this._DetailedAccountID != value))
				{
					this._DetailedAccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailedAccountName", DbType="VarChar(50)")]
		public string DetailedAccountName
		{
			get
			{
				return this._DetailedAccountName;
			}
			set
			{
				if ((this._DetailedAccountName != value))
				{
					this._DetailedAccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="BigInt NOT NULL")]
		public long AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherNumber", DbType="BigInt")]
		public System.Nullable<long> FatherNumber
		{
			get
			{
				return this._FatherNumber;
			}
			set
			{
				if ((this._FatherNumber != value))
				{
					this._FatherNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="DateTime NOT NULL")]
		public System.DateTime TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this._TheDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(255)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordNumber", DbType="BigInt NOT NULL")]
		public long RecordNumber
		{
			get
			{
				return this._RecordNumber;
			}
			set
			{
				if ((this._RecordNumber != value))
				{
					this._RecordNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", DbType="BigInt NOT NULL")]
		public long RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this._RecordID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this._DocumentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_مرحل", DbType="Bit NOT NULL")]
		public bool مرحل
		{
			get
			{
				return this._مرحل;
			}
			set
			{
				if ((this._مرحل != value))
				{
					this._مرحل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this._EnterTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VewMain1")]
	public partial class VewMain1
	{
		
		private System.Nullable<long> _AccountID;
		
		private System.Nullable<long> _FatherNumber;
		
		private string _AccountName;
		
		private System.Nullable<decimal> _Amount;
		
		private string _CurrencyName;
		
		public VewMain1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt")]
		public System.Nullable<long> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherNumber", DbType="BigInt")]
		public System.Nullable<long> FatherNumber
		{
			get
			{
				return this._FatherNumber;
			}
			set
			{
				if ((this._FatherNumber != value))
				{
					this._FatherNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VewMain2")]
	public partial class VewMain2
	{
		
		private string _AccountName;
		
		private string _CurrencyName;
		
		private System.Nullable<decimal> _MCAmount;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<System.DateTime> _TheDate;
		
		public VewMain2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCAmount", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> MCAmount
		{
			get
			{
				return this._MCAmount;
			}
			set
			{
				if ((this._MCAmount != value))
				{
					this._MCAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this._TheDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VewMain3")]
	public partial class VewMain3
	{
		
		private System.Nullable<long> _AccountID;
		
		private System.Nullable<long> _FatherNumber;
		
		private string _اسم_الحساب;
		
		private System.Nullable<decimal> _المبلغ_مدين;
		
		private System.Nullable<decimal> _مبلغ_آخر_تسديد;
		
		private System.Nullable<decimal> _مبلغ_آخر_تسديد_بالعملة;
		
		private string _CurrencyName;
		
		private System.Nullable<System.DateTime> _تاريخ_آخر_تسديد;
		
		private System.Nullable<int> _عمر_الدين;
		
		public VewMain3()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt")]
		public System.Nullable<long> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherNumber", DbType="BigInt")]
		public System.Nullable<long> FatherNumber
		{
			get
			{
				return this._FatherNumber;
			}
			set
			{
				if ((this._FatherNumber != value))
				{
					this._FatherNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم الحساب]", Storage="_اسم_الحساب", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string اسم_الحساب
		{
			get
			{
				return this._اسم_الحساب;
			}
			set
			{
				if ((this._اسم_الحساب != value))
				{
					this._اسم_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[المبلغ مدين]", Storage="_المبلغ_مدين", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> المبلغ_مدين
		{
			get
			{
				return this._المبلغ_مدين;
			}
			set
			{
				if ((this._المبلغ_مدين != value))
				{
					this._المبلغ_مدين = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[مبلغ آخر تسديد]", Storage="_مبلغ_آخر_تسديد", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> مبلغ_آخر_تسديد
		{
			get
			{
				return this._مبلغ_آخر_تسديد;
			}
			set
			{
				if ((this._مبلغ_آخر_تسديد != value))
				{
					this._مبلغ_آخر_تسديد = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[مبلغ آخر تسديد بالعملة]", Storage="_مبلغ_آخر_تسديد_بالعملة", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> مبلغ_آخر_تسديد_بالعملة
		{
			get
			{
				return this._مبلغ_آخر_تسديد_بالعملة;
			}
			set
			{
				if ((this._مبلغ_آخر_تسديد_بالعملة != value))
				{
					this._مبلغ_آخر_تسديد_بالعملة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تاريخ آخر تسديد]", Storage="_تاريخ_آخر_تسديد", DbType="DateTime")]
		public System.Nullable<System.DateTime> تاريخ_آخر_تسديد
		{
			get
			{
				return this._تاريخ_آخر_تسديد;
			}
			set
			{
				if ((this._تاريخ_آخر_تسديد != value))
				{
					this._تاريخ_آخر_تسديد = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[عمر الدين]", Storage="_عمر_الدين", DbType="Int")]
		public System.Nullable<int> عمر_الدين
		{
			get
			{
				return this._عمر_الدين;
			}
			set
			{
				if ((this._عمر_الدين != value))
				{
					this._عمر_الدين = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewMainSearch")]
	public partial class vewMainSearch
	{
		
		private long _ID;
		
		private System.Nullable<long> _CurrencyID;
		
		private long _رقم_الحساب;
		
		private string _اسم_الحساب;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _مدين;
		
		private System.Nullable<decimal> _دائن;
		
		private System.Nullable<decimal> _المبلغ;
		
		private string _العملة;
		
		private string _EnglishCode;
		
		private System.Nullable<decimal> _المقابل;
		
		private System.Nullable<decimal> _السعر;
		
		private System.Nullable<long> _رقم_الحساب_الأب;
		
		private System.DateTime _التاريخ;
		
		private string _ملاحظات;
		
		private string _المستخدم;
		
		private string _نوع_المستند;
		
		public vewMainSearch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="BigInt")]
		public System.Nullable<long> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this._CurrencyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[رقم الحساب]", Storage="_رقم_الحساب", DbType="BigInt NOT NULL")]
		public long رقم_الحساب
		{
			get
			{
				return this._رقم_الحساب;
			}
			set
			{
				if ((this._رقم_الحساب != value))
				{
					this._رقم_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم الحساب]", Storage="_اسم_الحساب", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string اسم_الحساب
		{
			get
			{
				return this._اسم_الحساب;
			}
			set
			{
				if ((this._اسم_الحساب != value))
				{
					this._اسم_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(20,4)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_مدين", DbType="Decimal(20,4)")]
		public System.Nullable<decimal> مدين
		{
			get
			{
				return this._مدين;
			}
			set
			{
				if ((this._مدين != value))
				{
					this._مدين = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_دائن", DbType="Decimal(20,4)")]
		public System.Nullable<decimal> دائن
		{
			get
			{
				return this._دائن;
			}
			set
			{
				if ((this._دائن != value))
				{
					this._دائن = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المبلغ", DbType="Decimal(20,4)")]
		public System.Nullable<decimal> المبلغ
		{
			get
			{
				return this._المبلغ;
			}
			set
			{
				if ((this._المبلغ != value))
				{
					this._المبلغ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_العملة", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string العملة
		{
			get
			{
				return this._العملة;
			}
			set
			{
				if ((this._العملة != value))
				{
					this._العملة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishCode", DbType="VarChar(10)")]
		public string EnglishCode
		{
			get
			{
				return this._EnglishCode;
			}
			set
			{
				if ((this._EnglishCode != value))
				{
					this._EnglishCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المقابل", DbType="Decimal(20,4)")]
		public System.Nullable<decimal> المقابل
		{
			get
			{
				return this._المقابل;
			}
			set
			{
				if ((this._المقابل != value))
				{
					this._المقابل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_السعر", DbType="Decimal(38,18)")]
		public System.Nullable<decimal> السعر
		{
			get
			{
				return this._السعر;
			}
			set
			{
				if ((this._السعر != value))
				{
					this._السعر = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[رقم الحساب الأب]", Storage="_رقم_الحساب_الأب", DbType="BigInt")]
		public System.Nullable<long> رقم_الحساب_الأب
		{
			get
			{
				return this._رقم_الحساب_الأب;
			}
			set
			{
				if ((this._رقم_الحساب_الأب != value))
				{
					this._رقم_الحساب_الأب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_التاريخ", DbType="DateTime NOT NULL")]
		public System.DateTime التاريخ
		{
			get
			{
				return this._التاريخ;
			}
			set
			{
				if ((this._التاريخ != value))
				{
					this._التاريخ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ملاحظات", DbType="VarChar(255)")]
		public string ملاحظات
		{
			get
			{
				return this._ملاحظات;
			}
			set
			{
				if ((this._ملاحظات != value))
				{
					this._ملاحظات = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المستخدم", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string المستخدم
		{
			get
			{
				return this._المستخدم;
			}
			set
			{
				if ((this._المستخدم != value))
				{
					this._المستخدم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[نوع المستند]", Storage="_نوع_المستند", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string نوع_المستند
		{
			get
			{
				return this._نوع_المستند;
			}
			set
			{
				if ((this._نوع_المستند != value))
				{
					this._نوع_المستند = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewMainUnRelay")]
	public partial class vewMainUnRelay
	{
		
		private long _ID;
		
		private System.Nullable<long> _EntryID;
		
		private System.Nullable<decimal> _المبلغ;
		
		private System.Nullable<long> _CurrencyID;
		
		private string _العملة;
		
		private System.Nullable<decimal> _المقابل;
		
		private System.Nullable<long> _AccountID;
		
		private System.Nullable<long> _DetailedAccountID;
		
		private string _اسم_الحساب;
		
		private string _DetailedAccountName;
		
		private long _رقم_الحساب;
		
		private System.Nullable<long> _FatherNumber;
		
		private System.DateTime _التاريخ;
		
		private string _ملاحظات;
		
		private long _RecordNumber;
		
		private long _RecordID;
		
		private long _UserID;
		
		private string _UserName;
		
		private string _المستند;
		
		private bool _Debited;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		public vewMainUnRelay()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", DbType="BigInt")]
		public System.Nullable<long> EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					this._EntryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المبلغ", DbType="Decimal(20,4)")]
		public System.Nullable<decimal> المبلغ
		{
			get
			{
				return this._المبلغ;
			}
			set
			{
				if ((this._المبلغ != value))
				{
					this._المبلغ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="BigInt")]
		public System.Nullable<long> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this._CurrencyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_العملة", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string العملة
		{
			get
			{
				return this._العملة;
			}
			set
			{
				if ((this._العملة != value))
				{
					this._العملة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المقابل", DbType="Decimal(20,4)")]
		public System.Nullable<decimal> المقابل
		{
			get
			{
				return this._المقابل;
			}
			set
			{
				if ((this._المقابل != value))
				{
					this._المقابل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt")]
		public System.Nullable<long> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailedAccountID", DbType="BigInt")]
		public System.Nullable<long> DetailedAccountID
		{
			get
			{
				return this._DetailedAccountID;
			}
			set
			{
				if ((this._DetailedAccountID != value))
				{
					this._DetailedAccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم الحساب]", Storage="_اسم_الحساب", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string اسم_الحساب
		{
			get
			{
				return this._اسم_الحساب;
			}
			set
			{
				if ((this._اسم_الحساب != value))
				{
					this._اسم_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailedAccountName", DbType="VarChar(50)")]
		public string DetailedAccountName
		{
			get
			{
				return this._DetailedAccountName;
			}
			set
			{
				if ((this._DetailedAccountName != value))
				{
					this._DetailedAccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[رقم الحساب]", Storage="_رقم_الحساب", DbType="BigInt NOT NULL")]
		public long رقم_الحساب
		{
			get
			{
				return this._رقم_الحساب;
			}
			set
			{
				if ((this._رقم_الحساب != value))
				{
					this._رقم_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherNumber", DbType="BigInt")]
		public System.Nullable<long> FatherNumber
		{
			get
			{
				return this._FatherNumber;
			}
			set
			{
				if ((this._FatherNumber != value))
				{
					this._FatherNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_التاريخ", DbType="DateTime NOT NULL")]
		public System.DateTime التاريخ
		{
			get
			{
				return this._التاريخ;
			}
			set
			{
				if ((this._التاريخ != value))
				{
					this._التاريخ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ملاحظات", DbType="VarChar(255)")]
		public string ملاحظات
		{
			get
			{
				return this._ملاحظات;
			}
			set
			{
				if ((this._ملاحظات != value))
				{
					this._ملاحظات = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordNumber", DbType="BigInt NOT NULL")]
		public long RecordNumber
		{
			get
			{
				return this._RecordNumber;
			}
			set
			{
				if ((this._RecordNumber != value))
				{
					this._RecordNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", DbType="BigInt NOT NULL")]
		public long RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this._RecordID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المستند", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string المستند
		{
			get
			{
				return this._المستند;
			}
			set
			{
				if ((this._المستند != value))
				{
					this._المستند = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debited", DbType="Bit NOT NULL")]
		public bool Debited
		{
			get
			{
				return this._Debited;
			}
			set
			{
				if ((this._Debited != value))
				{
					this._Debited = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this._EnterTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewMainWithUndebitedIncomingTransfers")]
	public partial class vewMainWithUndebitedIncomingTransfer
	{
		
		private long _ID;
		
		private System.Nullable<long> _EntryID;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<long> _CurrencyID;
		
		private string _CurrencyName;
		
		private System.Nullable<decimal> _MCAmount;
		
		private System.Nullable<long> _AccountID;
		
		private string _AccountName;
		
		private long _AccountNumber;
		
		private System.Nullable<long> _FatherNumber;
		
		private System.DateTime _TheDate;
		
		private string _Notes;
		
		private long _RecordNumber;
		
		private long _RecordID;
		
		private long _UserID;
		
		private string _UserName;
		
		private string _DocumentName;
		
		public vewMainWithUndebitedIncomingTransfer()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", DbType="BigInt")]
		public System.Nullable<long> EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					this._EntryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(20,4)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="BigInt")]
		public System.Nullable<long> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this._CurrencyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCAmount", DbType="Decimal(20,4)")]
		public System.Nullable<decimal> MCAmount
		{
			get
			{
				return this._MCAmount;
			}
			set
			{
				if ((this._MCAmount != value))
				{
					this._MCAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt")]
		public System.Nullable<long> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="BigInt NOT NULL")]
		public long AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherNumber", DbType="BigInt")]
		public System.Nullable<long> FatherNumber
		{
			get
			{
				return this._FatherNumber;
			}
			set
			{
				if ((this._FatherNumber != value))
				{
					this._FatherNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="DateTime NOT NULL")]
		public System.DateTime TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this._TheDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(255)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordNumber", DbType="BigInt NOT NULL")]
		public long RecordNumber
		{
			get
			{
				return this._RecordNumber;
			}
			set
			{
				if ((this._RecordNumber != value))
				{
					this._RecordNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", DbType="BigInt NOT NULL")]
		public long RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this._RecordID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this._DocumentName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewSpending")]
	public partial class vewSpending
	{
		
		private long _ID;
		
		private long _الرقم;
		
		private System.Nullable<System.DateTime> _التاريخ;
		
		private string _طريقة_الصرف;
		
		private decimal _المبلغ;
		
		private string _العملة;
		
		private string _الصندوق;
		
		private decimal _مبلغ_الحساب;
		
		private string _عملة_الحساب;
		
		private string _اسم_الحساب;
		
		private string _ملاحظات;
		
		private string _مناولة;
		
		private string _المستخدم;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<System.DateTime> _وقت_الإدخال;
		
		private System.Nullable<long> _الطبعات;
		
		private System.Nullable<long> _EntryID;
		
		public vewSpending()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الرقم", DbType="BigInt NOT NULL")]
		public long الرقم
		{
			get
			{
				return this._الرقم;
			}
			set
			{
				if ((this._الرقم != value))
				{
					this._الرقم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_التاريخ", DbType="DateTime")]
		public System.Nullable<System.DateTime> التاريخ
		{
			get
			{
				return this._التاريخ;
			}
			set
			{
				if ((this._التاريخ != value))
				{
					this._التاريخ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[طريقة الصرف]", Storage="_طريقة_الصرف", DbType="VarChar(50)")]
		public string طريقة_الصرف
		{
			get
			{
				return this._طريقة_الصرف;
			}
			set
			{
				if ((this._طريقة_الصرف != value))
				{
					this._طريقة_الصرف = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المبلغ", DbType="Decimal(18,6) NOT NULL")]
		public decimal المبلغ
		{
			get
			{
				return this._المبلغ;
			}
			set
			{
				if ((this._المبلغ != value))
				{
					this._المبلغ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_العملة", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string العملة
		{
			get
			{
				return this._العملة;
			}
			set
			{
				if ((this._العملة != value))
				{
					this._العملة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الصندوق", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string الصندوق
		{
			get
			{
				return this._الصندوق;
			}
			set
			{
				if ((this._الصندوق != value))
				{
					this._الصندوق = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[مبلغ الحساب]", Storage="_مبلغ_الحساب", DbType="Decimal(18,6) NOT NULL")]
		public decimal مبلغ_الحساب
		{
			get
			{
				return this._مبلغ_الحساب;
			}
			set
			{
				if ((this._مبلغ_الحساب != value))
				{
					this._مبلغ_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[عملة الحساب]", Storage="_عملة_الحساب", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string عملة_الحساب
		{
			get
			{
				return this._عملة_الحساب;
			}
			set
			{
				if ((this._عملة_الحساب != value))
				{
					this._عملة_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم الحساب]", Storage="_اسم_الحساب", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string اسم_الحساب
		{
			get
			{
				return this._اسم_الحساب;
			}
			set
			{
				if ((this._اسم_الحساب != value))
				{
					this._اسم_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ملاحظات", DbType="VarChar(255)")]
		public string ملاحظات
		{
			get
			{
				return this._ملاحظات;
			}
			set
			{
				if ((this._ملاحظات != value))
				{
					this._ملاحظات = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_مناولة", DbType="VarChar(150)")]
		public string مناولة
		{
			get
			{
				return this._مناولة;
			}
			set
			{
				if ((this._مناولة != value))
				{
					this._مناولة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المستخدم", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string المستخدم
		{
			get
			{
				return this._المستخدم;
			}
			set
			{
				if ((this._المستخدم != value))
				{
					this._المستخدم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[وقت الإدخال]", Storage="_وقت_الإدخال", DbType="DateTime")]
		public System.Nullable<System.DateTime> وقت_الإدخال
		{
			get
			{
				return this._وقت_الإدخال;
			}
			set
			{
				if ((this._وقت_الإدخال != value))
				{
					this._وقت_الإدخال = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الطبعات", DbType="BigInt")]
		public System.Nullable<long> الطبعات
		{
			get
			{
				return this._الطبعات;
			}
			set
			{
				if ((this._الطبعات != value))
				{
					this._الطبعات = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", DbType="BigInt")]
		public System.Nullable<long> EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					this._EntryID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewUsers")]
	public partial class vewUser
	{
		
		private long _ID;
		
		private System.Nullable<long> _RowVersion;
		
		private long _الرقم;
		
		private string _اسم_المستخدم;
		
		private bool _المستخدم_موقوف;
		
		private System.Nullable<bool> _للقراءة_فقط;
		
		private string _ملاحظات;
		
		private string _المستخدم;
		
		private System.DateTime _وقت_الإدخال;
		
		private System.Nullable<long> _UserID;
		
		public vewUser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="BigInt")]
		public System.Nullable<long> RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this._RowVersion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الرقم", DbType="BigInt NOT NULL")]
		public long الرقم
		{
			get
			{
				return this._الرقم;
			}
			set
			{
				if ((this._الرقم != value))
				{
					this._الرقم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم المستخدم]", Storage="_اسم_المستخدم", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string اسم_المستخدم
		{
			get
			{
				return this._اسم_المستخدم;
			}
			set
			{
				if ((this._اسم_المستخدم != value))
				{
					this._اسم_المستخدم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[المستخدم موقوف]", Storage="_المستخدم_موقوف", DbType="Bit NOT NULL")]
		public bool المستخدم_موقوف
		{
			get
			{
				return this._المستخدم_موقوف;
			}
			set
			{
				if ((this._المستخدم_موقوف != value))
				{
					this._المستخدم_موقوف = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[للقراءة فقط]", Storage="_للقراءة_فقط", DbType="Bit")]
		public System.Nullable<bool> للقراءة_فقط
		{
			get
			{
				return this._للقراءة_فقط;
			}
			set
			{
				if ((this._للقراءة_فقط != value))
				{
					this._للقراءة_فقط = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ملاحظات", DbType="VarChar(250)")]
		public string ملاحظات
		{
			get
			{
				return this._ملاحظات;
			}
			set
			{
				if ((this._ملاحظات != value))
				{
					this._ملاحظات = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المستخدم", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string المستخدم
		{
			get
			{
				return this._المستخدم;
			}
			set
			{
				if ((this._المستخدم != value))
				{
					this._المستخدم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[وقت الإدخال]", Storage="_وقت_الإدخال", DbType="DateTime NOT NULL")]
		public System.DateTime وقت_الإدخال
		{
			get
			{
				return this._وقت_الإدخال;
			}
			set
			{
				if ((this._وقت_الإدخال != value))
				{
					this._وقت_الإدخال = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAccounts")]
	public partial class tblAccounts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _FatherNumber;
		
		private string _AccountName;
		
		private long _AccountNumber;
		
		private string _AccountType;
		
		private string _AccountReference;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private EntitySet<tblEntriesDetail> _tblEntriesDetails;
		
		private EntitySet<tblEntriesDetail> _tblEntriesDetails1;
		
		private EntitySet<tblReceiving> _tblReceivings;
		
		private EntitySet<tblReceiving> _tblReceivings1;
		
		private EntitySet<tblSpending> _tblSpendings;
		
		private EntitySet<tblSpending> _tblSpendings1;
		
		private EntitySet<tblSalesInvoice> _tblSalesInvoices;
		
		private EntitySet<tblPurchaseInvoice> _tblPurchaseInvoices;
		
		private EntitySet<tblAccountsDelegation> _tblAccountsDelegations;
		
		private EntitySet<tblSMS_CustomersDirectory> _tblSMS_CustomersDirectories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnFatherNumberChanging(System.Nullable<long> value);
    partial void OnFatherNumberChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnAccountNumberChanging(long value);
    partial void OnAccountNumberChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    partial void OnAccountReferenceChanging(string value);
    partial void OnAccountReferenceChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblAccounts()
		{
			this._tblEntriesDetails = new EntitySet<tblEntriesDetail>(new Action<tblEntriesDetail>(this.attach_tblEntriesDetails), new Action<tblEntriesDetail>(this.detach_tblEntriesDetails));
			this._tblEntriesDetails1 = new EntitySet<tblEntriesDetail>(new Action<tblEntriesDetail>(this.attach_tblEntriesDetails1), new Action<tblEntriesDetail>(this.detach_tblEntriesDetails1));
			this._tblReceivings = new EntitySet<tblReceiving>(new Action<tblReceiving>(this.attach_tblReceivings), new Action<tblReceiving>(this.detach_tblReceivings));
			this._tblReceivings1 = new EntitySet<tblReceiving>(new Action<tblReceiving>(this.attach_tblReceivings1), new Action<tblReceiving>(this.detach_tblReceivings1));
			this._tblSpendings = new EntitySet<tblSpending>(new Action<tblSpending>(this.attach_tblSpendings), new Action<tblSpending>(this.detach_tblSpendings));
			this._tblSpendings1 = new EntitySet<tblSpending>(new Action<tblSpending>(this.attach_tblSpendings1), new Action<tblSpending>(this.detach_tblSpendings1));
			this._tblSalesInvoices = new EntitySet<tblSalesInvoice>(new Action<tblSalesInvoice>(this.attach_tblSalesInvoices), new Action<tblSalesInvoice>(this.detach_tblSalesInvoices));
			this._tblPurchaseInvoices = new EntitySet<tblPurchaseInvoice>(new Action<tblPurchaseInvoice>(this.attach_tblPurchaseInvoices), new Action<tblPurchaseInvoice>(this.detach_tblPurchaseInvoices));
			this._tblAccountsDelegations = new EntitySet<tblAccountsDelegation>(new Action<tblAccountsDelegation>(this.attach_tblAccountsDelegations), new Action<tblAccountsDelegation>(this.detach_tblAccountsDelegations));
			this._tblSMS_CustomersDirectories = new EntitySet<tblSMS_CustomersDirectory>(new Action<tblSMS_CustomersDirectory>(this.attach_tblSMS_CustomersDirectories), new Action<tblSMS_CustomersDirectory>(this.detach_tblSMS_CustomersDirectories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherNumber", DbType="BigInt")]
		public System.Nullable<long> FatherNumber
		{
			get
			{
				return this._FatherNumber;
			}
			set
			{
				if ((this._FatherNumber != value))
				{
					this.OnFatherNumberChanging(value);
					this.SendPropertyChanging();
					this._FatherNumber = value;
					this.SendPropertyChanged("FatherNumber");
					this.OnFatherNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="BigInt NOT NULL")]
		public long AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountReference", DbType="VarChar(30)")]
		public string AccountReference
		{
			get
			{
				return this._AccountReference;
			}
			set
			{
				if ((this._AccountReference != value))
				{
					this.OnAccountReferenceChanging(value);
					this.SendPropertyChanging();
					this._AccountReference = value;
					this.SendPropertyChanged("AccountReference");
					this.OnAccountReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblEntriesDetail", Storage="_tblEntriesDetails", ThisKey="ID", OtherKey="AccountID")]
		public EntitySet<tblEntriesDetail> tblEntriesDetails
		{
			get
			{
				return this._tblEntriesDetails;
			}
			set
			{
				this._tblEntriesDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblEntriesDetail1", Storage="_tblEntriesDetails1", ThisKey="ID", OtherKey="DetailedAccountID")]
		public EntitySet<tblEntriesDetail> tblEntriesDetails1
		{
			get
			{
				return this._tblEntriesDetails1;
			}
			set
			{
				this._tblEntriesDetails1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblReceiving", Storage="_tblReceivings", ThisKey="ID", OtherKey="ExchangeAccountID")]
		public EntitySet<tblReceiving> tblReceivings
		{
			get
			{
				return this._tblReceivings;
			}
			set
			{
				this._tblReceivings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblReceiving1", Storage="_tblReceivings1", ThisKey="ID", OtherKey="AccountID")]
		public EntitySet<tblReceiving> tblReceivings1
		{
			get
			{
				return this._tblReceivings1;
			}
			set
			{
				this._tblReceivings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblSpending", Storage="_tblSpendings", ThisKey="ID", OtherKey="ExchangeAccountID")]
		public EntitySet<tblSpending> tblSpendings
		{
			get
			{
				return this._tblSpendings;
			}
			set
			{
				this._tblSpendings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblSpending1", Storage="_tblSpendings1", ThisKey="ID", OtherKey="AccountID")]
		public EntitySet<tblSpending> tblSpendings1
		{
			get
			{
				return this._tblSpendings1;
			}
			set
			{
				this._tblSpendings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblSalesInvoice", Storage="_tblSalesInvoices", ThisKey="ID", OtherKey="AccountID")]
		public EntitySet<tblSalesInvoice> tblSalesInvoices
		{
			get
			{
				return this._tblSalesInvoices;
			}
			set
			{
				this._tblSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblPurchaseInvoice", Storage="_tblPurchaseInvoices", ThisKey="ID", OtherKey="AccountID")]
		public EntitySet<tblPurchaseInvoice> tblPurchaseInvoices
		{
			get
			{
				return this._tblPurchaseInvoices;
			}
			set
			{
				this._tblPurchaseInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblAccountsDelegation", Storage="_tblAccountsDelegations", ThisKey="ID", OtherKey="AccountID")]
		public EntitySet<tblAccountsDelegation> tblAccountsDelegations
		{
			get
			{
				return this._tblAccountsDelegations;
			}
			set
			{
				this._tblAccountsDelegations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblSMS_CustomersDirectory", Storage="_tblSMS_CustomersDirectories", ThisKey="ID", OtherKey="AccountID")]
		public EntitySet<tblSMS_CustomersDirectory> tblSMS_CustomersDirectories
		{
			get
			{
				return this._tblSMS_CustomersDirectories;
			}
			set
			{
				this._tblSMS_CustomersDirectories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblEntriesDetails(tblEntriesDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblAccount = this;
		}
		
		private void detach_tblEntriesDetails(tblEntriesDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblAccount = null;
		}
		
		private void attach_tblEntriesDetails1(tblEntriesDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts = this;
		}
		
		private void detach_tblEntriesDetails1(tblEntriesDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts = null;
		}
		
		private void attach_tblReceivings(tblReceiving entity)
		{
			this.SendPropertyChanging();
			entity.tblAccount = this;
		}
		
		private void detach_tblReceivings(tblReceiving entity)
		{
			this.SendPropertyChanging();
			entity.tblAccount = null;
		}
		
		private void attach_tblReceivings1(tblReceiving entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts = this;
		}
		
		private void detach_tblReceivings1(tblReceiving entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts = null;
		}
		
		private void attach_tblSpendings(tblSpending entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts = this;
		}
		
		private void detach_tblSpendings(tblSpending entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts = null;
		}
		
		private void attach_tblSpendings1(tblSpending entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts1 = this;
		}
		
		private void detach_tblSpendings1(tblSpending entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts1 = null;
		}
		
		private void attach_tblSalesInvoices(tblSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts = this;
		}
		
		private void detach_tblSalesInvoices(tblSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts = null;
		}
		
		private void attach_tblPurchaseInvoices(tblPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts = this;
		}
		
		private void detach_tblPurchaseInvoices(tblPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts = null;
		}
		
		private void attach_tblAccountsDelegations(tblAccountsDelegation entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts = this;
		}
		
		private void detach_tblAccountsDelegations(tblAccountsDelegation entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts = null;
		}
		
		private void attach_tblSMS_CustomersDirectories(tblSMS_CustomersDirectory entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts = this;
		}
		
		private void detach_tblSMS_CustomersDirectories(tblSMS_CustomersDirectory entity)
		{
			this.SendPropertyChanging();
			entity.tblAccounts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewAccountsMina")]
	public partial class vewAccountsMina
	{
		
		private string _اسم_الحساب;
		
		private string _نوع_الحساب;
		
		private string _الحساب_الختامي;
		
		private long _رقم_الحساب;
		
		private System.Nullable<long> _FatherNumber;
		
		public vewAccountsMina()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم الحساب]", Storage="_اسم_الحساب", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string اسم_الحساب
		{
			get
			{
				return this._اسم_الحساب;
			}
			set
			{
				if ((this._اسم_الحساب != value))
				{
					this._اسم_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[نوع الحساب]", Storage="_نوع_الحساب", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string نوع_الحساب
		{
			get
			{
				return this._نوع_الحساب;
			}
			set
			{
				if ((this._نوع_الحساب != value))
				{
					this._نوع_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الحساب الختامي]", Storage="_الحساب_الختامي", DbType="VarChar(30)")]
		public string الحساب_الختامي
		{
			get
			{
				return this._الحساب_الختامي;
			}
			set
			{
				if ((this._الحساب_الختامي != value))
				{
					this._الحساب_الختامي = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[رقم الحساب]", Storage="_رقم_الحساب", DbType="BigInt NOT NULL")]
		public long رقم_الحساب
		{
			get
			{
				return this._رقم_الحساب;
			}
			set
			{
				if ((this._رقم_الحساب != value))
				{
					this._رقم_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherNumber", DbType="BigInt")]
		public System.Nullable<long> FatherNumber
		{
			get
			{
				return this._FatherNumber;
			}
			set
			{
				if ((this._FatherNumber != value))
				{
					this._FatherNumber = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLSTypeProduct")]
	public partial class tblLSTypeProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private System.Nullable<long> _ParentID;
		
		private EntitySet<tblProducts> _tblProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Nullable<long> value);
    partial void OnParentIDChanged();
    #endregion
		
		public tblLSTypeProduct()
		{
			this._tblProducts = new EntitySet<tblProducts>(new Action<tblProducts>(this.attach_tblProducts), new Action<tblProducts>(this.detach_tblProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="BigInt")]
		public System.Nullable<long> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLSTypeProduct_tblProducts", Storage="_tblProducts", ThisKey="ID", OtherKey="categoryID")]
		public EntitySet<tblProducts> tblProducts
		{
			get
			{
				return this._tblProducts;
			}
			set
			{
				this._tblProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblProducts(tblProducts entity)
		{
			this.SendPropertyChanging();
			entity.tblLSTypeProduct = this;
		}
		
		private void detach_tblProducts(tblProducts entity)
		{
			this.SendPropertyChanging();
			entity.tblLSTypeProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProducts")]
	public partial class tblProducts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _ProductName;
		
		private string _EnglishProductName;
		
		private string _ProductDesc;
		
		private System.Data.Linq.Binary _ProductImages;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private long _Type;
		
		private long _categoryID;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<bool> _Status;
		
		private EntitySet<tblUnit> _tblUnits;
		
		private EntitySet<tblSalesInvoicesDetaile> _tblSalesInvoicesDetailes;
		
		private EntitySet<tblPurchaseInvoicesDetaile> _tblPurchaseInvoicesDetailes;
		
		private EntityRef<tblLSTypeProduct> _tblLSTypeProduct;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnEnglishProductNameChanging(string value);
    partial void OnEnglishProductNameChanged();
    partial void OnProductDescChanging(string value);
    partial void OnProductDescChanged();
    partial void OnProductImagesChanging(System.Data.Linq.Binary value);
    partial void OnProductImagesChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    partial void OnTypeChanging(long value);
    partial void OnTypeChanged();
    partial void OncategoryIDChanging(long value);
    partial void OncategoryIDChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public tblProducts()
		{
			this._tblUnits = new EntitySet<tblUnit>(new Action<tblUnit>(this.attach_tblUnits), new Action<tblUnit>(this.detach_tblUnits));
			this._tblSalesInvoicesDetailes = new EntitySet<tblSalesInvoicesDetaile>(new Action<tblSalesInvoicesDetaile>(this.attach_tblSalesInvoicesDetailes), new Action<tblSalesInvoicesDetaile>(this.detach_tblSalesInvoicesDetailes));
			this._tblPurchaseInvoicesDetailes = new EntitySet<tblPurchaseInvoicesDetaile>(new Action<tblPurchaseInvoicesDetaile>(this.attach_tblPurchaseInvoicesDetailes), new Action<tblPurchaseInvoicesDetaile>(this.detach_tblPurchaseInvoicesDetailes));
			this._tblLSTypeProduct = default(EntityRef<tblLSTypeProduct>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishProductName", DbType="VarChar(50)")]
		public string EnglishProductName
		{
			get
			{
				return this._EnglishProductName;
			}
			set
			{
				if ((this._EnglishProductName != value))
				{
					this.OnEnglishProductNameChanging(value);
					this.SendPropertyChanging();
					this._EnglishProductName = value;
					this.SendPropertyChanged("EnglishProductName");
					this.OnEnglishProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDesc", DbType="VarChar(150)")]
		public string ProductDesc
		{
			get
			{
				return this._ProductDesc;
			}
			set
			{
				if ((this._ProductDesc != value))
				{
					this.OnProductDescChanging(value);
					this.SendPropertyChanging();
					this._ProductDesc = value;
					this.SendPropertyChanged("ProductDesc");
					this.OnProductDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductImages", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ProductImages
		{
			get
			{
				return this._ProductImages;
			}
			set
			{
				if ((this._ProductImages != value))
				{
					this.OnProductImagesChanging(value);
					this.SendPropertyChanging();
					this._ProductImages = value;
					this.SendPropertyChanged("ProductImages");
					this.OnProductImagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="BigInt NOT NULL")]
		public long Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryID", DbType="BigInt NOT NULL")]
		public long categoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				if ((this._categoryID != value))
				{
					if (this._tblLSTypeProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoryIDChanging(value);
					this.SendPropertyChanging();
					this._categoryID = value;
					this.SendPropertyChanged("categoryID");
					this.OncategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProducts_tblUnit", Storage="_tblUnits", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<tblUnit> tblUnits
		{
			get
			{
				return this._tblUnits;
			}
			set
			{
				this._tblUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProducts_tblSalesInvoicesDetaile", Storage="_tblSalesInvoicesDetailes", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<tblSalesInvoicesDetaile> tblSalesInvoicesDetailes
		{
			get
			{
				return this._tblSalesInvoicesDetailes;
			}
			set
			{
				this._tblSalesInvoicesDetailes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProducts_tblPurchaseInvoicesDetaile", Storage="_tblPurchaseInvoicesDetailes", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<tblPurchaseInvoicesDetaile> tblPurchaseInvoicesDetailes
		{
			get
			{
				return this._tblPurchaseInvoicesDetailes;
			}
			set
			{
				this._tblPurchaseInvoicesDetailes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLSTypeProduct_tblProducts", Storage="_tblLSTypeProduct", ThisKey="categoryID", OtherKey="ID", IsForeignKey=true)]
		public tblLSTypeProduct tblLSTypeProduct
		{
			get
			{
				return this._tblLSTypeProduct.Entity;
			}
			set
			{
				tblLSTypeProduct previousValue = this._tblLSTypeProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblLSTypeProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblLSTypeProduct.Entity = null;
						previousValue.tblProducts.Remove(this);
					}
					this._tblLSTypeProduct.Entity = value;
					if ((value != null))
					{
						value.tblProducts.Add(this);
						this._categoryID = value.ID;
					}
					else
					{
						this._categoryID = default(long);
					}
					this.SendPropertyChanged("tblLSTypeProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblProducts", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblProducts.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblProducts.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUnits(tblUnit entity)
		{
			this.SendPropertyChanging();
			entity.tblProducts = this;
		}
		
		private void detach_tblUnits(tblUnit entity)
		{
			this.SendPropertyChanging();
			entity.tblProducts = null;
		}
		
		private void attach_tblSalesInvoicesDetailes(tblSalesInvoicesDetaile entity)
		{
			this.SendPropertyChanging();
			entity.tblProducts = this;
		}
		
		private void detach_tblSalesInvoicesDetailes(tblSalesInvoicesDetaile entity)
		{
			this.SendPropertyChanging();
			entity.tblProducts = null;
		}
		
		private void attach_tblPurchaseInvoicesDetailes(tblPurchaseInvoicesDetaile entity)
		{
			this.SendPropertyChanging();
			entity.tblProducts = this;
		}
		
		private void detach_tblPurchaseInvoicesDetailes(tblPurchaseInvoicesDetaile entity)
		{
			this.SendPropertyChanging();
			entity.tblProducts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSpending")]
	public partial class tblSpending : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Data.Linq.Binary _RowVersion;
		
		private System.Nullable<long> _PrevRowVersion;
		
		private long _TheNumber;
		
		private System.Nullable<System.DateTime> _TheDate;
		
		private long _TheMethod;
		
		private decimal _Amount;
		
		private System.Nullable<long> _CurrencyID;
		
		private System.Nullable<long> _AccountID;
		
		private decimal _ExchangeAmount;
		
		private System.Nullable<long> _ExchangeCurrencyID;
		
		private System.Nullable<long> _ExchangeAccountID;
		
		private string _Notes;
		
		private string _Delivery;
		
		private System.Nullable<long> _Prints;
		
		private System.Nullable<long> _EntryID;
		
		private System.Nullable<int> _TheYear;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private EntityRef<tblLSCashInvoice> _tblLSCashInvoice;
		
		private EntityRef<tblAccounts> _tblAccounts;
		
		private EntityRef<tblAccounts> _tblAccounts1;
		
		private EntityRef<tblCurrency> _tblCurrency;
		
		private EntityRef<tblCurrency> _tblCurrency1;
		
		private EntityRef<tblEntry> _tblEntry;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    partial void OnPrevRowVersionChanging(System.Nullable<long> value);
    partial void OnPrevRowVersionChanged();
    partial void OnTheNumberChanging(long value);
    partial void OnTheNumberChanged();
    partial void OnTheDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTheDateChanged();
    partial void OnTheMethodChanging(long value);
    partial void OnTheMethodChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyIDChanging(System.Nullable<long> value);
    partial void OnCurrencyIDChanged();
    partial void OnAccountIDChanging(System.Nullable<long> value);
    partial void OnAccountIDChanged();
    partial void OnExchangeAmountChanging(decimal value);
    partial void OnExchangeAmountChanged();
    partial void OnExchangeCurrencyIDChanging(System.Nullable<long> value);
    partial void OnExchangeCurrencyIDChanged();
    partial void OnExchangeAccountIDChanging(System.Nullable<long> value);
    partial void OnExchangeAccountIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDeliveryChanging(string value);
    partial void OnDeliveryChanged();
    partial void OnPrintsChanging(System.Nullable<long> value);
    partial void OnPrintsChanged();
    partial void OnEntryIDChanging(System.Nullable<long> value);
    partial void OnEntryIDChanged();
    partial void OnTheYearChanging(System.Nullable<int> value);
    partial void OnTheYearChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblSpending()
		{
			this._tblLSCashInvoice = default(EntityRef<tblLSCashInvoice>);
			this._tblAccounts = default(EntityRef<tblAccounts>);
			this._tblAccounts1 = default(EntityRef<tblAccounts>);
			this._tblCurrency = default(EntityRef<tblCurrency>);
			this._tblCurrency1 = default(EntityRef<tblCurrency>);
			this._tblEntry = default(EntityRef<tblEntry>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevRowVersion", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> PrevRowVersion
		{
			get
			{
				return this._PrevRowVersion;
			}
			set
			{
				if ((this._PrevRowVersion != value))
				{
					this.OnPrevRowVersionChanging(value);
					this.SendPropertyChanging();
					this._PrevRowVersion = value;
					this.SendPropertyChanged("PrevRowVersion");
					this.OnPrevRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheNumber", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long TheNumber
		{
			get
			{
				return this._TheNumber;
			}
			set
			{
				if ((this._TheNumber != value))
				{
					this.OnTheNumberChanging(value);
					this.SendPropertyChanging();
					this._TheNumber = value;
					this.SendPropertyChanged("TheNumber");
					this.OnTheNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this.OnTheDateChanging(value);
					this.SendPropertyChanging();
					this._TheDate = value;
					this.SendPropertyChanged("TheDate");
					this.OnTheDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheMethod", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long TheMethod
		{
			get
			{
				return this._TheMethod;
			}
			set
			{
				if ((this._TheMethod != value))
				{
					if (this._tblLSCashInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTheMethodChanging(value);
					this.SendPropertyChanging();
					this._TheMethod = value;
					this.SendPropertyChanged("TheMethod");
					this.OnTheMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,6) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					if (this._tblCurrency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._tblAccounts1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeAmount", DbType="Decimal(18,6) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal ExchangeAmount
		{
			get
			{
				return this._ExchangeAmount;
			}
			set
			{
				if ((this._ExchangeAmount != value))
				{
					this.OnExchangeAmountChanging(value);
					this.SendPropertyChanging();
					this._ExchangeAmount = value;
					this.SendPropertyChanged("ExchangeAmount");
					this.OnExchangeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeCurrencyID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> ExchangeCurrencyID
		{
			get
			{
				return this._ExchangeCurrencyID;
			}
			set
			{
				if ((this._ExchangeCurrencyID != value))
				{
					if (this._tblCurrency1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExchangeCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._ExchangeCurrencyID = value;
					this.SendPropertyChanged("ExchangeCurrencyID");
					this.OnExchangeCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeAccountID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> ExchangeAccountID
		{
			get
			{
				return this._ExchangeAccountID;
			}
			set
			{
				if ((this._ExchangeAccountID != value))
				{
					if (this._tblAccounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExchangeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ExchangeAccountID = value;
					this.SendPropertyChanged("ExchangeAccountID");
					this.OnExchangeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivery", DbType="VarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Delivery
		{
			get
			{
				return this._Delivery;
			}
			set
			{
				if ((this._Delivery != value))
				{
					this.OnDeliveryChanging(value);
					this.SendPropertyChanging();
					this._Delivery = value;
					this.SendPropertyChanged("Delivery");
					this.OnDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prints", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> Prints
		{
			get
			{
				return this._Prints;
			}
			set
			{
				if ((this._Prints != value))
				{
					this.OnPrintsChanging(value);
					this.SendPropertyChanging();
					this._Prints = value;
					this.SendPropertyChanged("Prints");
					this.OnPrintsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					if (this._tblEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryIDChanging(value);
					this.SendPropertyChanging();
					this._EntryID = value;
					this.SendPropertyChanged("EntryID");
					this.OnEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheYear", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TheYear
		{
			get
			{
				return this._TheYear;
			}
			set
			{
				if ((this._TheYear != value))
				{
					this.OnTheYearChanging(value);
					this.SendPropertyChanging();
					this._TheYear = value;
					this.SendPropertyChanged("TheYear");
					this.OnTheYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLSCashInvoice_tblSpending", Storage="_tblLSCashInvoice", ThisKey="TheMethod", OtherKey="ID", IsForeignKey=true)]
		public tblLSCashInvoice tblLSCashInvoice
		{
			get
			{
				return this._tblLSCashInvoice.Entity;
			}
			set
			{
				tblLSCashInvoice previousValue = this._tblLSCashInvoice.Entity;
				if (((previousValue != value) 
							|| (this._tblLSCashInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblLSCashInvoice.Entity = null;
						previousValue.tblSpendings.Remove(this);
					}
					this._tblLSCashInvoice.Entity = value;
					if ((value != null))
					{
						value.tblSpendings.Add(this);
						this._TheMethod = value.ID;
					}
					else
					{
						this._TheMethod = default(long);
					}
					this.SendPropertyChanged("tblLSCashInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblSpending", Storage="_tblAccounts", ThisKey="ExchangeAccountID", OtherKey="ID", IsForeignKey=true)]
		public tblAccounts tblAccounts
		{
			get
			{
				return this._tblAccounts.Entity;
			}
			set
			{
				tblAccounts previousValue = this._tblAccounts.Entity;
				if (((previousValue != value) 
							|| (this._tblAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAccounts.Entity = null;
						previousValue.tblSpendings.Remove(this);
					}
					this._tblAccounts.Entity = value;
					if ((value != null))
					{
						value.tblSpendings.Add(this);
						this._ExchangeAccountID = value.ID;
					}
					else
					{
						this._ExchangeAccountID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblAccounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblSpending1", Storage="_tblAccounts1", ThisKey="AccountID", OtherKey="ID", IsForeignKey=true)]
		public tblAccounts tblAccounts1
		{
			get
			{
				return this._tblAccounts1.Entity;
			}
			set
			{
				tblAccounts previousValue = this._tblAccounts1.Entity;
				if (((previousValue != value) 
							|| (this._tblAccounts1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAccounts1.Entity = null;
						previousValue.tblSpendings1.Remove(this);
					}
					this._tblAccounts1.Entity = value;
					if ((value != null))
					{
						value.tblSpendings1.Add(this);
						this._AccountID = value.ID;
					}
					else
					{
						this._AccountID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblAccounts1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblSpending", Storage="_tblCurrency", ThisKey="CurrencyID", OtherKey="ID", IsForeignKey=true)]
		public tblCurrency tblCurrency
		{
			get
			{
				return this._tblCurrency.Entity;
			}
			set
			{
				tblCurrency previousValue = this._tblCurrency.Entity;
				if (((previousValue != value) 
							|| (this._tblCurrency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCurrency.Entity = null;
						previousValue.tblSpendings.Remove(this);
					}
					this._tblCurrency.Entity = value;
					if ((value != null))
					{
						value.tblSpendings.Add(this);
						this._CurrencyID = value.ID;
					}
					else
					{
						this._CurrencyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblCurrency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCurrency_tblSpending1", Storage="_tblCurrency1", ThisKey="ExchangeCurrencyID", OtherKey="ID", IsForeignKey=true)]
		public tblCurrency tblCurrency1
		{
			get
			{
				return this._tblCurrency1.Entity;
			}
			set
			{
				tblCurrency previousValue = this._tblCurrency1.Entity;
				if (((previousValue != value) 
							|| (this._tblCurrency1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCurrency1.Entity = null;
						previousValue.tblSpendings1.Remove(this);
					}
					this._tblCurrency1.Entity = value;
					if ((value != null))
					{
						value.tblSpendings1.Add(this);
						this._ExchangeCurrencyID = value.ID;
					}
					else
					{
						this._ExchangeCurrencyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblCurrency1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEntry_tblSpending", Storage="_tblEntry", ThisKey="EntryID", OtherKey="ID", IsForeignKey=true)]
		public tblEntry tblEntry
		{
			get
			{
				return this._tblEntry.Entity;
			}
			set
			{
				tblEntry previousValue = this._tblEntry.Entity;
				if (((previousValue != value) 
							|| (this._tblEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEntry.Entity = null;
						previousValue.tblSpendings.Remove(this);
					}
					this._tblEntry.Entity = value;
					if ((value != null))
					{
						value.tblSpendings.Add(this);
						this._EntryID = value.ID;
					}
					else
					{
						this._EntryID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblEntry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblSpending", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblSpendings.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblSpendings.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSalesInvoices")]
	public partial class tblSalesInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Data.Linq.Binary _RowVersion;
		
		private System.Nullable<long> _PrevRowVersion;
		
		private long _TheNumber;
		
		private int _InvoicesType;
		
		private decimal _DescountPercent;
		
		private decimal _DescountValue;
		
		private decimal _Tax;
		
		private decimal _TaxValue;
		
		private decimal _Total;
		
		private decimal _Paid;
		
		private decimal _Remaing;
		
		private decimal _Expences;
		
		private long _AccountID;
		
		private long _ExchangeAccountID;
		
		private System.DateTime _TheDate;
		
		private System.Nullable<System.DateTime> _DelivaryDate;
		
		private string _ShippingAddress;
		
		private string _Notes;
		
		private System.Nullable<long> _EntryID;
		
		private int _Prints;
		
		private System.Nullable<int> _TheYear;
		
		private long _UserID;
		
		private System.DateTime _EnterTime;
		
		private EntitySet<tblSalesInvoicesDetaile> _tblSalesInvoicesDetailes;
		
		private EntityRef<tblAccounts> _tblAccounts;
		
		private EntityRef<tblEntry> _tblEntry;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    partial void OnPrevRowVersionChanging(System.Nullable<long> value);
    partial void OnPrevRowVersionChanged();
    partial void OnTheNumberChanging(long value);
    partial void OnTheNumberChanged();
    partial void OnInvoicesTypeChanging(int value);
    partial void OnInvoicesTypeChanged();
    partial void OnDescountPercentChanging(decimal value);
    partial void OnDescountPercentChanged();
    partial void OnDescountValueChanging(decimal value);
    partial void OnDescountValueChanged();
    partial void OnTaxChanging(decimal value);
    partial void OnTaxChanged();
    partial void OnTaxValueChanging(decimal value);
    partial void OnTaxValueChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnPaidChanging(decimal value);
    partial void OnPaidChanged();
    partial void OnRemaingChanging(decimal value);
    partial void OnRemaingChanged();
    partial void OnExpencesChanging(decimal value);
    partial void OnExpencesChanged();
    partial void OnAccountIDChanging(long value);
    partial void OnAccountIDChanged();
    partial void OnExchangeAccountIDChanging(long value);
    partial void OnExchangeAccountIDChanged();
    partial void OnTheDateChanging(System.DateTime value);
    partial void OnTheDateChanged();
    partial void OnDelivaryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDelivaryDateChanged();
    partial void OnShippingAddressChanging(string value);
    partial void OnShippingAddressChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnEntryIDChanging(System.Nullable<long> value);
    partial void OnEntryIDChanged();
    partial void OnPrintsChanging(int value);
    partial void OnPrintsChanged();
    partial void OnTheYearChanging(System.Nullable<int> value);
    partial void OnTheYearChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.DateTime value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblSalesInvoice()
		{
			this._tblSalesInvoicesDetailes = new EntitySet<tblSalesInvoicesDetaile>(new Action<tblSalesInvoicesDetaile>(this.attach_tblSalesInvoicesDetailes), new Action<tblSalesInvoicesDetaile>(this.detach_tblSalesInvoicesDetailes));
			this._tblAccounts = default(EntityRef<tblAccounts>);
			this._tblEntry = default(EntityRef<tblEntry>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevRowVersion", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> PrevRowVersion
		{
			get
			{
				return this._PrevRowVersion;
			}
			set
			{
				if ((this._PrevRowVersion != value))
				{
					this.OnPrevRowVersionChanging(value);
					this.SendPropertyChanging();
					this._PrevRowVersion = value;
					this.SendPropertyChanged("PrevRowVersion");
					this.OnPrevRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheNumber", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long TheNumber
		{
			get
			{
				return this._TheNumber;
			}
			set
			{
				if ((this._TheNumber != value))
				{
					this.OnTheNumberChanging(value);
					this.SendPropertyChanging();
					this._TheNumber = value;
					this.SendPropertyChanged("TheNumber");
					this.OnTheNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicesType", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int InvoicesType
		{
			get
			{
				return this._InvoicesType;
			}
			set
			{
				if ((this._InvoicesType != value))
				{
					this.OnInvoicesTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoicesType = value;
					this.SendPropertyChanged("InvoicesType");
					this.OnInvoicesTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescountPercent", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal DescountPercent
		{
			get
			{
				return this._DescountPercent;
			}
			set
			{
				if ((this._DescountPercent != value))
				{
					this.OnDescountPercentChanging(value);
					this.SendPropertyChanging();
					this._DescountPercent = value;
					this.SendPropertyChanged("DescountPercent");
					this.OnDescountPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescountValue", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal DescountValue
		{
			get
			{
				return this._DescountValue;
			}
			set
			{
				if ((this._DescountValue != value))
				{
					this.OnDescountValueChanging(value);
					this.SendPropertyChanging();
					this._DescountValue = value;
					this.SendPropertyChanged("DescountValue");
					this.OnDescountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxValue", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal TaxValue
		{
			get
			{
				return this._TaxValue;
			}
			set
			{
				if ((this._TaxValue != value))
				{
					this.OnTaxValueChanging(value);
					this.SendPropertyChanging();
					this._TaxValue = value;
					this.SendPropertyChanged("TaxValue");
					this.OnTaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remaing", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Remaing
		{
			get
			{
				return this._Remaing;
			}
			set
			{
				if ((this._Remaing != value))
				{
					this.OnRemaingChanging(value);
					this.SendPropertyChanging();
					this._Remaing = value;
					this.SendPropertyChanged("Remaing");
					this.OnRemaingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expences", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Expences
		{
			get
			{
				return this._Expences;
			}
			set
			{
				if ((this._Expences != value))
				{
					this.OnExpencesChanging(value);
					this.SendPropertyChanging();
					this._Expences = value;
					this.SendPropertyChanged("Expences");
					this.OnExpencesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._tblAccounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeAccountID", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long ExchangeAccountID
		{
			get
			{
				return this._ExchangeAccountID;
			}
			set
			{
				if ((this._ExchangeAccountID != value))
				{
					this.OnExchangeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ExchangeAccountID = value;
					this.SendPropertyChanged("ExchangeAccountID");
					this.OnExchangeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this.OnTheDateChanging(value);
					this.SendPropertyChanging();
					this._TheDate = value;
					this.SendPropertyChanged("TheDate");
					this.OnTheDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelivaryDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DelivaryDate
		{
			get
			{
				return this._DelivaryDate;
			}
			set
			{
				if ((this._DelivaryDate != value))
				{
					this.OnDelivaryDateChanging(value);
					this.SendPropertyChanging();
					this._DelivaryDate = value;
					this.SendPropertyChanged("DelivaryDate");
					this.OnDelivaryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ShippingAddress
		{
			get
			{
				return this._ShippingAddress;
			}
			set
			{
				if ((this._ShippingAddress != value))
				{
					this.OnShippingAddressChanging(value);
					this.SendPropertyChanging();
					this._ShippingAddress = value;
					this.SendPropertyChanged("ShippingAddress");
					this.OnShippingAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					if (this._tblEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryIDChanging(value);
					this.SendPropertyChanging();
					this._EntryID = value;
					this.SendPropertyChanged("EntryID");
					this.OnEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prints", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Prints
		{
			get
			{
				return this._Prints;
			}
			set
			{
				if ((this._Prints != value))
				{
					this.OnPrintsChanging(value);
					this.SendPropertyChanging();
					this._Prints = value;
					this.SendPropertyChanged("Prints");
					this.OnPrintsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheYear", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TheYear
		{
			get
			{
				return this._TheYear;
			}
			set
			{
				if ((this._TheYear != value))
				{
					this.OnTheYearChanging(value);
					this.SendPropertyChanging();
					this._TheYear = value;
					this.SendPropertyChanged("TheYear");
					this.OnTheYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSalesInvoice_tblSalesInvoicesDetaile", Storage="_tblSalesInvoicesDetailes", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<tblSalesInvoicesDetaile> tblSalesInvoicesDetailes
		{
			get
			{
				return this._tblSalesInvoicesDetailes;
			}
			set
			{
				this._tblSalesInvoicesDetailes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblSalesInvoice", Storage="_tblAccounts", ThisKey="AccountID", OtherKey="ID", IsForeignKey=true)]
		public tblAccounts tblAccounts
		{
			get
			{
				return this._tblAccounts.Entity;
			}
			set
			{
				tblAccounts previousValue = this._tblAccounts.Entity;
				if (((previousValue != value) 
							|| (this._tblAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAccounts.Entity = null;
						previousValue.tblSalesInvoices.Remove(this);
					}
					this._tblAccounts.Entity = value;
					if ((value != null))
					{
						value.tblSalesInvoices.Add(this);
						this._AccountID = value.ID;
					}
					else
					{
						this._AccountID = default(long);
					}
					this.SendPropertyChanged("tblAccounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEntry_tblSalesInvoice", Storage="_tblEntry", ThisKey="EntryID", OtherKey="ID", IsForeignKey=true)]
		public tblEntry tblEntry
		{
			get
			{
				return this._tblEntry.Entity;
			}
			set
			{
				tblEntry previousValue = this._tblEntry.Entity;
				if (((previousValue != value) 
							|| (this._tblEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEntry.Entity = null;
						previousValue.tblSalesInvoices.Remove(this);
					}
					this._tblEntry.Entity = value;
					if ((value != null))
					{
						value.tblSalesInvoices.Add(this);
						this._EntryID = value.ID;
					}
					else
					{
						this._EntryID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblEntry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblSalesInvoice", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblSalesInvoices.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblSalesInvoices.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblSalesInvoicesDetailes(tblSalesInvoicesDetaile entity)
		{
			this.SendPropertyChanging();
			entity.tblSalesInvoice = this;
		}
		
		private void detach_tblSalesInvoicesDetailes(tblSalesInvoicesDetaile entity)
		{
			this.SendPropertyChanging();
			entity.tblSalesInvoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPurchaseInvoices")]
	public partial class tblPurchaseInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Data.Linq.Binary _RowVersion;
		
		private System.Nullable<long> _PrevRowVersion;
		
		private long _TheNumber;
		
		private int _InvoicesType;
		
		private decimal _DescountPercent;
		
		private decimal _DescountValue;
		
		private decimal _Tax;
		
		private decimal _TaxValue;
		
		private decimal _Total;
		
		private decimal _Paid;
		
		private decimal _Remaing;
		
		private decimal _Expences;
		
		private long _AccountID;
		
		private long _ExchangeAccountID;
		
		private System.DateTime _TheDate;
		
		private System.Nullable<System.DateTime> _DelivaryDate;
		
		private string _ShippingAddress;
		
		private string _Notes;
		
		private System.Nullable<long> _EntryID;
		
		private int _Prints;
		
		private System.Nullable<int> _TheYear;
		
		private long _UserID;
		
		private System.DateTime _EnterTime;
		
		private EntitySet<tblPurchaseInvoicesDetaile> _tblPurchaseInvoicesDetailes;
		
		private EntityRef<tblAccounts> _tblAccounts;
		
		private EntityRef<tblEntry> _tblEntry;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    partial void OnPrevRowVersionChanging(System.Nullable<long> value);
    partial void OnPrevRowVersionChanged();
    partial void OnTheNumberChanging(long value);
    partial void OnTheNumberChanged();
    partial void OnInvoicesTypeChanging(int value);
    partial void OnInvoicesTypeChanged();
    partial void OnDescountPercentChanging(decimal value);
    partial void OnDescountPercentChanged();
    partial void OnDescountValueChanging(decimal value);
    partial void OnDescountValueChanged();
    partial void OnTaxChanging(decimal value);
    partial void OnTaxChanged();
    partial void OnTaxValueChanging(decimal value);
    partial void OnTaxValueChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnPaidChanging(decimal value);
    partial void OnPaidChanged();
    partial void OnRemaingChanging(decimal value);
    partial void OnRemaingChanged();
    partial void OnExpencesChanging(decimal value);
    partial void OnExpencesChanged();
    partial void OnAccountIDChanging(long value);
    partial void OnAccountIDChanged();
    partial void OnExchangeAccountIDChanging(long value);
    partial void OnExchangeAccountIDChanged();
    partial void OnTheDateChanging(System.DateTime value);
    partial void OnTheDateChanged();
    partial void OnDelivaryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDelivaryDateChanged();
    partial void OnShippingAddressChanging(string value);
    partial void OnShippingAddressChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnEntryIDChanging(System.Nullable<long> value);
    partial void OnEntryIDChanged();
    partial void OnPrintsChanging(int value);
    partial void OnPrintsChanged();
    partial void OnTheYearChanging(System.Nullable<int> value);
    partial void OnTheYearChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.DateTime value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblPurchaseInvoice()
		{
			this._tblPurchaseInvoicesDetailes = new EntitySet<tblPurchaseInvoicesDetaile>(new Action<tblPurchaseInvoicesDetaile>(this.attach_tblPurchaseInvoicesDetailes), new Action<tblPurchaseInvoicesDetaile>(this.detach_tblPurchaseInvoicesDetailes));
			this._tblAccounts = default(EntityRef<tblAccounts>);
			this._tblEntry = default(EntityRef<tblEntry>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevRowVersion", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> PrevRowVersion
		{
			get
			{
				return this._PrevRowVersion;
			}
			set
			{
				if ((this._PrevRowVersion != value))
				{
					this.OnPrevRowVersionChanging(value);
					this.SendPropertyChanging();
					this._PrevRowVersion = value;
					this.SendPropertyChanged("PrevRowVersion");
					this.OnPrevRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheNumber", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long TheNumber
		{
			get
			{
				return this._TheNumber;
			}
			set
			{
				if ((this._TheNumber != value))
				{
					this.OnTheNumberChanging(value);
					this.SendPropertyChanging();
					this._TheNumber = value;
					this.SendPropertyChanged("TheNumber");
					this.OnTheNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicesType", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int InvoicesType
		{
			get
			{
				return this._InvoicesType;
			}
			set
			{
				if ((this._InvoicesType != value))
				{
					this.OnInvoicesTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoicesType = value;
					this.SendPropertyChanged("InvoicesType");
					this.OnInvoicesTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescountPercent", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal DescountPercent
		{
			get
			{
				return this._DescountPercent;
			}
			set
			{
				if ((this._DescountPercent != value))
				{
					this.OnDescountPercentChanging(value);
					this.SendPropertyChanging();
					this._DescountPercent = value;
					this.SendPropertyChanged("DescountPercent");
					this.OnDescountPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescountValue", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal DescountValue
		{
			get
			{
				return this._DescountValue;
			}
			set
			{
				if ((this._DescountValue != value))
				{
					this.OnDescountValueChanging(value);
					this.SendPropertyChanging();
					this._DescountValue = value;
					this.SendPropertyChanged("DescountValue");
					this.OnDescountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxValue", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal TaxValue
		{
			get
			{
				return this._TaxValue;
			}
			set
			{
				if ((this._TaxValue != value))
				{
					this.OnTaxValueChanging(value);
					this.SendPropertyChanging();
					this._TaxValue = value;
					this.SendPropertyChanged("TaxValue");
					this.OnTaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remaing", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Remaing
		{
			get
			{
				return this._Remaing;
			}
			set
			{
				if ((this._Remaing != value))
				{
					this.OnRemaingChanging(value);
					this.SendPropertyChanging();
					this._Remaing = value;
					this.SendPropertyChanged("Remaing");
					this.OnRemaingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expences", DbType="Decimal(10,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Expences
		{
			get
			{
				return this._Expences;
			}
			set
			{
				if ((this._Expences != value))
				{
					this.OnExpencesChanging(value);
					this.SendPropertyChanging();
					this._Expences = value;
					this.SendPropertyChanged("Expences");
					this.OnExpencesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._tblAccounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeAccountID", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long ExchangeAccountID
		{
			get
			{
				return this._ExchangeAccountID;
			}
			set
			{
				if ((this._ExchangeAccountID != value))
				{
					this.OnExchangeAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ExchangeAccountID = value;
					this.SendPropertyChanged("ExchangeAccountID");
					this.OnExchangeAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this.OnTheDateChanging(value);
					this.SendPropertyChanging();
					this._TheDate = value;
					this.SendPropertyChanged("TheDate");
					this.OnTheDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelivaryDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DelivaryDate
		{
			get
			{
				return this._DelivaryDate;
			}
			set
			{
				if ((this._DelivaryDate != value))
				{
					this.OnDelivaryDateChanging(value);
					this.SendPropertyChanging();
					this._DelivaryDate = value;
					this.SendPropertyChanged("DelivaryDate");
					this.OnDelivaryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ShippingAddress
		{
			get
			{
				return this._ShippingAddress;
			}
			set
			{
				if ((this._ShippingAddress != value))
				{
					this.OnShippingAddressChanging(value);
					this.SendPropertyChanging();
					this._ShippingAddress = value;
					this.SendPropertyChanged("ShippingAddress");
					this.OnShippingAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					if (this._tblEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryIDChanging(value);
					this.SendPropertyChanging();
					this._EntryID = value;
					this.SendPropertyChanged("EntryID");
					this.OnEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prints", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Prints
		{
			get
			{
				return this._Prints;
			}
			set
			{
				if ((this._Prints != value))
				{
					this.OnPrintsChanging(value);
					this.SendPropertyChanging();
					this._Prints = value;
					this.SendPropertyChanged("Prints");
					this.OnPrintsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheYear", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TheYear
		{
			get
			{
				return this._TheYear;
			}
			set
			{
				if ((this._TheYear != value))
				{
					this.OnTheYearChanging(value);
					this.SendPropertyChanging();
					this._TheYear = value;
					this.SendPropertyChanged("TheYear");
					this.OnTheYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPurchaseInvoice_tblPurchaseInvoicesDetaile", Storage="_tblPurchaseInvoicesDetailes", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<tblPurchaseInvoicesDetaile> tblPurchaseInvoicesDetailes
		{
			get
			{
				return this._tblPurchaseInvoicesDetailes;
			}
			set
			{
				this._tblPurchaseInvoicesDetailes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblPurchaseInvoice", Storage="_tblAccounts", ThisKey="AccountID", OtherKey="ID", IsForeignKey=true)]
		public tblAccounts tblAccounts
		{
			get
			{
				return this._tblAccounts.Entity;
			}
			set
			{
				tblAccounts previousValue = this._tblAccounts.Entity;
				if (((previousValue != value) 
							|| (this._tblAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAccounts.Entity = null;
						previousValue.tblPurchaseInvoices.Remove(this);
					}
					this._tblAccounts.Entity = value;
					if ((value != null))
					{
						value.tblPurchaseInvoices.Add(this);
						this._AccountID = value.ID;
					}
					else
					{
						this._AccountID = default(long);
					}
					this.SendPropertyChanged("tblAccounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEntry_tblPurchaseInvoice", Storage="_tblEntry", ThisKey="EntryID", OtherKey="ID", IsForeignKey=true)]
		public tblEntry tblEntry
		{
			get
			{
				return this._tblEntry.Entity;
			}
			set
			{
				tblEntry previousValue = this._tblEntry.Entity;
				if (((previousValue != value) 
							|| (this._tblEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEntry.Entity = null;
						previousValue.tblPurchaseInvoices.Remove(this);
					}
					this._tblEntry.Entity = value;
					if ((value != null))
					{
						value.tblPurchaseInvoices.Add(this);
						this._EntryID = value.ID;
					}
					else
					{
						this._EntryID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblEntry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblPurchaseInvoice", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblPurchaseInvoices.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblPurchaseInvoices.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPurchaseInvoicesDetailes(tblPurchaseInvoicesDetaile entity)
		{
			this.SendPropertyChanging();
			entity.tblPurchaseInvoice = this;
		}
		
		private void detach_tblPurchaseInvoicesDetailes(tblPurchaseInvoicesDetaile entity)
		{
			this.SendPropertyChanging();
			entity.tblPurchaseInvoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSalesInvoicesDetailes")]
	public partial class tblSalesInvoicesDetaile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _ProductID;
		
		private long _UnitID;
		
		private decimal _Quantity;
		
		private decimal _UnitPrice;
		
		private decimal _SubDescount;
		
		private decimal _TotalAMount;
		
		private decimal _DiscountValue;
		
		private long _ParentID;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private long _UserID;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private EntityRef<tblProducts> _tblProducts;
		
		private EntityRef<tblSalesInvoice> _tblSalesInvoice;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(long value);
    partial void OnProductIDChanged();
    partial void OnUnitIDChanging(long value);
    partial void OnUnitIDChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnSubDescountChanging(decimal value);
    partial void OnSubDescountChanged();
    partial void OnTotalAMountChanging(decimal value);
    partial void OnTotalAMountChanged();
    partial void OnDiscountValueChanging(decimal value);
    partial void OnDiscountValueChanged();
    partial void OnParentIDChanging(long value);
    partial void OnParentIDChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblSalesInvoicesDetaile()
		{
			this._tblProducts = default(EntityRef<tblProducts>);
			this._tblSalesInvoice = default(EntityRef<tblSalesInvoice>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="BigInt NOT NULL")]
		public long ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._tblProducts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="BigInt NOT NULL")]
		public long UnitID
		{
			get
			{
				return this._UnitID;
			}
			set
			{
				if ((this._UnitID != value))
				{
					this.OnUnitIDChanging(value);
					this.SendPropertyChanging();
					this._UnitID = value;
					this.SendPropertyChanged("UnitID");
					this.OnUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,3) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,3) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDescount", DbType="Decimal(18,3) NOT NULL")]
		public decimal SubDescount
		{
			get
			{
				return this._SubDescount;
			}
			set
			{
				if ((this._SubDescount != value))
				{
					this.OnSubDescountChanging(value);
					this.SendPropertyChanging();
					this._SubDescount = value;
					this.SendPropertyChanged("SubDescount");
					this.OnSubDescountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAMount", DbType="Decimal(18,3) NOT NULL")]
		public decimal TotalAMount
		{
			get
			{
				return this._TotalAMount;
			}
			set
			{
				if ((this._TotalAMount != value))
				{
					this.OnTotalAMountChanging(value);
					this.SendPropertyChanging();
					this._TotalAMount = value;
					this.SendPropertyChanged("TotalAMount");
					this.OnTotalAMountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountValue", DbType="Decimal(18,3) NOT NULL")]
		public decimal DiscountValue
		{
			get
			{
				return this._DiscountValue;
			}
			set
			{
				if ((this._DiscountValue != value))
				{
					this.OnDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._DiscountValue = value;
					this.SendPropertyChanged("DiscountValue");
					this.OnDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="BigInt NOT NULL")]
		public long ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._tblSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProducts_tblSalesInvoicesDetaile", Storage="_tblProducts", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public tblProducts tblProducts
		{
			get
			{
				return this._tblProducts.Entity;
			}
			set
			{
				tblProducts previousValue = this._tblProducts.Entity;
				if (((previousValue != value) 
							|| (this._tblProducts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProducts.Entity = null;
						previousValue.tblSalesInvoicesDetailes.Remove(this);
					}
					this._tblProducts.Entity = value;
					if ((value != null))
					{
						value.tblSalesInvoicesDetailes.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(long);
					}
					this.SendPropertyChanged("tblProducts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSalesInvoice_tblSalesInvoicesDetaile", Storage="_tblSalesInvoice", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblSalesInvoice tblSalesInvoice
		{
			get
			{
				return this._tblSalesInvoice.Entity;
			}
			set
			{
				tblSalesInvoice previousValue = this._tblSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._tblSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSalesInvoice.Entity = null;
						previousValue.tblSalesInvoicesDetailes.Remove(this);
					}
					this._tblSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.tblSalesInvoicesDetailes.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(long);
					}
					this.SendPropertyChanged("tblSalesInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblSalesInvoicesDetaile", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblSalesInvoicesDetailes.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblSalesInvoicesDetailes.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPurchaseInvoicesDetailes")]
	public partial class tblPurchaseInvoicesDetaile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _ProductID;
		
		private long _UnitID;
		
		private decimal _Quantity;
		
		private decimal _UnitPrice;
		
		private decimal _SubDescount;
		
		private decimal _TotalAMount;
		
		private decimal _DiscountValue;
		
		private long _ParentID;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private long _UserID;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private EntityRef<tblProducts> _tblProducts;
		
		private EntityRef<tblPurchaseInvoice> _tblPurchaseInvoice;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(long value);
    partial void OnProductIDChanged();
    partial void OnUnitIDChanging(long value);
    partial void OnUnitIDChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnSubDescountChanging(decimal value);
    partial void OnSubDescountChanged();
    partial void OnTotalAMountChanging(decimal value);
    partial void OnTotalAMountChanged();
    partial void OnDiscountValueChanging(decimal value);
    partial void OnDiscountValueChanged();
    partial void OnParentIDChanging(long value);
    partial void OnParentIDChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblPurchaseInvoicesDetaile()
		{
			this._tblProducts = default(EntityRef<tblProducts>);
			this._tblPurchaseInvoice = default(EntityRef<tblPurchaseInvoice>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="BigInt NOT NULL")]
		public long ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._tblProducts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="BigInt NOT NULL")]
		public long UnitID
		{
			get
			{
				return this._UnitID;
			}
			set
			{
				if ((this._UnitID != value))
				{
					this.OnUnitIDChanging(value);
					this.SendPropertyChanging();
					this._UnitID = value;
					this.SendPropertyChanged("UnitID");
					this.OnUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,3) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,3) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDescount", DbType="Decimal(18,3) NOT NULL")]
		public decimal SubDescount
		{
			get
			{
				return this._SubDescount;
			}
			set
			{
				if ((this._SubDescount != value))
				{
					this.OnSubDescountChanging(value);
					this.SendPropertyChanging();
					this._SubDescount = value;
					this.SendPropertyChanged("SubDescount");
					this.OnSubDescountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAMount", DbType="Decimal(18,3) NOT NULL")]
		public decimal TotalAMount
		{
			get
			{
				return this._TotalAMount;
			}
			set
			{
				if ((this._TotalAMount != value))
				{
					this.OnTotalAMountChanging(value);
					this.SendPropertyChanging();
					this._TotalAMount = value;
					this.SendPropertyChanged("TotalAMount");
					this.OnTotalAMountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountValue", DbType="Decimal(18,3) NOT NULL")]
		public decimal DiscountValue
		{
			get
			{
				return this._DiscountValue;
			}
			set
			{
				if ((this._DiscountValue != value))
				{
					this.OnDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._DiscountValue = value;
					this.SendPropertyChanged("DiscountValue");
					this.OnDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="BigInt NOT NULL")]
		public long ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._tblPurchaseInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProducts_tblPurchaseInvoicesDetaile", Storage="_tblProducts", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public tblProducts tblProducts
		{
			get
			{
				return this._tblProducts.Entity;
			}
			set
			{
				tblProducts previousValue = this._tblProducts.Entity;
				if (((previousValue != value) 
							|| (this._tblProducts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProducts.Entity = null;
						previousValue.tblPurchaseInvoicesDetailes.Remove(this);
					}
					this._tblProducts.Entity = value;
					if ((value != null))
					{
						value.tblPurchaseInvoicesDetailes.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(long);
					}
					this.SendPropertyChanged("tblProducts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPurchaseInvoice_tblPurchaseInvoicesDetaile", Storage="_tblPurchaseInvoice", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblPurchaseInvoice tblPurchaseInvoice
		{
			get
			{
				return this._tblPurchaseInvoice.Entity;
			}
			set
			{
				tblPurchaseInvoice previousValue = this._tblPurchaseInvoice.Entity;
				if (((previousValue != value) 
							|| (this._tblPurchaseInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPurchaseInvoice.Entity = null;
						previousValue.tblPurchaseInvoicesDetailes.Remove(this);
					}
					this._tblPurchaseInvoice.Entity = value;
					if ((value != null))
					{
						value.tblPurchaseInvoicesDetailes.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(long);
					}
					this.SendPropertyChanged("tblPurchaseInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblPurchaseInvoicesDetaile", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblPurchaseInvoicesDetailes.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblPurchaseInvoicesDetailes.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewMainProductUnitQuantity")]
	public partial class vewMainProductUnitQuantity
	{
		
		private string _ProductName;
		
		private string _UnitName;
		
		private System.Nullable<decimal> _Quantity;
		
		private long _UnitsID;
		
		private long _ProductsID;
		
		private System.Nullable<decimal> _QuantityPurchase;
		
		private System.Nullable<decimal> _QuantitySales;
		
		public vewMainProductUnitQuantity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitsID", DbType="BigInt NOT NULL")]
		public long UnitsID
		{
			get
			{
				return this._UnitsID;
			}
			set
			{
				if ((this._UnitsID != value))
				{
					this._UnitsID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductsID", DbType="BigInt NOT NULL")]
		public long ProductsID
		{
			get
			{
				return this._ProductsID;
			}
			set
			{
				if ((this._ProductsID != value))
				{
					this._ProductsID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityPurchase", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> QuantityPurchase
		{
			get
			{
				return this._QuantityPurchase;
			}
			set
			{
				if ((this._QuantityPurchase != value))
				{
					this._QuantityPurchase = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantitySales", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> QuantitySales
		{
			get
			{
				return this._QuantitySales;
			}
			set
			{
				if ((this._QuantitySales != value))
				{
					this._QuantitySales = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserAccessProfileDetail")]
	public partial class tblUserAccessProfileDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _ProfileID;
		
		private long _ScreenID;
		
		private bool _CanShow;
		
		private bool _CanOpen;
		
		private bool _CanAdd;
		
		private bool _CanEdit;
		
		private bool _CanDelete;
		
		private bool _CanPrint;
		
		private System.Nullable<long> _UserID;
		
		private System.DateTime _EnterTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnProfileIDChanging(long value);
    partial void OnProfileIDChanged();
    partial void OnScreenIDChanging(long value);
    partial void OnScreenIDChanged();
    partial void OnCanShowChanging(bool value);
    partial void OnCanShowChanged();
    partial void OnCanOpenChanging(bool value);
    partial void OnCanOpenChanged();
    partial void OnCanAddChanging(bool value);
    partial void OnCanAddChanged();
    partial void OnCanEditChanging(bool value);
    partial void OnCanEditChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCanPrintChanging(bool value);
    partial void OnCanPrintChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.DateTime value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblUserAccessProfileDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", DbType="BigInt NOT NULL")]
		public long ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenID", DbType="BigInt NOT NULL")]
		public long ScreenID
		{
			get
			{
				return this._ScreenID;
			}
			set
			{
				if ((this._ScreenID != value))
				{
					this.OnScreenIDChanging(value);
					this.SendPropertyChanging();
					this._ScreenID = value;
					this.SendPropertyChanged("ScreenID");
					this.OnScreenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanShow", DbType="Bit NOT NULL")]
		public bool CanShow
		{
			get
			{
				return this._CanShow;
			}
			set
			{
				if ((this._CanShow != value))
				{
					this.OnCanShowChanging(value);
					this.SendPropertyChanging();
					this._CanShow = value;
					this.SendPropertyChanged("CanShow");
					this.OnCanShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanOpen", DbType="Bit NOT NULL")]
		public bool CanOpen
		{
			get
			{
				return this._CanOpen;
			}
			set
			{
				if ((this._CanOpen != value))
				{
					this.OnCanOpenChanging(value);
					this.SendPropertyChanging();
					this._CanOpen = value;
					this.SendPropertyChanged("CanOpen");
					this.OnCanOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAdd", DbType="Bit NOT NULL")]
		public bool CanAdd
		{
			get
			{
				return this._CanAdd;
			}
			set
			{
				if ((this._CanAdd != value))
				{
					this.OnCanAddChanging(value);
					this.SendPropertyChanging();
					this._CanAdd = value;
					this.SendPropertyChanged("CanAdd");
					this.OnCanAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEdit", DbType="Bit NOT NULL")]
		public bool CanEdit
		{
			get
			{
				return this._CanEdit;
			}
			set
			{
				if ((this._CanEdit != value))
				{
					this.OnCanEditChanging(value);
					this.SendPropertyChanging();
					this._CanEdit = value;
					this.SendPropertyChanged("CanEdit");
					this.OnCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPrint", DbType="Bit NOT NULL")]
		public bool CanPrint
		{
			get
			{
				return this._CanPrint;
			}
			set
			{
				if ((this._CanPrint != value))
				{
					this.OnCanPrintChanging(value);
					this.SendPropertyChanging();
					this._CanPrint = value;
					this.SendPropertyChanged("CanPrint");
					this.OnCanPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime NOT NULL")]
		public System.DateTime EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserAccessProfileName")]
	public partial class tblUserAccessProfileName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private System.Nullable<long> _UserID;
		
		private System.DateTime _EnterTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.DateTime value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblUserAccessProfileName()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime NOT NULL")]
		public System.DateTime EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserSettingsProfile")]
	public partial class tblUserSettingsProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private System.Nullable<long> _UserID;
		
		private System.DateTime _EnterTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.DateTime value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblUserSettingsProfile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime NOT NULL")]
		public System.DateTime EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserSettingsProfileProperties")]
	public partial class tblUserSettingsProfileProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _ProfileID;
		
		private string _PropertyName;
		
		private System.Data.Linq.Binary _PropertyValue;
		
		private System.Nullable<long> _UserID;
		
		private System.DateTime _EnterTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnProfileIDChanging(long value);
    partial void OnProfileIDChanged();
    partial void OnPropertyNameChanging(string value);
    partial void OnPropertyNameChanged();
    partial void OnPropertyValueChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValueChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.DateTime value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblUserSettingsProfileProperty()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", DbType="BigInt NOT NULL")]
		public long ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this.OnPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._PropertyName = value;
					this.SendPropertyChanged("PropertyName");
					this.OnPropertyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValue", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValue
		{
			get
			{
				return this._PropertyValue;
			}
			set
			{
				if ((this._PropertyValue != value))
				{
					this.OnPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._PropertyValue = value;
					this.SendPropertyChanged("PropertyValue");
					this.OnPropertyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime NOT NULL")]
		public System.DateTime EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAccountsDelegation")]
	public partial class tblAccountsDelegation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _AccountID;
		
		private string _Mobile;
		
		private string _Phone;
		
		private string _Address;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private EntityRef<tblAccounts> _tblAccounts;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAccountIDChanging(long value);
    partial void OnAccountIDChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblAccountsDelegation()
		{
			this._tblAccounts = default(EntityRef<tblAccounts>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt NOT NULL")]
		public long AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._tblAccounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblAccountsDelegation", Storage="_tblAccounts", ThisKey="AccountID", OtherKey="ID", IsForeignKey=true)]
		public tblAccounts tblAccounts
		{
			get
			{
				return this._tblAccounts.Entity;
			}
			set
			{
				tblAccounts previousValue = this._tblAccounts.Entity;
				if (((previousValue != value) 
							|| (this._tblAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAccounts.Entity = null;
						previousValue.tblAccountsDelegations.Remove(this);
					}
					this._tblAccounts.Entity = value;
					if ((value != null))
					{
						value.tblAccountsDelegations.Add(this);
						this._AccountID = value.ID;
					}
					else
					{
						this._AccountID = default(long);
					}
					this.SendPropertyChanged("tblAccounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblAccountsDelegation", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblAccountsDelegations.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblAccountsDelegations.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewPurchaseInvoices")]
	public partial class vewPurchaseInvoice
	{
		
		private long _ID;
		
		private long _TheNumber;
		
		private string _ExchangeAccountName;
		
		private int _InvoicesType;
		
		private decimal _Total;
		
		private System.Nullable<decimal> _net;
		
		private decimal _Paid;
		
		private decimal _Remaing;
		
		private decimal _TaxValue;
		
		private decimal _Tax;
		
		private decimal _Expences;
		
		private decimal _DescountPercent;
		
		private decimal _DescountValue;
		
		private string _AccountName;
		
		private long _AccountID;
		
		private long _ExchangeAccountID;
		
		private System.DateTime _TheDate;
		
		private System.Nullable<System.DateTime> _DelivaryDate;
		
		private string _ShippingAddress;
		
		private string _Notes;
		
		private int _Prints;
		
		public vewPurchaseInvoice()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheNumber", DbType="BigInt NOT NULL")]
		public long TheNumber
		{
			get
			{
				return this._TheNumber;
			}
			set
			{
				if ((this._TheNumber != value))
				{
					this._TheNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeAccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ExchangeAccountName
		{
			get
			{
				return this._ExchangeAccountName;
			}
			set
			{
				if ((this._ExchangeAccountName != value))
				{
					this._ExchangeAccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicesType", DbType="Int NOT NULL")]
		public int InvoicesType
		{
			get
			{
				return this._InvoicesType;
			}
			set
			{
				if ((this._InvoicesType != value))
				{
					this._InvoicesType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(10,3) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_net", DbType="Decimal(13,3)")]
		public System.Nullable<decimal> net
		{
			get
			{
				return this._net;
			}
			set
			{
				if ((this._net != value))
				{
					this._net = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Decimal(10,3) NOT NULL")]
		public decimal Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this._Paid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remaing", DbType="Decimal(10,3) NOT NULL")]
		public decimal Remaing
		{
			get
			{
				return this._Remaing;
			}
			set
			{
				if ((this._Remaing != value))
				{
					this._Remaing = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxValue", DbType="Decimal(10,3) NOT NULL")]
		public decimal TaxValue
		{
			get
			{
				return this._TaxValue;
			}
			set
			{
				if ((this._TaxValue != value))
				{
					this._TaxValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Decimal(10,3) NOT NULL")]
		public decimal Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this._Tax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expences", DbType="Decimal(10,3) NOT NULL")]
		public decimal Expences
		{
			get
			{
				return this._Expences;
			}
			set
			{
				if ((this._Expences != value))
				{
					this._Expences = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescountPercent", DbType="Decimal(10,3) NOT NULL")]
		public decimal DescountPercent
		{
			get
			{
				return this._DescountPercent;
			}
			set
			{
				if ((this._DescountPercent != value))
				{
					this._DescountPercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescountValue", DbType="Decimal(10,3) NOT NULL")]
		public decimal DescountValue
		{
			get
			{
				return this._DescountValue;
			}
			set
			{
				if ((this._DescountValue != value))
				{
					this._DescountValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt NOT NULL")]
		public long AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeAccountID", DbType="BigInt NOT NULL")]
		public long ExchangeAccountID
		{
			get
			{
				return this._ExchangeAccountID;
			}
			set
			{
				if ((this._ExchangeAccountID != value))
				{
					this._ExchangeAccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="Date NOT NULL")]
		public System.DateTime TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this._TheDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelivaryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DelivaryDate
		{
			get
			{
				return this._DelivaryDate;
			}
			set
			{
				if ((this._DelivaryDate != value))
				{
					this._DelivaryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress", DbType="VarChar(MAX)")]
		public string ShippingAddress
		{
			get
			{
				return this._ShippingAddress;
			}
			set
			{
				if ((this._ShippingAddress != value))
				{
					this._ShippingAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prints", DbType="Int NOT NULL")]
		public int Prints
		{
			get
			{
				return this._Prints;
			}
			set
			{
				if ((this._Prints != value))
				{
					this._Prints = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewSalesInvoices")]
	public partial class vewSalesInvoice
	{
		
		private long _ID;
		
		private long _TheNumber;
		
		private string _ExchangeAccountName;
		
		private int _InvoicesType;
		
		private decimal _Total;
		
		private System.Nullable<decimal> _net;
		
		private decimal _Paid;
		
		private decimal _Remaing;
		
		private decimal _TaxValue;
		
		private decimal _Tax;
		
		private decimal _Expences;
		
		private decimal _DescountPercent;
		
		private decimal _DescountValue;
		
		private string _AccountName;
		
		private long _AccountID;
		
		private long _ExchangeAccountID;
		
		private System.DateTime _TheDate;
		
		private System.Nullable<System.DateTime> _DelivaryDate;
		
		private string _ShippingAddress;
		
		private string _Notes;
		
		private int _Prints;
		
		public vewSalesInvoice()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheNumber", DbType="BigInt NOT NULL")]
		public long TheNumber
		{
			get
			{
				return this._TheNumber;
			}
			set
			{
				if ((this._TheNumber != value))
				{
					this._TheNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeAccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ExchangeAccountName
		{
			get
			{
				return this._ExchangeAccountName;
			}
			set
			{
				if ((this._ExchangeAccountName != value))
				{
					this._ExchangeAccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicesType", DbType="Int NOT NULL")]
		public int InvoicesType
		{
			get
			{
				return this._InvoicesType;
			}
			set
			{
				if ((this._InvoicesType != value))
				{
					this._InvoicesType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(10,3) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_net", DbType="Decimal(13,3)")]
		public System.Nullable<decimal> net
		{
			get
			{
				return this._net;
			}
			set
			{
				if ((this._net != value))
				{
					this._net = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Decimal(10,3) NOT NULL")]
		public decimal Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this._Paid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remaing", DbType="Decimal(10,3) NOT NULL")]
		public decimal Remaing
		{
			get
			{
				return this._Remaing;
			}
			set
			{
				if ((this._Remaing != value))
				{
					this._Remaing = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxValue", DbType="Decimal(10,3) NOT NULL")]
		public decimal TaxValue
		{
			get
			{
				return this._TaxValue;
			}
			set
			{
				if ((this._TaxValue != value))
				{
					this._TaxValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Decimal(10,3) NOT NULL")]
		public decimal Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this._Tax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expences", DbType="Decimal(10,3) NOT NULL")]
		public decimal Expences
		{
			get
			{
				return this._Expences;
			}
			set
			{
				if ((this._Expences != value))
				{
					this._Expences = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescountPercent", DbType="Decimal(10,3) NOT NULL")]
		public decimal DescountPercent
		{
			get
			{
				return this._DescountPercent;
			}
			set
			{
				if ((this._DescountPercent != value))
				{
					this._DescountPercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescountValue", DbType="Decimal(10,3) NOT NULL")]
		public decimal DescountValue
		{
			get
			{
				return this._DescountValue;
			}
			set
			{
				if ((this._DescountValue != value))
				{
					this._DescountValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt NOT NULL")]
		public long AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeAccountID", DbType="BigInt NOT NULL")]
		public long ExchangeAccountID
		{
			get
			{
				return this._ExchangeAccountID;
			}
			set
			{
				if ((this._ExchangeAccountID != value))
				{
					this._ExchangeAccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="Date NOT NULL")]
		public System.DateTime TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this._TheDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelivaryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DelivaryDate
		{
			get
			{
				return this._DelivaryDate;
			}
			set
			{
				if ((this._DelivaryDate != value))
				{
					this._DelivaryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress", DbType="VarChar(MAX)")]
		public string ShippingAddress
		{
			get
			{
				return this._ShippingAddress;
			}
			set
			{
				if ((this._ShippingAddress != value))
				{
					this._ShippingAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prints", DbType="Int NOT NULL")]
		public int Prints
		{
			get
			{
				return this._Prints;
			}
			set
			{
				if ((this._Prints != value))
				{
					this._Prints = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsers")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _UserName;
		
		private bool _IsDisabled;
		
		private string _UserPassword;
		
		private byte _UserType;
		
		private long _SettingsProfileID;
		
		private System.Nullable<long> _ScreenProfileID;
		
		private System.Nullable<long> _UserID;
		
		private System.DateTime _EnterTime;
		
		private EntitySet<tblCurrency> _tblCurrencies;
		
		private EntitySet<tblCurrenciesPrice> _tblCurrenciesPrices;
		
		private EntitySet<tblCurrenciesPricesUpdate> _tblCurrenciesPricesUpdates;
		
		private EntitySet<tblDocument> _tblDocuments;
		
		private EntitySet<tblEntry> _tblEntries;
		
		private EntitySet<tblReceiving> _tblReceivings;
		
		private EntitySet<tblProducts> _tblProducts;
		
		private EntitySet<tblSpending> _tblSpendings;
		
		private EntitySet<tblSalesInvoice> _tblSalesInvoices;
		
		private EntitySet<tblPurchaseInvoice> _tblPurchaseInvoices;
		
		private EntitySet<tblSalesInvoicesDetaile> _tblSalesInvoicesDetailes;
		
		private EntitySet<tblPurchaseInvoicesDetaile> _tblPurchaseInvoicesDetailes;
		
		private EntitySet<tblAccountsDelegation> _tblAccountsDelegations;
		
		private EntitySet<tblSMS_CustomersDirectory> _tblSMS_CustomersDirectories;
		
		private EntitySet<tblSMS_SendMessage> _tblSMS_SendMessages;
		
		private EntitySet<tblSMS_SMSMessage> _tblSMS_SMSMessages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnUserTypeChanging(byte value);
    partial void OnUserTypeChanged();
    partial void OnSettingsProfileIDChanging(long value);
    partial void OnSettingsProfileIDChanged();
    partial void OnScreenProfileIDChanging(System.Nullable<long> value);
    partial void OnScreenProfileIDChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.DateTime value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblUser()
		{
			this._tblCurrencies = new EntitySet<tblCurrency>(new Action<tblCurrency>(this.attach_tblCurrencies), new Action<tblCurrency>(this.detach_tblCurrencies));
			this._tblCurrenciesPrices = new EntitySet<tblCurrenciesPrice>(new Action<tblCurrenciesPrice>(this.attach_tblCurrenciesPrices), new Action<tblCurrenciesPrice>(this.detach_tblCurrenciesPrices));
			this._tblCurrenciesPricesUpdates = new EntitySet<tblCurrenciesPricesUpdate>(new Action<tblCurrenciesPricesUpdate>(this.attach_tblCurrenciesPricesUpdates), new Action<tblCurrenciesPricesUpdate>(this.detach_tblCurrenciesPricesUpdates));
			this._tblDocuments = new EntitySet<tblDocument>(new Action<tblDocument>(this.attach_tblDocuments), new Action<tblDocument>(this.detach_tblDocuments));
			this._tblEntries = new EntitySet<tblEntry>(new Action<tblEntry>(this.attach_tblEntries), new Action<tblEntry>(this.detach_tblEntries));
			this._tblReceivings = new EntitySet<tblReceiving>(new Action<tblReceiving>(this.attach_tblReceivings), new Action<tblReceiving>(this.detach_tblReceivings));
			this._tblProducts = new EntitySet<tblProducts>(new Action<tblProducts>(this.attach_tblProducts), new Action<tblProducts>(this.detach_tblProducts));
			this._tblSpendings = new EntitySet<tblSpending>(new Action<tblSpending>(this.attach_tblSpendings), new Action<tblSpending>(this.detach_tblSpendings));
			this._tblSalesInvoices = new EntitySet<tblSalesInvoice>(new Action<tblSalesInvoice>(this.attach_tblSalesInvoices), new Action<tblSalesInvoice>(this.detach_tblSalesInvoices));
			this._tblPurchaseInvoices = new EntitySet<tblPurchaseInvoice>(new Action<tblPurchaseInvoice>(this.attach_tblPurchaseInvoices), new Action<tblPurchaseInvoice>(this.detach_tblPurchaseInvoices));
			this._tblSalesInvoicesDetailes = new EntitySet<tblSalesInvoicesDetaile>(new Action<tblSalesInvoicesDetaile>(this.attach_tblSalesInvoicesDetailes), new Action<tblSalesInvoicesDetaile>(this.detach_tblSalesInvoicesDetailes));
			this._tblPurchaseInvoicesDetailes = new EntitySet<tblPurchaseInvoicesDetaile>(new Action<tblPurchaseInvoicesDetaile>(this.attach_tblPurchaseInvoicesDetailes), new Action<tblPurchaseInvoicesDetaile>(this.detach_tblPurchaseInvoicesDetailes));
			this._tblAccountsDelegations = new EntitySet<tblAccountsDelegation>(new Action<tblAccountsDelegation>(this.attach_tblAccountsDelegations), new Action<tblAccountsDelegation>(this.detach_tblAccountsDelegations));
			this._tblSMS_CustomersDirectories = new EntitySet<tblSMS_CustomersDirectory>(new Action<tblSMS_CustomersDirectory>(this.attach_tblSMS_CustomersDirectories), new Action<tblSMS_CustomersDirectory>(this.detach_tblSMS_CustomersDirectories));
			this._tblSMS_SendMessages = new EntitySet<tblSMS_SendMessage>(new Action<tblSMS_SendMessage>(this.attach_tblSMS_SendMessages), new Action<tblSMS_SendMessage>(this.detach_tblSMS_SendMessages));
			this._tblSMS_SMSMessages = new EntitySet<tblSMS_SMSMessage>(new Action<tblSMS_SMSMessage>(this.attach_tblSMS_SMSMessages), new Action<tblSMS_SMSMessage>(this.detach_tblSMS_SMSMessages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="VarChar(50)")]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="TinyInt NOT NULL")]
		public byte UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingsProfileID", DbType="BigInt NOT NULL")]
		public long SettingsProfileID
		{
			get
			{
				return this._SettingsProfileID;
			}
			set
			{
				if ((this._SettingsProfileID != value))
				{
					this.OnSettingsProfileIDChanging(value);
					this.SendPropertyChanging();
					this._SettingsProfileID = value;
					this.SendPropertyChanged("SettingsProfileID");
					this.OnSettingsProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenProfileID", DbType="BigInt")]
		public System.Nullable<long> ScreenProfileID
		{
			get
			{
				return this._ScreenProfileID;
			}
			set
			{
				if ((this._ScreenProfileID != value))
				{
					this.OnScreenProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ScreenProfileID = value;
					this.SendPropertyChanged("ScreenProfileID");
					this.OnScreenProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime NOT NULL")]
		public System.DateTime EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblCurrency", Storage="_tblCurrencies", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblCurrency> tblCurrencies
		{
			get
			{
				return this._tblCurrencies;
			}
			set
			{
				this._tblCurrencies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblCurrenciesPrice", Storage="_tblCurrenciesPrices", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblCurrenciesPrice> tblCurrenciesPrices
		{
			get
			{
				return this._tblCurrenciesPrices;
			}
			set
			{
				this._tblCurrenciesPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblCurrenciesPricesUpdate", Storage="_tblCurrenciesPricesUpdates", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblCurrenciesPricesUpdate> tblCurrenciesPricesUpdates
		{
			get
			{
				return this._tblCurrenciesPricesUpdates;
			}
			set
			{
				this._tblCurrenciesPricesUpdates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblDocument", Storage="_tblDocuments", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblDocument> tblDocuments
		{
			get
			{
				return this._tblDocuments;
			}
			set
			{
				this._tblDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblEntry", Storage="_tblEntries", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblEntry> tblEntries
		{
			get
			{
				return this._tblEntries;
			}
			set
			{
				this._tblEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblReceiving", Storage="_tblReceivings", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblReceiving> tblReceivings
		{
			get
			{
				return this._tblReceivings;
			}
			set
			{
				this._tblReceivings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblProducts", Storage="_tblProducts", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblProducts> tblProducts
		{
			get
			{
				return this._tblProducts;
			}
			set
			{
				this._tblProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblSpending", Storage="_tblSpendings", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblSpending> tblSpendings
		{
			get
			{
				return this._tblSpendings;
			}
			set
			{
				this._tblSpendings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblSalesInvoice", Storage="_tblSalesInvoices", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblSalesInvoice> tblSalesInvoices
		{
			get
			{
				return this._tblSalesInvoices;
			}
			set
			{
				this._tblSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblPurchaseInvoice", Storage="_tblPurchaseInvoices", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblPurchaseInvoice> tblPurchaseInvoices
		{
			get
			{
				return this._tblPurchaseInvoices;
			}
			set
			{
				this._tblPurchaseInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblSalesInvoicesDetaile", Storage="_tblSalesInvoicesDetailes", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblSalesInvoicesDetaile> tblSalesInvoicesDetailes
		{
			get
			{
				return this._tblSalesInvoicesDetailes;
			}
			set
			{
				this._tblSalesInvoicesDetailes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblPurchaseInvoicesDetaile", Storage="_tblPurchaseInvoicesDetailes", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblPurchaseInvoicesDetaile> tblPurchaseInvoicesDetailes
		{
			get
			{
				return this._tblPurchaseInvoicesDetailes;
			}
			set
			{
				this._tblPurchaseInvoicesDetailes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblAccountsDelegation", Storage="_tblAccountsDelegations", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblAccountsDelegation> tblAccountsDelegations
		{
			get
			{
				return this._tblAccountsDelegations;
			}
			set
			{
				this._tblAccountsDelegations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblSMS_CustomersDirectory", Storage="_tblSMS_CustomersDirectories", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblSMS_CustomersDirectory> tblSMS_CustomersDirectories
		{
			get
			{
				return this._tblSMS_CustomersDirectories;
			}
			set
			{
				this._tblSMS_CustomersDirectories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblSMS_SendMessage", Storage="_tblSMS_SendMessages", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblSMS_SendMessage> tblSMS_SendMessages
		{
			get
			{
				return this._tblSMS_SendMessages;
			}
			set
			{
				this._tblSMS_SendMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblSMS_SMSMessage", Storage="_tblSMS_SMSMessages", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tblSMS_SMSMessage> tblSMS_SMSMessages
		{
			get
			{
				return this._tblSMS_SMSMessages;
			}
			set
			{
				this._tblSMS_SMSMessages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCurrencies(tblCurrency entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblCurrencies(tblCurrency entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblCurrenciesPrices(tblCurrenciesPrice entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblCurrenciesPrices(tblCurrenciesPrice entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblCurrenciesPricesUpdates(tblCurrenciesPricesUpdate entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblCurrenciesPricesUpdates(tblCurrenciesPricesUpdate entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblDocuments(tblDocument entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblDocuments(tblDocument entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblEntries(tblEntry entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblEntries(tblEntry entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblReceivings(tblReceiving entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblReceivings(tblReceiving entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblProducts(tblProducts entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblProducts(tblProducts entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblSpendings(tblSpending entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblSpendings(tblSpending entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblSalesInvoices(tblSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblSalesInvoices(tblSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblPurchaseInvoices(tblPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblPurchaseInvoices(tblPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblSalesInvoicesDetailes(tblSalesInvoicesDetaile entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblSalesInvoicesDetailes(tblSalesInvoicesDetaile entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblPurchaseInvoicesDetailes(tblPurchaseInvoicesDetaile entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblPurchaseInvoicesDetailes(tblPurchaseInvoicesDetaile entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblAccountsDelegations(tblAccountsDelegation entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblAccountsDelegations(tblAccountsDelegation entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblSMS_CustomersDirectories(tblSMS_CustomersDirectory entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblSMS_CustomersDirectories(tblSMS_CustomersDirectory entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblSMS_SendMessages(tblSMS_SendMessage entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblSMS_SendMessages(tblSMS_SendMessage entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblSMS_SMSMessages(tblSMS_SMSMessage entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblSMS_SMSMessages(tblSMS_SMSMessage entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSMS_CustomersDirectory")]
	public partial class tblSMS_CustomersDirectory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _AccountID;
		
		private string _MobileNumbers;
		
		private string _Notes;
		
		private long _UserID;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private bool _SendSMSWithoutBalance;
		
		private bool _notificationsReceiving;
		
		private bool _notificationsSpending;
		
		private bool _notificationsSales;
		
		private bool _notificationsPurchase;
		
		private EntityRef<tblAccounts> _tblAccounts;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAccountIDChanging(long value);
    partial void OnAccountIDChanged();
    partial void OnMobileNumbersChanging(string value);
    partial void OnMobileNumbersChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    partial void OnSendSMSWithoutBalanceChanging(bool value);
    partial void OnSendSMSWithoutBalanceChanged();
    partial void OnnotificationsReceivingChanging(bool value);
    partial void OnnotificationsReceivingChanged();
    partial void OnnotificationsSpendingChanging(bool value);
    partial void OnnotificationsSpendingChanged();
    partial void OnnotificationsSalesChanging(bool value);
    partial void OnnotificationsSalesChanged();
    partial void OnnotificationsPurchaseChanging(bool value);
    partial void OnnotificationsPurchaseChanged();
    #endregion
		
		public tblSMS_CustomersDirectory()
		{
			this._tblAccounts = default(EntityRef<tblAccounts>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt NOT NULL")]
		public long AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._tblAccounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumbers", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MobileNumbers
		{
			get
			{
				return this._MobileNumbers;
			}
			set
			{
				if ((this._MobileNumbers != value))
				{
					this.OnMobileNumbersChanging(value);
					this.SendPropertyChanging();
					this._MobileNumbers = value;
					this.SendPropertyChanged("MobileNumbers");
					this.OnMobileNumbersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendSMSWithoutBalance", DbType="Bit NOT NULL")]
		public bool SendSMSWithoutBalance
		{
			get
			{
				return this._SendSMSWithoutBalance;
			}
			set
			{
				if ((this._SendSMSWithoutBalance != value))
				{
					this.OnSendSMSWithoutBalanceChanging(value);
					this.SendPropertyChanging();
					this._SendSMSWithoutBalance = value;
					this.SendPropertyChanged("SendSMSWithoutBalance");
					this.OnSendSMSWithoutBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notificationsReceiving", DbType="Bit NOT NULL")]
		public bool notificationsReceiving
		{
			get
			{
				return this._notificationsReceiving;
			}
			set
			{
				if ((this._notificationsReceiving != value))
				{
					this.OnnotificationsReceivingChanging(value);
					this.SendPropertyChanging();
					this._notificationsReceiving = value;
					this.SendPropertyChanged("notificationsReceiving");
					this.OnnotificationsReceivingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notificationsSpending", DbType="Bit NOT NULL")]
		public bool notificationsSpending
		{
			get
			{
				return this._notificationsSpending;
			}
			set
			{
				if ((this._notificationsSpending != value))
				{
					this.OnnotificationsSpendingChanging(value);
					this.SendPropertyChanging();
					this._notificationsSpending = value;
					this.SendPropertyChanged("notificationsSpending");
					this.OnnotificationsSpendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notificationsSales", DbType="Bit NOT NULL")]
		public bool notificationsSales
		{
			get
			{
				return this._notificationsSales;
			}
			set
			{
				if ((this._notificationsSales != value))
				{
					this.OnnotificationsSalesChanging(value);
					this.SendPropertyChanging();
					this._notificationsSales = value;
					this.SendPropertyChanged("notificationsSales");
					this.OnnotificationsSalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notificationsPurchase", DbType="Bit NOT NULL")]
		public bool notificationsPurchase
		{
			get
			{
				return this._notificationsPurchase;
			}
			set
			{
				if ((this._notificationsPurchase != value))
				{
					this.OnnotificationsPurchaseChanging(value);
					this.SendPropertyChanging();
					this._notificationsPurchase = value;
					this.SendPropertyChanged("notificationsPurchase");
					this.OnnotificationsPurchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccounts_tblSMS_CustomersDirectory", Storage="_tblAccounts", ThisKey="AccountID", OtherKey="ID", IsForeignKey=true)]
		public tblAccounts tblAccounts
		{
			get
			{
				return this._tblAccounts.Entity;
			}
			set
			{
				tblAccounts previousValue = this._tblAccounts.Entity;
				if (((previousValue != value) 
							|| (this._tblAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAccounts.Entity = null;
						previousValue.tblSMS_CustomersDirectories.Remove(this);
					}
					this._tblAccounts.Entity = value;
					if ((value != null))
					{
						value.tblSMS_CustomersDirectories.Add(this);
						this._AccountID = value.ID;
					}
					else
					{
						this._AccountID = default(long);
					}
					this.SendPropertyChanged("tblAccounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblSMS_CustomersDirectory", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblSMS_CustomersDirectories.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblSMS_CustomersDirectories.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSMS_SendMessage")]
	public partial class tblSMS_SendMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.DateTime> _TheDate;
		
		private string _MessageText;
		
		private System.Nullable<long> _ReceiverStateID;
		
		private string _ReceiverNumber;
		
		private System.Nullable<long> _ReceiverPersonID;
		
		private string _Notes;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTheDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTheDateChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    partial void OnReceiverStateIDChanging(System.Nullable<long> value);
    partial void OnReceiverStateIDChanged();
    partial void OnReceiverNumberChanging(string value);
    partial void OnReceiverNumberChanged();
    partial void OnReceiverPersonIDChanging(System.Nullable<long> value);
    partial void OnReceiverPersonIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    #endregion
		
		public tblSMS_SendMessage()
		{
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this.OnTheDateChanging(value);
					this.SendPropertyChanging();
					this._TheDate = value;
					this.SendPropertyChanged("TheDate");
					this.OnTheDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="VarChar(MAX)")]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this.OnMessageTextChanging(value);
					this.SendPropertyChanging();
					this._MessageText = value;
					this.SendPropertyChanged("MessageText");
					this.OnMessageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverStateID", DbType="BigInt")]
		public System.Nullable<long> ReceiverStateID
		{
			get
			{
				return this._ReceiverStateID;
			}
			set
			{
				if ((this._ReceiverStateID != value))
				{
					this.OnReceiverStateIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiverStateID = value;
					this.SendPropertyChanged("ReceiverStateID");
					this.OnReceiverStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverNumber", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ReceiverNumber
		{
			get
			{
				return this._ReceiverNumber;
			}
			set
			{
				if ((this._ReceiverNumber != value))
				{
					this.OnReceiverNumberChanging(value);
					this.SendPropertyChanging();
					this._ReceiverNumber = value;
					this.SendPropertyChanged("ReceiverNumber");
					this.OnReceiverNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverPersonID", DbType="BigInt")]
		public System.Nullable<long> ReceiverPersonID
		{
			get
			{
				return this._ReceiverPersonID;
			}
			set
			{
				if ((this._ReceiverPersonID != value))
				{
					this.OnReceiverPersonIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiverPersonID = value;
					this.SendPropertyChanged("ReceiverPersonID");
					this.OnReceiverPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblSMS_SendMessage", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblSMS_SendMessages.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblSMS_SendMessages.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSMS_SMSMessages")]
	public partial class tblSMS_SMSMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.DateTime> _TheDate;
		
		private string _MsgText;
		
		private System.Nullable<int> _MsgLength;
		
		private string _MsgStatus;
		
		private string _Receivers;
		
		private string _Notes;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<System.DateTime> _EnterTime;
		
		private string _SMSType;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTheDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTheDateChanged();
    partial void OnMsgTextChanging(string value);
    partial void OnMsgTextChanged();
    partial void OnMsgLengthChanging(System.Nullable<int> value);
    partial void OnMsgLengthChanged();
    partial void OnMsgStatusChanging(string value);
    partial void OnMsgStatusChanged();
    partial void OnReceiversChanging(string value);
    partial void OnReceiversChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnEnterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterTimeChanged();
    partial void OnSMSTypeChanging(string value);
    partial void OnSMSTypeChanged();
    #endregion
		
		public tblSMS_SMSMessage()
		{
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TheDate
		{
			get
			{
				return this._TheDate;
			}
			set
			{
				if ((this._TheDate != value))
				{
					this.OnTheDateChanging(value);
					this.SendPropertyChanging();
					this._TheDate = value;
					this.SendPropertyChanged("TheDate");
					this.OnTheDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgText", DbType="NVarChar(300)")]
		public string MsgText
		{
			get
			{
				return this._MsgText;
			}
			set
			{
				if ((this._MsgText != value))
				{
					this.OnMsgTextChanging(value);
					this.SendPropertyChanging();
					this._MsgText = value;
					this.SendPropertyChanged("MsgText");
					this.OnMsgTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgLength", DbType="Int")]
		public System.Nullable<int> MsgLength
		{
			get
			{
				return this._MsgLength;
			}
			set
			{
				if ((this._MsgLength != value))
				{
					this.OnMsgLengthChanging(value);
					this.SendPropertyChanging();
					this._MsgLength = value;
					this.SendPropertyChanged("MsgLength");
					this.OnMsgLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgStatus", DbType="NVarChar(50)")]
		public string MsgStatus
		{
			get
			{
				return this._MsgStatus;
			}
			set
			{
				if ((this._MsgStatus != value))
				{
					this.OnMsgStatusChanging(value);
					this.SendPropertyChanging();
					this._MsgStatus = value;
					this.SendPropertyChanged("MsgStatus");
					this.OnMsgStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receivers", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Receivers
		{
			get
			{
				return this._Receivers;
			}
			set
			{
				if ((this._Receivers != value))
				{
					this.OnReceiversChanging(value);
					this.SendPropertyChanging();
					this._Receivers = value;
					this.SendPropertyChanged("Receivers");
					this.OnReceiversChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterTime
		{
			get
			{
				return this._EnterTime;
			}
			set
			{
				if ((this._EnterTime != value))
				{
					this.OnEnterTimeChanging(value);
					this.SendPropertyChanging();
					this._EnterTime = value;
					this.SendPropertyChanged("EnterTime");
					this.OnEnterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSType", DbType="NVarChar(MAX)")]
		public string SMSType
		{
			get
			{
				return this._SMSType;
			}
			set
			{
				if ((this._SMSType != value))
				{
					this.OnSMSTypeChanging(value);
					this.SendPropertyChanging();
					this._SMSType = value;
					this.SendPropertyChanged("SMSType");
					this.OnSMSTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblSMS_SMSMessage", Storage="_tblUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblSMS_SMSMessages.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblSMS_SMSMessages.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vewReceiving")]
	public partial class vewReceiving
	{
		
		private long _ID;
		
		private long _الرقم;
		
		private System.Nullable<System.DateTime> _التاريخ;
		
		private string _طريقة_القبض;
		
		private decimal _المبلغ;
		
		private string _العملة;
		
		private string _الصندوق;
		
		private decimal _مبلغ_الحساب;
		
		private string _عملة_الحساب;
		
		private string _اسم_الحساب;
		
		private string _ملاحظات;
		
		private string _مناولة;
		
		private string _المستخدم;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<System.DateTime> _وقت_الإدخال;
		
		private System.Nullable<long> _الطبعات;
		
		private System.Nullable<long> _EntryID;
		
		private System.Nullable<long> _ExchangeAccountID;
		
		public vewReceiving()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الرقم", DbType="BigInt NOT NULL")]
		public long الرقم
		{
			get
			{
				return this._الرقم;
			}
			set
			{
				if ((this._الرقم != value))
				{
					this._الرقم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_التاريخ", DbType="DateTime")]
		public System.Nullable<System.DateTime> التاريخ
		{
			get
			{
				return this._التاريخ;
			}
			set
			{
				if ((this._التاريخ != value))
				{
					this._التاريخ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[طريقة القبض]", Storage="_طريقة_القبض", DbType="VarChar(50)")]
		public string طريقة_القبض
		{
			get
			{
				return this._طريقة_القبض;
			}
			set
			{
				if ((this._طريقة_القبض != value))
				{
					this._طريقة_القبض = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المبلغ", DbType="Decimal(18,6) NOT NULL")]
		public decimal المبلغ
		{
			get
			{
				return this._المبلغ;
			}
			set
			{
				if ((this._المبلغ != value))
				{
					this._المبلغ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_العملة", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string العملة
		{
			get
			{
				return this._العملة;
			}
			set
			{
				if ((this._العملة != value))
				{
					this._العملة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الصندوق", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string الصندوق
		{
			get
			{
				return this._الصندوق;
			}
			set
			{
				if ((this._الصندوق != value))
				{
					this._الصندوق = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[مبلغ الحساب]", Storage="_مبلغ_الحساب", DbType="Decimal(18,6) NOT NULL")]
		public decimal مبلغ_الحساب
		{
			get
			{
				return this._مبلغ_الحساب;
			}
			set
			{
				if ((this._مبلغ_الحساب != value))
				{
					this._مبلغ_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[عملة الحساب]", Storage="_عملة_الحساب", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string عملة_الحساب
		{
			get
			{
				return this._عملة_الحساب;
			}
			set
			{
				if ((this._عملة_الحساب != value))
				{
					this._عملة_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم الحساب]", Storage="_اسم_الحساب", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string اسم_الحساب
		{
			get
			{
				return this._اسم_الحساب;
			}
			set
			{
				if ((this._اسم_الحساب != value))
				{
					this._اسم_الحساب = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ملاحظات", DbType="VarChar(255)")]
		public string ملاحظات
		{
			get
			{
				return this._ملاحظات;
			}
			set
			{
				if ((this._ملاحظات != value))
				{
					this._ملاحظات = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_مناولة", DbType="VarChar(150)")]
		public string مناولة
		{
			get
			{
				return this._مناولة;
			}
			set
			{
				if ((this._مناولة != value))
				{
					this._مناولة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_المستخدم", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string المستخدم
		{
			get
			{
				return this._المستخدم;
			}
			set
			{
				if ((this._المستخدم != value))
				{
					this._المستخدم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[وقت الإدخال]", Storage="_وقت_الإدخال", DbType="DateTime")]
		public System.Nullable<System.DateTime> وقت_الإدخال
		{
			get
			{
				return this._وقت_الإدخال;
			}
			set
			{
				if ((this._وقت_الإدخال != value))
				{
					this._وقت_الإدخال = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الطبعات", DbType="BigInt")]
		public System.Nullable<long> الطبعات
		{
			get
			{
				return this._الطبعات;
			}
			set
			{
				if ((this._الطبعات != value))
				{
					this._الطبعات = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", DbType="BigInt")]
		public System.Nullable<long> EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					this._EntryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeAccountID", DbType="BigInt")]
		public System.Nullable<long> ExchangeAccountID
		{
			get
			{
				return this._ExchangeAccountID;
			}
			set
			{
				if ((this._ExchangeAccountID != value))
				{
					this._ExchangeAccountID = value;
				}
			}
		}
	}
	
	public partial class PROvewDetailedPreviousBalanceSearchResult
	{
		
		private string _مدين;
		
		private string _دائن;
		
		private string _العملة;
		
		private string _نوع_المستند;
		
		private string _التاريخ;
		
		private string _البيان;
		
		public PROvewDetailedPreviousBalanceSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_مدين", DbType="VarChar(30)")]
		public string مدين
		{
			get
			{
				return this._مدين;
			}
			set
			{
				if ((this._مدين != value))
				{
					this._مدين = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_دائن", DbType="VarChar(30)")]
		public string دائن
		{
			get
			{
				return this._دائن;
			}
			set
			{
				if ((this._دائن != value))
				{
					this._دائن = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_العملة", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string العملة
		{
			get
			{
				return this._العملة;
			}
			set
			{
				if ((this._العملة != value))
				{
					this._العملة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[نوع المستند]", Storage="_نوع_المستند", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string نوع_المستند
		{
			get
			{
				return this._نوع_المستند;
			}
			set
			{
				if ((this._نوع_المستند != value))
				{
					this._نوع_المستند = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_التاريخ", DbType="VarChar(30)")]
		public string التاريخ
		{
			get
			{
				return this._التاريخ;
			}
			set
			{
				if ((this._التاريخ != value))
				{
					this._التاريخ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_البيان", DbType="VarChar(255)")]
		public string البيان
		{
			get
			{
				return this._البيان;
			}
			set
			{
				if ((this._البيان != value))
				{
					this._البيان = value;
				}
			}
		}
	}
	
	public partial class PROvewDetailedSearchResult
	{
		
		private string _مدين;
		
		private string _دائن;
		
		private string _العملة;
		
		private string _نوع_المستند;
		
		private string _التاريخ;
		
		private string _البيان;
		
		public PROvewDetailedSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_مدين", DbType="VarChar(30)")]
		public string مدين
		{
			get
			{
				return this._مدين;
			}
			set
			{
				if ((this._مدين != value))
				{
					this._مدين = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_دائن", DbType="VarChar(30)")]
		public string دائن
		{
			get
			{
				return this._دائن;
			}
			set
			{
				if ((this._دائن != value))
				{
					this._دائن = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_العملة", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string العملة
		{
			get
			{
				return this._العملة;
			}
			set
			{
				if ((this._العملة != value))
				{
					this._العملة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[نوع المستند]", Storage="_نوع_المستند", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string نوع_المستند
		{
			get
			{
				return this._نوع_المستند;
			}
			set
			{
				if ((this._نوع_المستند != value))
				{
					this._نوع_المستند = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_التاريخ", DbType="VarChar(30)")]
		public string التاريخ
		{
			get
			{
				return this._التاريخ;
			}
			set
			{
				if ((this._التاريخ != value))
				{
					this._التاريخ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_البيان", DbType="VarChar(255)")]
		public string البيان
		{
			get
			{
				return this._البيان;
			}
			set
			{
				if ((this._البيان != value))
				{
					this._البيان = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
